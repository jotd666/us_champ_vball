	.include "data.inc"
	.include "breakpoint.inc"
	.global	nmi_ee9e
	.global	reset_eea1

* game performs indirect jump to 0000
* sometimes it's a jump table, but sometimes it's
* an address that was set by the game as return callback
* there are 2 known addresses: callback_9280 and

    .macro  CB_CASE  msb,lsb
    cmp.w    #0x\lsb\msb,(a6)
    jne        0f
    clr.w     (a6)   | "ack" callback
    jra        callback_\msb\lsb
0:
    .endm
invalid_0000:
    BREAKPOINT  "invalid jump table entry"
    illegal

callback_0000:
    CB_CASE     93,e7
    CB_CASE     92,d1
    CB_CASE     9a,3d
    CB_CASE     99,f2
    CB_CASE     99,9d
    CB_CASE     92,80
    CB_CASE     92,37
    CB_CASE     95,15
    CB_CASE     95,8e
    CB_CASE     99,9d
    CB_CASE     99,be
    CB_CASE     9c,16
    BREAKPOINT    "callback 0000 unknown"
    rts

escape_from_irq:
    move.l #jump_eff5,d0
    jbra osd_set_irq_return_address

jump_eff5:
    lea stack_top,a7
    jra l_eff5
* Converted with 6502to68k by JOTD
*
* make sure you call "cpu_init" first so bits 8-15 of data registers
* are zeroed out so we can use (ax,dy.w) addressing mode
* without systematic masking
*
* WARNING: you also have to add clr.w d1 and clr.w d2
* at start of any interrupt you could hook
* we don't want to mask those at each X,Y indexed instruction
* for performance reasons

	.include	"us_champ_vball.inc"
	.global	cpu_init
cpu_init:
	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	rts

* US Championship Volleyball
* disassembly by JOTD (c) 2025
*
*	map(0x0000, 0x07ff).ram();
*	map(0x0800, 0x08ff).ram().share(m_spriteram);
*	map(0x1000, 0x1000).portr("P1");
*	map(0x1001, 0x1001).portr("P2");
*	map(0x1002, 0x1002).portr("SYSTEM");
*	map(0x1003, 0x1003).portr("DSW1");
*	map(0x1004, 0x1004).portr("DSW2");
*	map(0x1005, 0x1005).portr("P3");
*	map(0x1006, 0x1006).portr("P4");
*	map(0x1008, 0x1008).w(FUNC(vball_state::scrollx_hi_w));
*	map(0x1009, 0x1009).w(FUNC(vball_state::bankswitch_w));  // also contains scrolly_hi
*	map(0x100a, 0x100b).w(FUNC(vball_state::irq_ack_w));  // is there a scanline counter here?
*	map(0x100c, 0x100c).w(FUNC(vball_state::scrollx_lo_w));
*	map(0x100d, 0x100d).w("soundlatch", FUNC(generic_latch_8_device::write));
*	map(0x100e, 0x100e).writeonly().share(m_scrolly_lo);
*	map(0x2000, 0x2fff).w(FUNC(vball_state::videoram_w)).share(m_videoram); <- this seems write only!
*	map(0x3000, 0x3fff).w(FUNC(vball_state::attrib_w)).share(m_attribram);
*	map(0x4000, 0x7fff).bankr(m_mainbank);
*	map(0x8000, 0xffff).rom();

*	PORT_START("P1")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_8WAY PORT_PLAYER(1)
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_8WAY PORT_PLAYER(1)
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_8WAY PORT_PLAYER(1)
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_8WAY PORT_PLAYER(1)
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(1)
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(1)
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_START1 )
*
*	PORT_START("P2")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_8WAY PORT_PLAYER(2)
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_8WAY PORT_PLAYER(2)
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_8WAY PORT_PLAYER(2)
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_8WAY PORT_PLAYER(2)
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(2)
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(2)
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_START2 )
*
*	PORT_START("SYSTEM")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_COIN1 )
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_COIN2 )
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_SERVICE1 )
*	PORT_BIT( 0x08, IP_ACTIVE_HIGH, IPT_CUSTOM ) PORT_VBLANK("screen")
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNUSED )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNUSED )
*
*	PORT_START("DSW1")
*	PORT_DIPNAME( 0x03, 0x03, DEF_STR( Difficulty ) )   PORT_DIPLOCATION("SW1:1,2") // Verified against Taito's US Vball manual
*	PORT_DIPSETTING(    0x02, DEF_STR( Easy ) )
*	PORT_DIPSETTING(    0x03, DEF_STR( Medium ) )
*	PORT_DIPSETTING(    0x01, DEF_STR( Hard ) )
*	PORT_DIPSETTING(    0x00, DEF_STR( Very_Hard ) )
*	PORT_DIPNAME( 0x0c, 0x00, "Single Player Game Time")    PORT_DIPLOCATION("SW1:3,4")
*	PORT_DIPSETTING(    0x00, "1:15")
*	PORT_DIPSETTING(    0x04, "1:30")
*	PORT_DIPSETTING(    0x0c, "1:45")
*	PORT_DIPSETTING(    0x08, "2:00")
*	PORT_DIPNAME( 0x30, 0x00, "Start Buttons (4-player)")   PORT_DIPLOCATION("SW1:5,6")
*	PORT_DIPSETTING(    0x00, DEF_STR( Normal ) )
*	PORT_DIPSETTING(    0x20, "Button A")
*	PORT_DIPSETTING(    0x10, "Button B")
*	PORT_DIPSETTING(    0x30, DEF_STR( Normal ) )
*	PORT_DIPNAME( 0x40, 0x40, "PL 1&4 (4-player)")      PORT_DIPLOCATION("SW1:7")
*	PORT_DIPSETTING(    0x40, DEF_STR( Normal ) )
*	PORT_DIPSETTING(    0x00, "Rotate 90")
*	PORT_DIPNAME( 0x80, 0x00, "Player Mode")        PORT_DIPLOCATION("SW1:8")
*	PORT_DIPSETTING(    0x80, "2 Players")
*	PORT_DIPSETTING(    0x00, "4 Players")
*
*	PORT_START("DSW2")
*	PORT_DIPNAME( 0x07, 0x07, DEF_STR( Coin_A ) )       PORT_DIPLOCATION("SW2:1,2,3")
*	PORT_DIPSETTING(    0x00, DEF_STR( 4C_1C ) )
*	PORT_DIPSETTING(    0x01, DEF_STR( 3C_1C ) )
*	PORT_DIPSETTING(    0x02, DEF_STR( 2C_1C ) )
*	PORT_DIPSETTING(    0x07, DEF_STR( 1C_1C ) )
*	PORT_DIPSETTING(    0x06, DEF_STR( 1C_2C ) )
*	PORT_DIPSETTING(    0x05, DEF_STR( 1C_3C ) )
*	PORT_DIPSETTING(    0x04, DEF_STR( 1C_4C ) )
*	PORT_DIPSETTING(    0x03, DEF_STR( 1C_5C ) )
*	PORT_DIPNAME( 0x38, 0x38, DEF_STR( Coin_B ) )       PORT_DIPLOCATION("SW2:4,5,6")
*	PORT_DIPSETTING(    0x00, DEF_STR( 4C_1C ) )
*	PORT_DIPSETTING(    0x08, DEF_STR( 3C_1C ) )
*	PORT_DIPSETTING(    0x10, DEF_STR( 2C_1C ) )
*	PORT_DIPSETTING(    0x38, DEF_STR( 1C_1C ) )
*	PORT_DIPSETTING(    0x30, DEF_STR( 1C_2C ) )
*	PORT_DIPSETTING(    0x28, DEF_STR( 1C_3C ) )
*	PORT_DIPSETTING(    0x20, DEF_STR( 1C_4C ) )
*	PORT_DIPSETTING(    0x18, DEF_STR( 1C_5C ) )
*	PORT_DIPNAME( 0x40, 0x00, DEF_STR( Flip_Screen ) )  PORT_DIPLOCATION("SW2:7")
*	PORT_DIPSETTING(    0x00, DEF_STR( Off ) )
*	PORT_DIPSETTING(    0x40, DEF_STR( On ) )
*	PORT_DIPNAME( 0x80, 0x80, DEF_STR( Demo_Sounds ) )  PORT_DIPLOCATION("SW2:8")
*	PORT_DIPSETTING(    0x00, DEF_STR( Off ) )
*	PORT_DIPSETTING(    0x80, DEF_STR( On ) )
*
*	PORT_START("P3")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_8WAY PORT_PLAYER(3)
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_8WAY PORT_PLAYER(3)
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_8WAY PORT_PLAYER(3)
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_8WAY PORT_PLAYER(3)
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(3)
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(3)
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_START3 )
*
*	PORT_START("P4")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT ) PORT_8WAY PORT_PLAYER(4)
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT ) PORT_8WAY PORT_PLAYER(4)
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_JOYSTICK_UP ) PORT_8WAY PORT_PLAYER(4)
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN ) PORT_8WAY PORT_PLAYER(4)
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(4)
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(4)
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_START4 )

* this is BCD

* tried to name a few variables when reversing some bits. It's possible that
* the variables (specially zero page ones) are used for other purposes
* probably used for other pointers
* as zero page pointers are precious
* != 0 only when going well out of the field

* seem to have only 0 and $5A as values
* x/y/z array of 4 players, not directly the sprites coords, the logical coords
* as the game uses a kind of isometric projection
* 0: left, 1: right, 4 values too
* $7de=16 bit scroll value 0-1FF (little endian)



* screen_id_07e4 contains the identification of the background screen
* to be displayed. Some ids seem corrupt or repeated
*
* $00: Daytona volley playfield
* $01: New-York volley playfield
* $02: Los Angeles volley playfield
* $03: Honolulu? volley playfield
* $04: Navy volley playfield
* $05: title screen
* $06: Cartoonish screen with team backstory (unused in US version)
* $07: Cartoonish screen with team backstory 2 (unused in US version)
* $08: Cartoonish screen with team backstory 3 (tournament ad) (unused in US version)
* $09: US map
* $0A: US map
* $0B: US map (trashed)
* $0C: US map (trashed)
* $0D: street background (unused in US version)
* $0E: street background (unused in US version)
* $0F: title screen (the one that is used at bootup)
* $10: high-score screen (unused)
* $11: winning screen
* $12: bare volley field, no net
* after that, other values crash the code

* code from bank 0
move_players_on_field_5bf6:
	movem.w	d0-d2,-(sp)                       	| [$5bf6: pha]
	                        	| [$5bf7: txa]
	                       	| [$5bf8: pha]
	                        	| [$5bf9: tya]
	                       	| [$5bfa: pha]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$5bfb: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$5bfd: and #$08]
	beq	l_5c04                             	| [$5bff: beq $5c04]
	jra	l_5ce0                             	| [$5c01: jra $5ce0]
* game in play
l_5c04:
	OP_R_ON_ZP_ADDRESS	move,0x47,d0 |  [$5c04: lda $47]
	bmi	l_5c27                             	| [$5c06: bmi $5c27]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c08: lda $56]
	bmi	l_5c1b                             	| [$5c0a: bmi $5c1b]
	clr.b	d0                               	| [$5c0c: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$5c0e: sta $00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$5c10: sta $01]
	jbsr	l_5cfd                            	| [$5c12: jsr $5cfd]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x80 |  [$5c15: lda $56]
										| [$5c17: ora #$80]
							|  [$5c19: sta $56]
l_5c1b:
	clr.b	d0                               	| [$5c1b: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$5c1d: sta $00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$5c1f: sta $01]
	jbsr	move_player_62ae                  	| [$5c21: jsr move_player_62ae]
	jra	l_5c6a                             	| [$5c24: jra $5c6a]
l_5c27:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c27: lda $56]
	bmi	l_5c6a                             	| [$5c29: bmi $5c6a]
	or.b	#0x80,d0                          	| [$5c2b: ora #$80]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c2d: sta $56]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$5c2f: lda $4f]
	bmi	l_5c3e                             	| [$5c31: bmi $5c3e]
	move.w	#0x1515,d0                        	| [$5c33: lda #$15]
	GET_ADDRESS	0x0316                     	| [$5c35: sta $0316]
	move.w	d0,(a0)                         	| [...]
	                  	| [$5c38: sta $0317]
	                   	| [...]
	jra	l_5c6a                             	| [$5c3b: jra $5c6a]
l_5c3e:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c3e: lda $56]
	and.b	#0x0f,d0                         	| [$5c40: and #$0f]
	cmp.b	#0x09,d0                         	| [$5c42: cmp #$09]
	beq	l_5c62                             	| [$5c44: beq $5c62]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c46: lda $56]
	and.b	#0x3f,d0                         	| [$5c48: and #$3f]
	cmp.b	#0x03,d0                         	| [$5c4a: cmp #$03]
	beq	l_5c57                             	| [$5c4c: beq $5c57]
	cmp.b	#0x04,d0                         	| [$5c4e: cmp #$04]
	beq	l_5c57                             	| [$5c50: beq $5c57]
l_5c52:
	move.b	#0x14,d0                        	| [$5c52: lda #$14]
	jra	l_5c64                             	| [$5c54: jra $5c64]
l_5c57:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$5c57: lda $53]
	cmp.b	#0x01,d0                         	| [$5c59: cmp #$01]
	jne	l_5c52                             	| [$5c5b: jne $5c52]
	move.b	#0x0b,d0                        	| [$5c5d: lda #$0b]
	jra	l_5c64                             	| [$5c5f: jra $5c64]
l_5c62:
	clr.b	d0                               	| [$5c62: lda #$00]
l_5c64:
	GET_ADDRESS	0x0316                     	| [$5c64: sta $0316]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0317                     	| [$5c67: sta $0317]
	move.b	d0,(a0)                         	| [...]
l_5c6a:
	OP_R_ON_ZP_ADDRESS	move,0x48,d0 |  [$5c6a: lda $48]
	bmi	l_5c93                             	| [$5c6c: bmi $5c93]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c6e: lda $56]
	and.b	#0x40,d0                         	| [$5c70: and #$40]
	jne	l_5c85                             	| [$5c72: jne $5c85]
	move.b	#0x01,d0                        	| [$5c74: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$5c76: sta $00]
	move.b	#0x10,d0                        	| [$5c78: lda #$10]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$5c7a: sta $01]
	jbsr	l_5cfd                            	| [$5c7c: jsr $5cfd]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x40 |  [$5c7f: lda $56]
									| [$5c81: ora #$40]
						|  [$5c83: sta $56]
l_5c85:
	move.b	#0x01,d0                        	| [$5c85: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$5c87: sta $00]
	move.b	#0x02,d0                        	| [$5c89: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$5c8b: sta $01]
	jbsr	move_player_62ae                  	| [$5c8d: jsr move_player_62ae]
	jra	l_5cda                             	| [$5c90: jra $5cda]
l_5c93:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5c93: lda $56]
	and.b	#0x40,d0                         	| [$5c95: and #$40]
	jne	l_5cda                             	| [$5c97: jne $5cda]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x40 |  [$5c99: lda $56]
	          	| [$5c9b: ora #$40]
	 |  [$5c9d: sta $56]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$5c9f: lda $4f]
	bmi	l_5cae                             	| [$5ca1: bmi $5cae]
	move.b	#0x15,d0                        	| [$5ca3: lda #$15]
	GET_ADDRESS	0x0318                     	| [$5ca5: sta $0318]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0319                     	| [$5ca8: sta $0319]
	move.b	d0,(a0)                         	| [...]
	jra	l_5cda                             	| [$5cab: jra $5cda]
l_5cae:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5cae: lda $56]
	and.b	#0x0f,d0                         	| [$5cb0: and #$0f]
	cmp.b	#0x09,d0                         	| [$5cb2: cmp #$09]
	beq	l_5cd2                             	| [$5cb4: beq $5cd2]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5cb6: lda $56]
	and.b	#0x3f,d0                         	| [$5cb8: and #$3f]
	cmp.b	#0x13,d0                         	| [$5cba: cmp #$13]
	beq	l_5cc7                             	| [$5cbc: beq $5cc7]
	cmp.b	#0x14,d0                         	| [$5cbe: cmp #$14]
	beq	l_5cc7                             	| [$5cc0: beq $5cc7]
l_5cc2:
	move.b	#0x14,d0                        	| [$5cc2: lda #$14]
	jra	l_5cd4                             	| [$5cc4: jra $5cd4]
l_5cc7:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$5cc7: lda $53]
	cmp.b	#0x01,d0                         	| [$5cc9: cmp #$01]
	jne	l_5cc2                             	| [$5ccb: jne $5cc2]
	move.b	#0x0b,d0                        	| [$5ccd: lda #$0b]
	jra	l_5cd4                             	| [$5ccf: jra $5cd4]
l_5cd2:
	clr.b	d0                               	| [$5cd2: lda #$00]
l_5cd4:
	GET_ADDRESS	0x0318                     	| [$5cd4: sta $0318]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0319                     	| [$5cd7: sta $0319]
	move.b	d0,(a0)                         	| [...]
l_5cda:
	movem.w	(sp)+,d0-d2                        	| [$5cda: pla]
												| [$5cdb: tay]
												| [$5cdc: pla]
												| [$5cdd: tax]
												| [$5cde: pla]
	rts                                    	| [$5cdf: rts]
l_5ce0:
	OP_W_ON_ZP_ADDRESS	or,0x56,#0xc0 |  [$5ce0: lda $56]
	          	| [$5ce2: ora #$c0]
	 |  [$5ce4: sta $56]
	clr.b	d2                               	| [$5ce6: ldy #$00]
l_5ce8:
	move.b	#0x15,d0                        	| [$5ce8: lda #$15]
	GET_ADDRESS	0x0316                     	| [$5cea: sta $0316, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x030a                     	| [$5ced: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$5cf0: and #$7f]
	                     	| [$5cf2: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	addq.b	#1,d2                           	| [$5cf5: iny]
	cmp.b	#0x04,d2                         	| [$5cf6: cpy #$04]
	* bcc=>bcs (cmp above)
	jcs	l_5ce8                             	| [$5cf8: bcc $5ce8]
	jra	l_5cda                             	| [$5cfa: jra $5cda]
l_5cfd:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$5cfd: lda $4f]
	bmi	l_5d16                             	| [$5cff: bmi $5d16]
	lsr.b	#1,d0                            	| [$5d01: lsr a]
	GET_ADDRESS	0x00                       	| [$5d02: eor $00]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jne	l_5d0e                             	| [$5d04: jne $5d0e]
	jbsr	l_621b                            	| [$5d06: jsr $621b]
	move.b	#0x12,d0                        	| [$5d09: lda #$12]
	jra	l_5e58                             	| [$5d0b: jra $5e58]
l_5d0e:
	jbsr	l_61df                            	| [$5d0e: jsr $61df]
	move.b	#0x13,d0                        	| [$5d11: lda #$13]
	jra	l_5e58                             	| [$5d13: jra $5e58]
l_5d16:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5d16: lda $56]
	and.b	#0x0f,d0                         	| [$5d18: and #$0f]
	cmp.b	#0x0a,d0                         	| [$5d1a: cmp #$0a]
l_5d1c:
	* bcs=>bcc
	jcc	l_5d1c                             	| [$5d1c: bcs $5d1c]
	asl.b	#1,d0                            	| [$5d1e: asl a]
	move.b	d0,d2                           	| [$5d1f: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_5d2d            	| [$5d20: lda jump_table_5d2d, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$5d23: sta $1b]
	GET_BANK_ADDRESS	0x5d2e                     	| [$5d25: lda $5d2e, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$5d28: sta $1c]
	rts |  [$5d2a: jra ($001b)] [indirect_jump]

l_5d41:
	jbsr	l_5f68                            	| [$5d41: jsr $5f68]
	jcs	l_5daf                             	| [$5d44: bcs $5daf]
	jbsr	l_5e71                            	| [$5d46: jsr $5e71]
	jbsr	l_5f73                            	| [$5d49: jsr $5f73]
	jcs	l_5db4                             	| [$5d4c: bcs $5db4]
	jbsr	l_6274                            	| [$5d4e: jsr $6274]
	jcc	l_5daf                             	| [$5d51: bcc $5daf]
	jbsr	l_6037                            	| [$5d53: jsr $6037]
	jcc	l_5d5f                             	| [$5d56: bcc $5d5f]
	jbsr	l_603f                            	| [$5d58: jsr $603f]
	beq	l_5daa                             	| [$5d5b: beq $5daa]
	jcc	l_5daf                             	| [$5d5d: bcc $5daf]
l_5d5f:
	jbsr	l_6070                            	| [$5d5f: jsr $6070]
	jra	l_5e58                             	| [$5d62: jra $5e58]
l_5d65:
	jbsr	l_5f68                            	| [$5d65: jsr $5f68]
	jcs	l_5dda                             	| [$5d68: bcs $5dda]
	jbsr	l_60be                            	| [$5d6a: jsr $60be]
	jcs	l_5dcd                             	| [$5d6d: bcs $5dcd]
	jra	l_5daf                             	| [$5d6f: jra $5daf]
l_5d72:
	jbsr	l_5f68                            	| [$5d72: jsr $5f68]
	jcs	l_5dda                             	| [$5d75: bcs $5dda]
	jra	l_5daf                             	| [$5d77: jra $5daf]
l_5d7a:
	jbsr	l_5f68                            	| [$5d7a: jsr $5f68]
	jcs	l_5d99                             	| [$5d7d: bcs $5d99]
	jbsr	l_5e71                            	| [$5d7f: jsr $5e71]
	jbsr	l_6274                            	| [$5d82: jsr $6274]
	jcc	l_5daf                             	| [$5d85: bcc $5daf]
	jbsr	l_6037                            	| [$5d87: jsr $6037]
	jcc	l_5d93                             	| [$5d8a: bcc $5d93]
	jbsr	l_603f                            	| [$5d8c: jsr $603f]
	beq	l_5daa                             	| [$5d8f: beq $5daa]
	jcc	l_5daf                             	| [$5d91: bcc $5daf]
l_5d93:
	jbsr	l_6070                            	| [$5d93: jsr $6070]
	jra	l_5e58                             	| [$5d96: jra $5e58]
l_5d99:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$5d99: ldx $00]
	GET_ADDRESS	player_select_timer_lsb_54 	| [$5d9b: lda player_select_timer_lsb_54, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$5d9d: and #$0f]
	cmp.b	#0x05,d0                         	| [$5d9f: cmp #$05]
	beq	l_5d93                             	| [$5da1: beq $5d93]
	cmp.b	#0x04,d0                         	| [$5da3: cmp #$04]
	beq	l_5daf                             	| [$5da5: beq $5daf]
	jra	l_5ddd                             	| [$5da7: jra $5ddd]
l_5daa:
	move.b	#0x03,d0                        	| [$5daa: lda #$03]
	jra	l_5e58                             	| [$5dac: jra $5e58]
l_5daf:
	clr.b	d0                               	| [$5daf: lda #$00]
	jra	l_5e58                             	| [$5db1: jra $5e58]
l_5db4:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$5db4: lda $00]
	asl.b	#1,d0                            	| [$5db6: asl a]
	move.b	d0,d1                           	| [$5db7: tax]
	GET_ADDRESS	0x030e                     	| [$5db8: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfd,d0                         	| [$5dbb: and #$fd]
	                     	| [$5dbd: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq	#1,a0               	| [$5dc0: lda $030f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfd,d0                         	| [$5dc3: and #$fd]
	                     	| [$5dc5: sta $030f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$5dc8: lda #$04]
	jra	l_5e58                             	| [$5dca: jra $5e58]
l_5dcd:
	jbsr	l_619e                            	| [$5dcd: jsr $619e]
	move.b	#0x05,d0                        	| [$5dd0: lda #$05]
	jra	l_5e58                             	| [$5dd2: jra $5e58]
	move.b	#0x10,d0                        	| [$5dd5: lda #$10]
	jra	l_5e58                             	| [$5dd7: jra $5e58]
l_5dda:
	jra	l_5e8b                             	| [$5dda: jra $5e8b]
l_5ddd:
	jra	l_5e70                             	| [$5ddd: jra $5e70]
l_5de0:
	jra	l_5e5c                             	| [$5de0: jra $5e5c]
l_5de3:
	jbsr	l_6274                            	| [$5de3: jsr $6274]
	jcc	l_5daf                             	| [$5de6: bcc $5daf]
	jbsr	l_5f68                            	| [$5de8: jsr $5f68]
	jcs	l_5de0                             	| [$5deb: bcs $5de0]
	jbsr	l_5e71                            	| [$5ded: jsr $5e71]
	jbsr	l_6280                            	| [$5df0: jsr $6280]
	jcc	l_5daf                             	| [$5df3: bcc $5daf]
	jbsr	l_6037                            	| [$5df5: jsr $6037]
	jcc	l_5e01                             	| [$5df8: bcc $5e01]
	jbsr	l_603f                            	| [$5dfa: jsr $603f]
	beq	l_5daa                             	| [$5dfd: beq $5daa]
	jcc	l_5daf                             	| [$5dff: bcc $5daf]
l_5e01:
	jbsr	l_6070                            	| [$5e01: jsr $6070]
	jra	l_5e58                             	| [$5e04: jra $5e58]
l_5e07:
	jbsr	l_6268                            	| [$5e07: jsr $6268]
	jcc	l_5daf                             	| [$5e0a: bcc $5daf]
	jbsr	l_5f68                            	| [$5e0c: jsr $5f68]
	jcc	l_5daf                             	| [$5e0f: bcc $5daf]
	jbsr	l_5e71                            	| [$5e11: jsr $5e71]
	jbsr	l_6070                            	| [$5e14: jsr $6070]
	jra	l_5e58                             	| [$5e17: jra $5e58]
l_5e1a:
	jbsr	l_5f68                            	| [$5e1a: jsr $5f68]
	jcc	l_5daf                             	| [$5e1d: bcc $5daf]
	GET_ADDRESS	0x03e1                     	| [$5e1f: lda $03e1]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x01                           	| [$5e22: sbc #$01]
	cmp.b	#0x03,d0                         	| [$5e24: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_5daf                             	| [$5e26: bcc $5daf]
	move.b	#0x07,d0                        	| [$5e28: lda #$07]
	jra	l_5e58                             	| [$5e2a: jra $5e58]
l_5e2d:
	GET_ADDRESS	0x03e9                     	| [$5e2d: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$5e30: and #$0f]
	cmp.b	#0x09,d0                         	| [$5e32: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_5e43                             	| [$5e34: bcc $5e43]
	GET_ADDRESS	0x0411                     	| [$5e36: lda $0411]
	move.b	(a0),d0                         	| [...]
	bmi	l_5e4c                             	| [$5e39: bmi $5e4c]
	lsr.b	#1,d0                            	| [$5e3b: lsr a]
	GET_ADDRESS	0x00                       	| [$5e3c: eor $00]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jne	l_5e51                             	| [$5e3e: jne $5e51]
	jra	l_5e4c                             	| [$5e40: jra $5e4c]
l_5e43:
	GET_ADDRESS	0x03e9                     	| [$5e43: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$5e46: and #$10]
	GET_ADDRESS	0x01                       	| [$5e48: eor $01]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jne	l_5e51                             	| [$5e4a: jne $5e51]
l_5e4c:
	clr.b	d0                               	| [$5e4c: lda #$00]
	jra	l_5e58                             	| [$5e4e: jra $5e58]
l_5e51:
	move.b	#0x10,d0                        	| [$5e51: lda #$10]
	                      	| [$5e53: jra $5e58]
	                       	| [$5e56: lda #$10]  unreached
l_5e58:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$5e58: ldx $00]
	GET_ADDRESS	player_select_timer_lsb_54 	| [$5e5a: sta player_select_timer_lsb_54, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_5e5c:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$5e5c: lda $00]
	asl.b	#1,d0                            	| [$5e5e: asl a]
	move.b	d0,d1                           	| [$5e5f: tax]
* reached when player is serving
	GET_ADDRESS	0x030e                     	| [$5e60: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$5e63: ora #$01]
	                     	| [$5e65: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq	#1,a0                     	| [$5e68: lda $030f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$5e6b: ora #$01]
	                     	| [$5e6d: sta $030f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_5e70:
	rts                                    	| [$5e70: rts]
l_5e71:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$5e71: lda $00]
	asl.b	#1,d0                            	| [$5e73: asl a]
	move.b	d0,d1                           	| [$5e74: tax]
	GET_ADDRESS	0x030e                     	| [$5e75: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x02,d0                          	| [$5e78: ora #$02]
	                     	| [$5e7a: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq	#1,a0                     	| [$5e7d: lda $030f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x02,d0                          	| [$5e80: ora #$02]
	                     	| [$5e82: sta $030f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$5e85: lda #$00]
	GET_ADDRESS	0x07fb                     	| [$5e87: sta $07fb]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$5e8a: rts]
l_5e8b:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$5e8b: ldx $00]
	SET_XC_FLAGS                           	| [$5e8d: sec]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$5e8e: lda $53]
	cmp.b	#0x01,d0                         	| [$5e90: cmp #$01]
	beq	l_5e9b                             	| [$5e92: beq $5e9b]
	cmp.b	#0x03,d0                         	| [$5e94: cmp #$03] [disabled]
l_5e96:
	* bcs=>bcc
	jcc	l_5e96                             	| [$5e96: bcs $5e96] [bogus infinite loop] [disabled]
	jra	l_5f4e                             	| [$5e98: jra $5f4e]
l_5e9b:
	GET_ADDRESS	player_select_timer_lsb_54 	| [$5e9b: lda player_select_timer_lsb_54, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x11,d0                         	| [$5e9d: cmp #$11] [disabled]
l_5e9f:
	* bcs=>bcc
	jcc	l_5e9f                             	| [$5e9f: bcs $5e9f] [bogus infinite loop] [disabled]
	asl.b	#1,d0                            	| [$5ea1: asl a]
	move.b	d0,d2                           	| [$5ea2: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_5eb0            	| [$5ea3: lda jump_table_5eb0, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$5ea6: sta $1b]
	GET_BANK_ADDRESS	0x5eb1                     	| [$5ea8: lda $5eb1, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$5eab: sta $1c]
l_5ead:
	rts |  [$5ead: jra ($001b)] [indirect_jump]

l_5ed0:
	jbsr	l_6070                            	| [$5ed0: jsr $6070]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$5ed3: ldx $00]
	GET_ADDRESS	player_select_timer_lsb_54 	| [$5ed5: sta player_select_timer_lsb_54, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_5e9b                             	| [$5ed7: jra $5e9b]
l_5eda:
	jbsr	l_60fe                            	| [$5eda: jsr $60fe]
	jcc	l_5ee4                             	| [$5edd: bcc $5ee4]
	jbsr	l_60f5                            	| [$5edf: jsr $60f5]
	jcs	l_5f4b                             	| [$5ee2: bcs $5f4b]
l_5ee4:
	move.b	#0x06,d0                        	| [$5ee4: lda #$06]
	jra	l_5e58                             	| [$5ee6: jra $5e58]
l_5ee9:
	jbsr	l_625d                            	| [$5ee9: jsr $625d]
	jcc	l_5f0f                             	| [$5eec: bcc $5f0f]
	jbsr	l_60fe                            	| [$5eee: jsr $60fe]
	jcc	l_5ee4                             	| [$5ef1: bcc $5ee4]
	jbsr	l_60f5                            	| [$5ef3: jsr $60f5]
	jcs	l_5f4b                             	| [$5ef6: bcs $5f4b]
l_5ef8:
	move.b	#0x09,d0                        	| [$5ef8: lda #$09]
	jra	l_5e58                             	| [$5efa: jra $5e58]
l_5efd:
	jbsr	l_60fe                            	| [$5efd: jsr $60fe]
	jcc	l_5ee4                             	| [$5f00: bcc $5ee4]
	jbsr	l_60f5                            	| [$5f02: jsr $60f5]
	jcc	l_5f0f                             	| [$5f05: bcc $5f0f]
	jbsr	l_618f                            	| [$5f07: jsr $618f]
	jcc	l_5ef8                             	| [$5f0a: bcc $5ef8]
	jra	l_5e5c                             	| [$5f0c: jra $5e5c]
l_5f0f:
	jbsr	l_610f                            	| [$5f0f: jsr $610f]
	jcs	l_5ef8                             	| [$5f12: bcs $5ef8]
l_5f14:
	move.b	#0x07,d0                        	| [$5f14: lda #$07]
	jra	l_5e58                             	| [$5f16: jra $5e58]
l_5f19:
	jbsr	l_625d                            	| [$5f19: jsr $625d]
	jcc	l_5f28                             	| [$5f1c: bcc $5f28]
	jbsr	l_60fe                            	| [$5f1e: jsr $60fe]
	jcc	l_5ee4                             	| [$5f21: bcc $5ee4]
	jbsr	l_60f5                            	| [$5f23: jsr $60f5]
	jcs	l_5f4b                             	| [$5f26: bcs $5f4b]
l_5f28:
	jbsr	l_610f                            	| [$5f28: jsr $610f]
	jcc	l_5f14                             	| [$5f2b: bcc $5f14]
	move.b	#0x0d,d0                        	| [$5f2d: lda #$0d]
	jra	l_5e58                             	| [$5f2f: jra $5e58]
l_5f32:
	jbsr	l_625d                            	| [$5f32: jsr $625d]
	jcc	l_5f41                             	| [$5f35: bcc $5f41]
	jbsr	l_60fe                            	| [$5f37: jsr $60fe]
	jcc	l_5ee4                             	| [$5f3a: bcc $5ee4]
	jbsr	l_60f5                            	| [$5f3c: jsr $60f5]
	jcs	l_5f4b                             	| [$5f3f: bcs $5f4b]
l_5f41:
	jbsr	l_610f                            	| [$5f41: jsr $610f]
	jcc	l_5f14                             	| [$5f44: bcc $5f14]
	move.b	#0x0f,d0                        	| [$5f46: lda #$0f]
	jra	l_5e58                             	| [$5f48: jra $5e58]
l_5f4b:
	jra	l_5e5c                             	| [$5f4b: jra $5e5c]
l_5f4e:
	GET_ADDRESS	player_select_timer_lsb_54 	| [$5f4e: lda player_select_timer_lsb_54, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x11,d0                         	| [$5f50: cmp #$11]
l_5f52:
	* bcs=>bcc
	jcc	l_5f52                             	| [$5f52: bcs $5f52]
	jbsr	l_60f5                            	| [$5f54: jsr $60f5]
	jcc	l_5f63                             	| [$5f57: bcc $5f63]
	jbsr	l_625d                            	| [$5f59: jsr $625d]
	jcc	l_5f63                             	| [$5f5c: bcc $5f63]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$5f5e: ldx $00]
	jra	l_5e5c                             	| [$5f60: jra $5e5c]
l_5f63:
	move.b	#0x07,d0                        	| [$5f63: lda #$07]
	jra	l_5e58                             	| [$5f65: jra $5e58]

l_5f68:
	CLR_XC_FLAGS                           	| [$5f68: clc]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$5f69: lda $56]
	GET_ADDRESS	0x01                       	| [$5f6b: eor $01]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x10,d0                         	| [$5f6d: and #$10]
	jne	l_5f72                             	| [$5f6f: jne $5f72]
	SET_XC_FLAGS                           	| [$5f71: sec]
l_5f72:
	rts                                    	| [$5f72: rts]

l_5f73:
	move.b	#0x88,d0                        	| [$5f73: lda #$88]
	GET_ADDRESS	0x0404                     	| [$5f75: cmp $0404]
	cmp.b	(a0),d0                          	| [...]
	INVERT_XC_FLAGS
	jcc	l_5f99                             	| [$5f78: bcc $5f99]
	                     	| [$5f7a: lda $0404]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x58,d0                         	| [$5f7d: cmp #$58]
	INVERT_XC_FLAGS
	jcc	l_5f99                             	| [$5f7f: bcc $5f99]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$5f81: lda $00]
	eor.b	#0x01,d0                         	| [$5f83: eor #$01]
	GET_ADDRESS	0x0401                     	| [$5f85: cmp $0401]
	cmp.b	(a0),d0                          	| [...]
	CLR_XC_FLAGS                           	| [$5f88: clc]
	beq	l_5f99                             	| [$5f89: beq $5f99]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$5f8b: ldy $00]
	GET_ADDRESS	0x5f                       	| [$5f8d: ldx $5f, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0x0316                     	| [$5f8f: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$5f92: and #$7f]
	cmp.b	#0x0f,d0                         	| [$5f94: cmp #$0f]
	CLR_XC_FLAGS                           	| [$5f96: clc]
	jne	l_5f9a                             	| [$5f97: jne $5f9a]
l_5f99:
	rts                                    	| [$5f99: rts]
l_5f9a:
	GET_ADDRESS	0x0384                     	| [$5f9a: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$5f9d: pha]
	GET_ADDRESS	0x0380                     	| [$5f9e: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$5fa1: pha]
	GET_ADDRESS	0x038c                     	| [$5fa2: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$5fa5: pha]
	GET_ADDRESS	0x0388                     	| [$5fa6: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$5fa9: pha]
	move.b	#0x0d,d2                        	| [$5faa: ldy #$0d]
	GET_ADDRESS	0x0401                     	| [$5fac: lda $0401]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$5faf: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$5fb2: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0400                     	| [$5fb5: lda $0400]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$5fb8: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$5fbb: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$5fbe: lda #$00]
	GET_ADDRESS	0x038c                     	| [$5fc0: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00c7                     	| [$5fc3: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0402                     	| [$5fc6: lda $0402]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$5fc9: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00b9                     	| [$5fcc: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$5fcf: lda $00]
	movem.w	d0,-(sp)                       	| [$5fd1: pha]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$5fd2: lda $01]
	movem.w	d0,-(sp)                       	| [$5fd4: pha]
	GET_ADDRESS	player_direction_032b      	| [$5fd5: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$5fd8: pha]
	move.b	d1,d0                           	| [$5fd9: txa]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$5fda: sta current_object_index_4c]
	move.b	#0x0d,d0                        	| [$5fdc: lda #$0d]
	jbsr	l_b44a                            	| [$5fde: jsr $b44a]
	GET_ADDRESS	player_direction_032b      	| [$5fe1: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$5fe4: lda #$00]
	jbsr	l_8549                            	| [$5fe6: jsr $8549]
	move.w	(sp)+,d0                        	| [$5fe9: pla]
	GET_ADDRESS	player_direction_032b      	| [$5fea: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$5fed: pla]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$5fee: sta $01]
	move.w	(sp)+,d0                        	| [$5ff0: pla]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$5ff1: sta $00]
	move.w	(sp)+,d0                        	| [$5ff3: pla]
	GET_ADDRESS	0x0388                     	| [$5ff4: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$5ff7: pla]
	GET_ADDRESS	0x038c                     	| [$5ff8: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$5ffb: pla]
	GET_ADDRESS	0x0380                     	| [$5ffc: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$5fff: pla]
	GET_ADDRESS	0x0384                     	| [$6000: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$6003: clc]
	GET_ADDRESS	0x0406                     	| [$6004: lda $0406]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d4	| [$6007: adc #$0a]
	add.b	d4,d0                        	| [$6007: adc #$0a]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$6009: cmp $1b]
	INVERT_XC_FLAGS
	jcc	l_6036                             	| [$600b: bcc $6036]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$600d: ldx $00]
	GET_ADDRESS	0x5f                       	| [$600f: ldy $5f, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x0312                     	| [$6011: lda $0312, y]
	move.b	(a0,d2.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6014: asl a]
	move.b	d0,d2                           	| [$6015: tay]
	GET_BANK_ADDRESS	0x4014                     	| [$6016: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6019: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$601b: lda $56]
	and.b	#0x0f,d0                         	| [$601d: and #$0f]
	beq	l_6023                             	| [$601f: beq $6023]
	move.b	#0x02,d0                        	| [$6021: lda #$02]
l_6023:
	CLR_XC_FLAGS                           	| [$6023: clc]
	OP_R_ON_ZP_ADDRESS	add,screen_source_pointer_0010,d0 |  [$6024: adc screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6026: sta screen_source_pointer_0010]
	clr.b	d0                               	| [$6028: lda #$00]
	GET_BANK_ADDRESS	0x4015                     	| [$602a: adc $4015, y] [bank_address]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$602d: sta $11]
	jbsr	l_6609                            	| [$602f: jsr $6609]
	cmp.b	#0x01,d0                         	| [$6032: cmp #$01]
	INVERT_XC_FLAGS
	jcc	l_6036                             	| [$6034: bcc $6036]
l_6036:
	rts                                    	| [$6036: rts]
l_6037:
	GET_ADDRESS	0x03e9                     	| [$6037: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$603a: and #$0f]
	cmp.b	#0x09,d0                         	| [$603c: cmp #$09]
	INVERT_XC_FLAGS
	rts                                    	| [$603e: rts]
l_603f:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$603f: ldx $00]
	GET_ADDRESS	0x61                       	| [$6041: lda $61, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$6043: tax]
	GET_ADDRESS	0x0312                     	| [$6044: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6047: asl a]
	move.b	d0,d2                           	| [$6048: tay]
	GET_BANK_ADDRESS	0x403e                     	| [$6049: lda $403e, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$604c: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x403f                     	| [$604e: lda $403f, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6051: sta $11]
	SET_XC_FLAGS                           	| [$6053: sec]
	GET_ADDRESS	0x03e9                     	| [$6054: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$6057: and #$0f]
	SBC_IMM	0x09                           	| [$6059: sbc #$09]
	move.b	d0,d2                           	| [$605b: tay]
	                           	| [$605c: clc]
	GET_BANK_ADDRESS	0x4077                     	| [$605d: lda $4077, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	screen_source_pointer_0010 	| [$6060: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6062: sta screen_source_pointer_0010]
	clr.b	d0                               	| [$6064: lda #$00]
	GET_ADDRESS	0x11                       	| [$6066: adc $11]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6068: sta $11]
	jbsr	l_6609                            	| [$606a: jsr $6609]
	cmp.b	#0x01,d0                         	| [$606d: cmp #$01]
	INVERT_XC_FLAGS
	rts                                    	| [$606f: rts]
l_6070:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6070: ldx $00]
	GET_ADDRESS	0x63                       	| [$6072: lda $63, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$6074: tax]
	GET_ADDRESS	0x0312                     	| [$6075: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6078: asl a]
	move.b	d0,d2                           	| [$6079: tay]
	GET_BANK_ADDRESS	0x403e                     	| [$607a: lda $403e, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$607d: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x403f                     	| [$607f: lda $403f, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6082: sta $11]
	GET_ADDRESS	0x03e9                     	| [$6084: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$6087: and #$0f]
	move.b	d0,d2                           	| [$6089: tay]
	                           	| [$608a: clc]
	GET_BANK_ADDRESS	0x4068                     	| [$608b: lda $4068, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	screen_source_pointer_0010 	| [$608e: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6090: sta screen_source_pointer_0010]
	clr.b	d0                               	| [$6092: lda #$00]
	GET_ADDRESS	0x11                       	| [$6094: adc $11]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6096: sta $11]
	jbsr	l_6609                            	| [$6098: jsr $6609]
	                           	| [$609b: clc]
	add.b	#0x06,d0                        	| [$609c: adc #$06]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$609e: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$60a0: lda $56]
	and.b	#0x0f,d0                         	| [$60a2: and #$0f]
	beq	l_60b1                             	| [$60a4: beq $60b1]
	cmp.b	#0x05,d0                         	| [$60a6: cmp #$05]
	beq	l_60b1                             	| [$60a8: beq $60b1]
	cmp.b	#0x06,d0                         	| [$60aa: cmp #$06]
	beq	l_60b1                             	| [$60ac: beq $60b1]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$60ae: lda $1b]
	rts                                    	| [$60b0: rts]
l_60b1:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$60b1: lda $1b]
	and.b	#0x09,d0                         	| [$60b3: and #$09]
	cmp.b	#0x08,d0                         	| [$60b5: cmp #$08]
	jne	l_60bb                             	| [$60b7: jne $60bb]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$60b9: inc $1b]
l_60bb:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$60bb: lda $1b]
	rts                                    	| [$60bd: rts]
l_60be:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$60be: ldx $00]
	GET_ADDRESS	0x5f                       	| [$60c0: lda $5f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$60c2: tax]
	                           	| [$60c3: clc]
	GET_ADDRESS	0x0373                     	| [$60c4: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$60c7: and #$0f]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$60c9: sta $1b]
	move.b	#0x02,d0                        	| [$60cb: lda #$02]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$60cd: cmp $1b]
	* bcc=>bcs (cmp above)
	jcs	l_60ea                             	| [$60cf: bcc $60ea]
	GET_ADDRESS	0x0312                     	| [$60d1: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$60d4: asl a]
	move.b	d0,d2                           	| [$60d5: tay]
	                           	| [$60d6: clc]
	GET_BANK_ADDRESS	0x4014                     	| [$60d7: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0x04,d4	| [$60da: adc #$04]
	add.b	d4,d0                        	| [$60da: adc #$04]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$60dc: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$60de: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$60e1: adc #$00]
	addx.b	d4,d0                        	| [$60e1: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$60e3: sta $11]
	jbsr	l_6609                            	| [$60e5: jsr $6609]
	cmp.b	#0x01,d0                         	| [$60e8: cmp #$01]
l_60ea:
	INVERT_XC_FLAGS
	rts                                    	| [$60ea: rts]
	
	* seems unreached
*	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$60eb: lda $00]
*	eor.b	#0x01,d0                         	| [$60ed: eor #$01]
*	move.b	d0,d1                           	| [$60ef: tax]
*	GET_ADDRESS	score_array_57             	| [$60f0: lda score_array_57, x]
*	move.b	(a0,d1.w),d0                    	| [...]
*	cmp.b	#0x15,d0                         	| [$60f2: cmp #$15]
*	INVERT_XC_FLAGS
*	rts                                    	| [$60f4: rts]

l_60f5:
	CLR_XC_FLAGS                           	| [$60f5: clc]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$60f6: lda $56]
	and.b	#0x20,d0                         	| [$60f8: and #$20]
	jne	l_60fd                             	| [$60fa: jne $60fd]
	SET_XC_FLAGS                           	| [$60fc: sec]
l_60fd:
	rts                                    	| [$60fd: rts]

l_60fe:
	CLR_XC_FLAGS                           	| [$60fe: clc]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$60ff: ldx $00]
	GET_ADDRESS	0x51                       	| [$6101: lda $51, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x01,d0                         	| [$6103: eor #$01]
	move.b	d0,d1                           	| [$6105: tax]
	GET_ADDRESS	0x030e                     	| [$6106: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$6109: and #$40]
	jne	l_610e                             	| [$610b: jne $610e]
	SET_XC_FLAGS                           	| [$610d: sec]
l_610e:
	rts                                    	| [$610e: rts]

l_610f:
	CLR_XC_FLAGS                           	| [$610f: clc]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$6110: ldy $00]
	GET_ADDRESS	0x51                       	| [$6112: ldx $51, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0x03e9                     	| [$6114: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$6117: and #$0f]
	cmp.b	#0x0d,d0                         	| [$6119: cmp #$0d]
	jne	l_611f                             	| [$611b: jne $611f]
	CLR_XC_FLAGS                           	| [$611d: clc]
	rts                                    	| [$611e: rts]
l_611f:
	GET_ADDRESS	0x0384                     	| [$611f: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$6122: pha]
	GET_ADDRESS	0x0380                     	| [$6123: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$6126: pha]
	GET_ADDRESS	0x038c                     	| [$6127: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$612a: pha]
	GET_ADDRESS	0x0388                     	| [$612b: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$612e: pha]
	move.b	#0x0d,d2                        	| [$612f: ldy #$0d]
	GET_ADDRESS	0x03f6                     	| [$6131: lda $03f6]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$6134: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$6137: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03f5                     	| [$613a: lda $03f5]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$613d: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$6140: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$6143: lda #$00]
	GET_ADDRESS	0x038c                     	| [$6145: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00c7                     	| [$6148: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03f7                     	| [$614b: lda $03f7]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$614e: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00b9                     	| [$6151: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$6154: lda $00]
	movem.w	d0,-(sp)                       	| [$6156: pha]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$6157: lda $01]
	movem.w	d0,-(sp)                       	| [$6159: pha]
	GET_ADDRESS	player_direction_032b      	| [$615a: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$615d: pha]
	move.b	d1,d0                           	| [$615e: txa]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$615f: sta current_object_index_4c]
	move.b	#0x0d,d0                        	| [$6161: lda #$0d]
	jbsr	l_b44a                            	| [$6163: jsr $b44a]
	GET_ADDRESS	player_direction_032b      	| [$6166: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$6169: lda #$00]
	jbsr	l_8549                            	| [$616b: jsr $8549]
	move.w	(sp)+,d0                        	| [$616e: pla]
	GET_ADDRESS	player_direction_032b      	| [$616f: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$6172: pla]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$6173: sta $01]
	move.w	(sp)+,d0                        	| [$6175: pla]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$6176: sta $00]
	move.w	(sp)+,d0                        	| [$6178: pla]
	GET_ADDRESS	0x0388                     	| [$6179: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$617c: pla]
	GET_ADDRESS	0x038c                     	| [$617d: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$6180: pla]
	GET_ADDRESS	0x0380                     	| [$6181: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$6184: pla]
	GET_ADDRESS	0x0384                     	| [$6185: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$6188: clc]
	GET_ADDRESS	0x03f9                     	| [$6189: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$618c: cmp $1b]
	INVERT_XC_FLAGS
	rts                                    	| [$618e: rts]

l_618f:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$618f: ldy $00]
	GET_ADDRESS	0x51                       	| [$6191: ldx $51, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0x0378                     	| [$6193: lda $0378, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$6196: cmp $0373, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	CLR_XC_FLAGS                           	| [$6199: clc]
	jne	l_619d                             	| [$619a: jne $619d]
	SET_XC_FLAGS                           	| [$619c: sec]
l_619d:
	rts                                    	| [$619d: rts]

l_619e:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$619e: ldx $00]
	GET_ADDRESS	0x5f                       	| [$61a0: lda $5f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$61a2: tax]
	GET_ADDRESS	0x0312                     	| [$61a3: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$61a6: asl a]
	move.b	d0,d2                           	| [$61a7: tay]
	CLR_XC_FLAGS                           	| [$61a8: clc]
	GET_BANK_ADDRESS	0x4014                     	| [$61a9: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0x06,d4	| [$61ac: adc #$06]
	addx.b	d4,d0                        	| [$61ac: adc #$06]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$61ae: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$61b0: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$61b3: adc #$00]
	addx.b	d4,d0                        	| [$61b3: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$61b5: sta $11]
	jbsr	l_6609                            	| [$61b7: jsr $6609]
	GET_ADDRESS	0x03bc                     	| [$61ba: sta $03bc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$61bd: rts]

l_61be:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$61be: ldx $00]
	GET_ADDRESS	0x51                       	| [$61c0: lda $51, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x01,d0                         	| [$61c2: eor #$01]
	move.b	d0,d1                           	| [$61c4: tax]
	GET_ADDRESS	0x0312                     	| [$61c5: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$61c8: asl a]
	move.b	d0,d2                           	| [$61c9: tay]
	                           	| [$61ca: clc]
	GET_BANK_ADDRESS	0x4014                     	| [$61cb: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	#0xbb,d4	| [$61ce: adc #$bb]
	add.b	d4,d0                        	| [$61ce: adc #$bb]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$61d0: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$61d2: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$61d5: adc #$00]
	addx.b	d4,d0                        	| [$61d5: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$61d7: sta $11]
	jbsr	l_6609                            	| [$61d9: jsr $6609]
	cmp.b	#0x01,d0                         	| [$61dc: cmp #$01]
	INVERT_XC_FLAGS
	rts                                    	| [$61de: rts]

l_61df:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$61df: ldx $00]
	GET_ADDRESS	0x47                       	| [$61e1: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$61e3: asl a]
	move.b	d0,d2                           	| [$61e4: tay]
	GET_BANK_ADDRESS	0x4000                     	| [$61e5: lda $4000, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$61e8: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4001                     	| [$61ea: lda $4001, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$61ed: sta $11]
	move.b	d1,d0                           	| [$61ef: txa]
	eor.b	#0x01,d0                         	| [$61f0: eor #$01]
	move.b	d0,d2                           	| [$61f2: tay]
	clr.b	d0                               	| [$61f3: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$61f5: sta $1b]
	SET_XC_FLAGS                           	| [$61f7: sec]
	GET_ADDRESS	score_array_57             	| [$61f8: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	NEW_ADDRESS
	SBC_Y	score_array_57                           	| [$61fa: sbc $0057, y]
	beq	l_6203                             	| [$61fd: beq $6203]
	jcs	l_6205                             	| [$61ff: bcs $6205]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6201: inc $1b]
l_6203:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6203: inc $1b]
l_6205:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6205: lda $1b]
                                         | [$6207: asl a]
	asl.b	#2,d0                            	| [$6208: asl a]
	GET_ADDRESS	0x1b                       	| [$6209: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	screen_source_pointer_0010 	| [$620b: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$620d: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$620f: lda $11]
	moveq	#0x00,d4	| [$6211: adc #$00]
	addx.b	d4,d0                        	| [$6211: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6213: sta $11]
	jbsr	l_6609                            	| [$6215: jsr $6609]
	OP_W_ON_ZP_ADDRESS	move,0x5d,d0 |  [$6218: sta $5d]
	rts                                    	| [$621a: rts]
l_621b:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d1 |  [$621b: ldx $4f]
	GET_ADDRESS	0x0312                     	| [$621d: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6220: asl a]
	move.b	d0,d2                           	| [$6221: tay]
	GET_BANK_ADDRESS	0x4014                     	| [$6222: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6225: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$6227: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$622a: sta $11]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$622c: lda $00]
	move.b	d0,d1                           	| [$622e: tax]
	eor.b	#0x01,d0                         	| [$622f: eor #$01]
	move.b	d0,d2                           	| [$6231: tay]
	clr.b	d0                               	| [$6232: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6234: sta $1b]
	SET_XC_FLAGS                           	| [$6236: sec]
	GET_ADDRESS	score_array_57             	| [$6237: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	NEW_ADDRESS
	SBC_Y	score_array_57                           	| [$6239: sbc $0057, y]
	beq	l_6242                             	| [$623c: beq $6242]
	jcs	l_6244                             	| [$623e: bcs $6244]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6240: inc $1b]
l_6242:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6242: inc $1b]
l_6244:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6244: lda $1b]
                                         | [$6246: asl a]
	asl.b	#2,d0                            	| [$6247: asl a]
	move.b	#0x44,d4	| [$6248: adc #$44]
	addx.b	d4,d0                        	| [$6248: adc #$44]
	GET_ADDRESS	screen_source_pointer_0010 	| [$624a: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$624c: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$624e: lda $11]
	moveq	#0x00,d4	| [$6250: adc #$00]
	addx.b	d4,d0                        	| [$6250: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6252: sta $11]
	jbsr	l_6609                            	| [$6254: jsr $6609]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d1 |  [$6257: ldx $4f]
	GET_ADDRESS	0x03ac                     	| [$6259: sta $03ac, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$625c: rts]

l_625d:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$625d: lda $56]
	and.b	#0x0f,d0                         	| [$625f: and #$0f]
	cmp.b	#0x02,d0                         	| [$6261: cmp #$02]
	CLR_XC_FLAGS                           	| [$6263: clc]
	jne	l_6267                             	| [$6264: jne $6267]
	SET_XC_FLAGS                           	| [$6266: sec]
l_6267:
	rts                                    	| [$6267: rts]

l_6268:
	CLR_XC_FLAGS                           	| [$6268: clc]
	GET_ADDRESS	0x03e9                     	| [$6269: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$626c: and #$10]
	GET_ADDRESS	0x01                       	| [$626e: eor $01]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jne	l_6273                             	| [$6270: jne $6273]
	SET_XC_FLAGS                           	| [$6272: sec]
l_6273:
	rts                                    	| [$6273: rts]

l_6274:
	GET_ADDRESS	0x03fa                     	| [$6274: lda $03fa]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x01                       	| [$6277: eor $01]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x10,d0                         	| [$6279: and #$10]
	CLR_XC_FLAGS                           	| [$627b: clc]
	jne	l_627f                             	| [$627c: jne $627f]
	SET_XC_FLAGS                           	| [$627e: sec]
l_627f:
	rts                                    	| [$627f: rts]
l_6280:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$6280: lda current_level_38]
	cmp.b	#0x04,d0                         	| [$6282: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_6288                             	| [$6284: bcc $6288]
	move.b	#0x04,d0                        	| [$6286: lda #$04]
l_6288:
	asl.b	#1,d0                            	| [$6288: asl a]
	move.b	d0,d2                           	| [$6289: tay]
	move.b	#0xa4,d0                        	| [$628a: lda #$a4]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$628c: sta screen_source_pointer_0010]
	move.b	#0x62,d0                        	| [$628e: lda #$62]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6290: sta $11]
	move.b	d2,d0                           	| [$6292: tya]
	                           	| [$6293: clc]
	OP_R_ON_ZP_ADDRESS	add,screen_source_pointer_0010,d0 |  [$6294: adc screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6296: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$6298: lda $11]
	moveq	#0x00,d4	| [$629a: adc #$00]
	addx.b	d4,d0                        	| [$629a: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$629c: sta $11]
	jbsr	l_6609                            	| [$629e: jsr $6609]
	cmp.b	#0x01,d0                         	| [$62a1: cmp #$01]
	INVERT_XC_FLAGS
	rts                                    	| [$62a3: rts]

move_player_62ae:
	OP_R_ON_ZP_ADDRESS	move,0x01,d1 |  [$62ae: ldx $01]
	NEW_ADDRESS
	GET_ADDRESS	0x030e                     	| [$62b0: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x01,d0                         	| [$62b3: and #$01]
	jne	l_62b8                             	| [$62b5: jne $62b8]
	rts                                    	| [$62b7: rts]
l_62b8:
	                     	| [$62b8: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x02,d0                         	| [$62bb: and #$02]
	beq	l_62f6                             	| [$62bd: beq $62f6]
* opponents are reacting
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$62bf: lda $56]
	and.b	#0x0f,d0                         	| [$62c1: and #$0f]
	beq	l_62e5                             	| [$62c3: beq $62e5]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$62c5: lda current_level_38]
	cmp.b	#0x10,d0                         	| [$62c7: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_62cd                             	| [$62c9: bcc $62cd]
	move.b	#0x09,d0                        	| [$62cb: lda #$09]
l_62cd:
	move.b	d0,d2                           	| [$62cd: tay]
	OP_R_ON_ZP_ADDRESS	move,0x3a,d0 |  [$62ce: lda $3a]
	beq	l_62d3                             	| [$62d0: beq $62d3]
	addq.b	#1,d2                           	| [$62d2: iny]
l_62d3:
	GET_BANK_ADDRESS	0x62eb                     	| [$62d3: lda $62eb, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x07fc                     	| [$62d6: sta $07fc]
	move.b	d0,(a0)                         	| [...]
	                     	| [$62d9: inc $07fb]
	addq.b	#1,-(a0)                         	| [...]
	                     	| [$62dc: lda $07fb]
	move.b	(a0)+,d0                         	| [...]
	                     	| [$62df: cmp $07fc]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	jcc	l_6316                             	| [$62e2: bcs $6316]
	rts                                    	| [$62e4: rts]
l_62e5:
	GET_ADDRESS	0x02b3                     	| [$62e5: lda $02b3]
	move.b	(a0),d0                         	| [...]
	bmi	l_6316                             	| [$62e8: bmi $6316]
	rts                                    	| [$62ea: rts]
l_62f6:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$62f6: lda $01]
                                         | [$62f8: asl a]
                                         | [$62f9: asl a]
                                         | [$62fa: asl a]
	asl.b	#4,d0                            	| [$62fb: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$62fc: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$62fe: lda $56]
	GET_ADDRESS	0x1b                       	| [$6300: eor $1b]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x3f,d0                         	| [$6302: and #$3f]
	cmp.b	#0x23,d0                         	| [$6304: cmp #$23]
	jne	l_631e                             	| [$6306: jne $631e]
	clr.b	d0                               	| [$6308: lda #$00]
	GET_ADDRESS	0x07fb                     	| [$630a: sta $07fb]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x030e                     	| [$630d: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x02,d0                          	| [$6310: ora #$02]
	                     	| [$6312: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$6315: rts]
l_6316:
	GET_ADDRESS	0x030e                     	| [$6316: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfd,d0                         	| [$6319: and #$fd]
	                     	| [$631b: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_631e:
	GET_ADDRESS	0x030e                     	| [$631e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfe,d0                         	| [$6321: and #$fe]
	                     	| [$6323: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$6326: ldy $00]
	GET_ADDRESS	0x0054                     	| [$6328: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$632b: asl a]
	move.b	d0,d2                           	| [$632c: tay]
	PUSH_TABLE_Y_ADDRESS	player_behaviour_jump_table_633a	| [$632d: lda player_behaviour_jump_table_633a, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6330: sta $1b]
	GET_BANK_ADDRESS	0x633b                     	| [$6332: lda $633b, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6335: sta $1c]
l_6337:
	rts |  [$6337: jra ($001b)] [indirect_jump]

l_6362:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$6362: lda $56]
	and.b	#0x0f,d0                         	| [$6364: and #$0f]
	                           	| [$6366: sec]
	sub.b	#0x02,d0	| [$6367: sbc #$02]
	bmi	l_637a                             	| [$6369: bmi $637a]
	cmp.b	#0x03,d0                         	| [$636b: cmp #$03]
	* bcs=>bcc
	jcc	l_637a                             	| [$636d: bcs $637a]
	cmp.b	#0x07,d0                         	| [$636f: cmp #$07]
	beq	l_637a                             	| [$6371: beq $637a]
	move.b	#0x02,d0                        	| [$6373: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6375: sta $1b]
	jra	l_64b4                             	| [$6377: jra $64b4]
l_637a:
	move.b	#0x36,d0                        	| [$637a: lda #$36]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$637c: sta $1b]
	jra	l_64b4                             	| [$637e: jra $64b4]
l_6381:
	clr.b	d0                               	| [$6381: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6383: sta $1b]
	jra	l_64b4                             	| [$6385: jra $64b4]
l_6388:
	move.b	#0x28,d0                        	| [$6388: lda #$28]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$638a: sta $1b]
	jra	l_64b4                             	| [$638c: jra $64b4]
l_638f:
	move.b	#0x04,d0                        	| [$638f: lda #$04]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6391: sta $1b]
	jra	l_64cc                             	| [$6393: jra $64cc]
l_6396:
	move.b	#0x44,d0                        	| [$6396: lda #$44]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6398: sta $1b]
	jra	l_64c2                             	| [$639a: jra $64c2]
* called when the 2nd player passes the ball for spikes
* disable this and the opponent won't try to block any spikes
decide_to_block_639d:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$639d: lda $56]
	and.b	#0x0f,d0                         	| [$639f: and #$0f]
	cmp.b	#0x05,d0                         	| [$63a1: cmp #$05]
	beq	l_63ac                             	| [$63a3: beq $63ac]
	move.b	#0x3a,d0                        	| [$63a5: lda #$3a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63a7: sta $1b]
	jra	l_64c2                             	| [$63a9: jra $64c2]
l_63ac:
	move.b	#0x38,d0                        	| [$63ac: lda #$38]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63ae: sta $1b]
	jra	l_64c2                             	| [$63b0: jra $64c2]
l_63b3:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$63b3: lda $53]
	jne	l_63be                             	| [$63b5: jne $63be]
l_63b7:
	move.b	#0x1e,d0                        	| [$63b7: lda #$1e]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63b9: sta $1b]
	jra	l_64d6                             	| [$63bb: jra $64d6]
l_63be:
	move.b	#0x2a,d0                        	| [$63be: lda #$2a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63c0: sta $1b]
	jra	l_6594                             	| [$63c2: jra $6594]
l_63c5:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$63c5: lda $53]
	beq	l_63b7                             	| [$63c7: beq $63b7]
	cmp.b	#0x02,d0                         	| [$63c9: cmp #$02]
	* bcs=>bcc
	jcc	l_63be                             	| [$63cb: bcs $63be]
	move.b	#0x1e,d0                        	| [$63cd: lda #$1e]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63cf: sta $1b]
	jra	l_6594                             	| [$63d1: jra $6594]
l_63d4:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$63d4: lda $53]
	jne	l_63eb                             	| [$63d6: jne $63eb]
	jbsr	l_610f                            	| [$63d8: jsr $610f]
	jcc	l_63e4                             	| [$63db: bcc $63e4]
	move.b	#0x1c,d0                        	| [$63dd: lda #$1c]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63df: sta $1b]
	jra	l_64d6                             	| [$63e1: jra $64d6]
l_63e4:
	move.b	#0x26,d0                        	| [$63e4: lda #$26]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63e6: sta $1b]
	jra	l_64d6                             	| [$63e8: jra $64d6]
l_63eb:
	jbsr	l_61be                            	| [$63eb: jsr $61be]
	jcs	l_63f7                             	| [$63ee: bcs $63f7]
	move.b	#0x40,d0                        	| [$63f0: lda #$40]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63f2: sta $1b]
	jra	l_6594                             	| [$63f4: jra $6594]
l_63f7:
	move.b	#0x42,d0                        	| [$63f7: lda #$42]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$63f9: sta $1b]
	jra	l_6594                             	| [$63fb: jra $6594]
* disable this and players don't go to forearm pass
* to the other player
move_to_ball_reception_63fe:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$63fe: lda $53]
	cmp.b	#0x02,d0                         	| [$6400: cmp #$02]
	* bcs=>bcc
	jcc	l_63eb                             	| [$6402: bcs $63eb]
	cmp.b	#0x01,d0                         	| [$6404: cmp #$01]
	* bcs=>bcc
	jcc	l_640f                             	| [$6406: bcs $640f]
l_6408:
	move.b	#0x20,d0                        	| [$6408: lda #$20]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$640a: sta $1b]
	jra	l_64d6                             	| [$640c: jra $64d6]
l_640f:
	jbsr	l_610f                            	| [$640f: jsr $610f]
	jcc	l_641b                             	| [$6412: bcc $641b]
	move.b	#0x1c,d0                        	| [$6414: lda #$1c]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6416: sta $1b]
	jra	l_6594                             	| [$6418: jra $6594]
l_641b:
	move.b	#0x26,d0                        	| [$641b: lda #$26]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$641d: sta $1b]
	jra	l_6594                             	| [$641f: jra $6594]
l_6422:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$6422: lda $53]
	beq	l_6408                             	| [$6424: beq $6408]
	cmp.b	#0x02,d0                         	| [$6426: cmp #$02]
	* bcs=>bcc
	jcc	l_6431                             	| [$6428: bcs $6431]
	move.b	#0x14,d0                        	| [$642a: lda #$14]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$642c: sta $1b]
	jra	l_6594                             	| [$642e: jra $6594]
l_6431:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6431: ldx $00]
	GET_ADDRESS	0x51                       	| [$6433: lda $51, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d2                           	| [$6435: tay]
	GET_ADDRESS	0x0316                     	| [$6436: lda $0316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$6439: and #$7f]
	cmp.b	#0x07,d0                         	| [$643b: cmp #$07]
	jne	l_6452                             	| [$643d: jne $6452]
	jbsr	l_61be                            	| [$643f: jsr $61be]
	jcs	l_644b                             	| [$6442: bcs $644b]
	move.b	#0x08,d0                        	| [$6444: lda #$08]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6446: sta $1b]
	jra	l_6594                             	| [$6448: jra $6594]
l_644b:
	move.b	#0x0a,d0                        	| [$644b: lda #$0a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$644d: sta $1b]
	jra	l_6594                             	| [$644f: jra $6594]
l_6452:
	rts                                    	| [$6452: rts]
l_6453:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$6453: lda $53]
	jne	l_646a                             	| [$6455: jne $646a]
	jbsr	l_610f                            	| [$6457: jsr $610f]
	jcc	l_6463                             	| [$645a: bcc $6463]
	move.b	#0x1a,d0                        	| [$645c: lda #$1a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$645e: sta $1b]
	jra	l_64d6                             	| [$6460: jra $64d6]
l_6463:
	move.b	#0x24,d0                        	| [$6463: lda #$24]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6465: sta $1b]
	jra	l_64d6                             	| [$6467: jra $64d6]
l_646a:
	jbsr	l_61be                            	| [$646a: jsr $61be]
	jcs	l_6476                             	| [$646d: bcs $6476]
	move.b	#0x3c,d0                        	| [$646f: lda #$3c]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6471: sta $1b]
	jra	l_6594                             	| [$6473: jra $6594]
l_6476:
	move.b	#0x3e,d0                        	| [$6476: lda #$3e]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6478: sta $1b]
	jra	l_6594                             	| [$647a: jra $6594]
l_647d:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$647d: lda $53]
	beq	l_6408                             	| [$647f: beq $6408]
	cmp.b	#0x02,d0                         	| [$6481: cmp #$02]
	* bcs=>bcc
	jcc	l_646a                             	| [$6483: bcs $646a]
	jbsr	l_610f                            	| [$6485: jsr $610f]
	jcc	l_6491                             	| [$6488: bcc $6491]
	move.b	#0x1a,d0                        	| [$648a: lda #$1a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$648c: sta $1b]
	jra	l_6594                             	| [$648e: jra $6594]
l_6491:
	move.b	#0x24,d0                        	| [$6491: lda #$24]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6493: sta $1b]
	jra	l_6594                             	| [$6495: jra $6594]
ball_touched_ground_6498:
	move.b	#0x2e,d0                        	| [$6498: lda #$2e]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$649a: sta $1b]
	jra	l_64b4                             	| [$649c: jra $64b4]
l_649f:
	move.b	#0x30,d0                        	| [$649f: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$64a1: sta $1b]
	jra	l_64b4                             	| [$64a3: jra $64b4]
player_service_64a6:
	move.b	#0x32,d0                        	| [$64a6: lda #$32]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$64a8: sta $1b]
	jra	l_64bb                             	| [$64aa: jra $64bb]
player_awaiting_service_64ad:
	move.b	#0x34,d0                        	| [$64ad: lda #$34]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$64af: sta $1b]
	jra	l_64b4                             	| [$64b1: jra $64b4]
l_64b4:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$64b4: lda $01]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$64b6: sta $2a]
	jra	l_659b                             	| [$64b8: jra $659b]
l_64bb:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$64bb: lda $4f]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$64bd: sta $2a]
	jra	l_659b                             	| [$64bf: jra $659b]
l_64c2:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$64c2: ldy $00]
	GET_ADDRESS	0x005f                     	| [$64c4: lda $005f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$64c7: sta $2a]
	jra	l_659b                             	| [$64c9: jra $659b]
l_64cc:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$64cc: ldy $00]
	GET_ADDRESS	0x0061                     	| [$64ce: lda $0061, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$64d1: sta $2a]
	jra	l_659b                             	| [$64d3: jra $659b]
l_64d6:
	st.b	d0                        	| [$64d6: lda #$ff]
	move.b	d0,d2                           	| [$64d8: tay]
	OP_R_ON_ZP_ADDRESS	move,0x01,d1 |  [$64d9: ldx $01]
	GET_ADDRESS	0x031a                     	| [$64db: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$64de: and #$7f]
	cmp.b	#0x22,d0                         	| [$64e0: cmp #$22]
	jne	l_64e6                             	| [$64e2: jne $64e6]
                                         | [$64e4: iny]
	addq.b	#2,d2                           	| [$64e5: iny]
l_64e6:
	addq.b	#1,d1                           	| [$64e6: inx]
	GET_ADDRESS	0x031a                     	| [$64e7: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$64ea: and #$7f]
	cmp.b	#0x22,d0                         	| [$64ec: cmp #$22]
	jne	l_64f1                             	| [$64ee: jne $64f1]
	addq.b	#1,d2                           	| [$64f0: iny]
l_64f1:
	move.b	d2,d0                           	| [$64f1: tya]
	bmi	l_64ff                             	| [$64f2: bmi $64ff]
	cmp.b	#0x02,d0                         	| [$64f4: cmp #$02]
	beq	l_64ff                             	| [$64f6: beq $64ff]
	OP_R_ON_ZP_ADDRESS	or,0x01,d0 |  [$64f8: ora $01]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$64fa: sta $2a]
	jra	l_659b                             	| [$64fc: jra $659b]
l_64ff:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$64ff: ldy $00]
	GET_ADDRESS	0x63                       	| [$6501: ldx $63, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0x030e                     	| [$6503: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_650b                             	| [$6506: bpl $650b]
	jra	l_658c                             	| [$6508: jra $658c]
l_650b:
	GET_ADDRESS	0x0384                     	| [$650b: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$650e: pha]
	GET_ADDRESS	0x0380                     	| [$650f: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$6512: pha]
	GET_ADDRESS	0x038c                     	| [$6513: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$6516: pha]
	GET_ADDRESS	0x0388                     	| [$6517: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$651a: pha]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$651b: lda $00]
	movem.w	d0,-(sp)                       	| [$651d: pha]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$651e: lda $01]
	movem.w	d0,-(sp)                       	| [$6520: pha]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6521: lda $1b]
	movem.w	d0,-(sp)                       	| [$6523: pha]
	GET_ADDRESS	player_direction_032b      	| [$6524: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$6527: pha]
	move.b	#0x0d,d2                        	| [$6528: ldy #$0d]
	GET_ADDRESS	0x03f0                     	| [$652a: lda $03f0]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$652d: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$6530: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03ef                     	| [$6533: lda $03ef]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$6536: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$6539: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$653c: lda #$00]
	GET_ADDRESS	0x038c                     	| [$653e: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00c7                     	| [$6541: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03f1                     	| [$6544: lda $03f1]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$6547: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x00b9                     	| [$654a: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	d1,d0                           	| [$654d: txa]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$654e: sta current_object_index_4c]
	move.b	#0x0d,d0                        	| [$6550: lda #$0d]
	jbsr	l_b44a                            	| [$6552: jsr $b44a]
	GET_ADDRESS	player_direction_032b      	| [$6555: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$6558: lda #$01]
	jbsr	l_8549                            	| [$655a: jsr $8549]
	GET_ADDRESS	0x03f4                     	| [$655d: lda $03f4]
	move.b	(a0),d0                         	| [...]
	                           	| [$6560: sec]
	sub.b	#0x04,d0	| [$6561: sbc #$04]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$6563: cmp $1b]
	SET_X_FROM_CLEARED_C  | store flag for later
	move.w	(sp)+,d0                        	| [$6565: pla]
	GET_ADDRESS	player_direction_032b      	| [$6566: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$6569: pla]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$656a: sta $1b]
	move.w	(sp)+,d0                        	| [$656c: pla]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$656d: sta $01]
	move.w	(sp)+,d0                        	| [$656f: pla]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$6570: sta $00]
	move.w	(sp)+,d0                        	| [$6572: pla]
	GET_ADDRESS	0x0388                     	| [$6573: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$6576: pla]
	GET_ADDRESS	0x038c                     	| [$6577: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$657a: pla]
	GET_ADDRESS	0x0380                     	| [$657b: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$657e: pla]
	GET_ADDRESS	0x0384                     	| [$657f: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	SET_C_FROM_X
	jcs	l_6587                             	| [$6582: bcs $6587]
	jra	l_64cc                             	| [$6584: jra $64cc]
l_6587:
	OP_W_ON_ZP_ADDRESS	move,0x2a,d1 |  [$6587: stx $2a]
	jra	l_659b                             	| [$6589: jra $659b]
l_658c:
	move.b	d1,d0                           	| [$658c: txa]
	eor.b	#0x01,d0                         	| [$658d: eor #$01]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$658f: sta $2a]
	jra	l_659b                             	| [$6591: jra $659b]
l_6594:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$6594: ldy $00]
	GET_ADDRESS	0x0051                     	| [$6596: lda $0051, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$6599: sta $2a]
l_659b:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d2 |  [$659b: ldy $1b]
	GET_BANK_ADDRESS	0x65c3                     	| [$659d: lda $65c3, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$65a0: sta $1c]
	addq	#1,a0                     	| [$65a2: lda $65c4, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$65a5: sta base_screen_pointer_list_001d]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$65a7: lda $2a]
	OP_R_ON_ZP_ADDRESS	cmp,0x01,d0 |  [$65a9: cmp $01]
	beq	l_65b6                             	| [$65ab: beq $65b6]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$65ad: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$65af: sta base_screen_pointer_list_001d]
	                     	| [$65b1: lda $65c4, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$65b4: sta $1c]
l_65b6:
	OP_R_ON_ZP_ADDRESS	move,0x01,d1 |  [$65b6: ldx $01]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$65b8: lda $1c]
	GET_ADDRESS	0x0316                     	| [$65ba: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$65bd: lda base_screen_pointer_list_001d]
	addq	#1,a0                     	| [$65bf: sta $0317, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$65c2: rts]

l_6609:
	move.b	d2,d0                           	| [$6609: tya]
	movem.w	d0,-(sp)                       	| [$660a: pha]
	clr.b	d2                               	| [$660b: ldy #$00]
l_660d:
	jbsr	pseudo_random_d00a                	| [$660d: jsr pseudo_random_d00a]
	                           	| [$6610: clc]
	lsr.b	#1,d0                            	| [$6611: lsr a]
	cmp.b	#0x64,d0                         	| [$6612: cmp #$64]
	* bcc=>bcs (cmp above)
	jcs	l_661d                             	| [$6614: bcc $661d]
	addq.b	#1,d2                           	| [$6616: iny]
	cmp.b	#0x03,d2                         	| [$6617: cpy #$03]
	* bcc=>bcs (cmp above)
	jcs	l_660d                             	| [$6619: bcc $660d]
	move.b	#0x32,d0                        	| [$661b: lda #$32]
l_661d:
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$661d: sta $1c]
	move.b	#0xa0,d0                        	| [$661f: lda #$a0]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6621: sta base_screen_pointer_list_001d]
	clr.b	d0                               	| [$6623: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6625: sta $1e]
	clr.b	d2                               	| [$6627: ldy #$00]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6629: lda $1c]
l_662b:
	SET_XC_FLAGS                           	| [$662b: sec]
	SBC	base_screen_pointer_list_001d      	| [$662c: sbc base_screen_pointer_list_001d]
	jcc	l_6635                             	| [$662e: bcc $6635]
	OP_W_ON_ZP_ADDRESS	addq,0x1e,#1 |  [$6630: inc $1e]
	jra	l_6637                             	| [$6632: jra $6637]
l_6635:
	NEW_ADDRESS
	GET_ADDRESS	base_screen_pointer_list_001d	| [$6635: adc base_screen_pointer_list_001d]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
l_6637:
		| [$6637: lsr base_screen_pointer_list_001d]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x1e                       	| [$6639: asl $1e]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	addq.b	#1,d2                           	| [$663b: iny]
	cmp.b	#0x05,d2                         	| [$663c: cpy #$05]
	* bcc=>bcs (cmp above)
	jcs	l_662b                             	| [$663e: bcc $662b]
	                       	| [$6640: asl $1e]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	                       	| [$6642: asl $1e]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	                       	| [$6644: asl $1e]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	or,0x1e,d0 |  [$6646: ora $1e]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6648: sta $1b]
	clr.b	d0                               	| [$664a: lda #$00]
	clr.b	d2                               	| [$664c: ldy #$00]
	SET_Z_FLAG  | required as abcd doesn't set Z on 0 result
l_664f:
	CLR_XC_FLAGS                           	| [$664f: clc]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$6650: adc (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d4	| [...]
	abcd	d4,d0                    	| [...]
	jcs	l_665e                             	| [$6652: bcs $665e]
	beq	l_665a                             	| [$6654: beq $665a]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$6656: cmp $1b]
	* bcs=>bcc
	jcc	l_665e                             	| [$6658: bcs $665e]
l_665a:
	addq.b	#1,d2                           	| [$665a: iny]
	jra	l_664f                             	| [$665b: jra $664f]
l_665e:
	 |  [$665e: cld]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d2 |  [$665f: sty $1b]
	move.w	(sp)+,d0                        	| [$6661: pla]
	move.b	d0,d2                           	| [$6662: tay]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6663: lda $1b]
	rts                                    	| [$6665: rts]
l_6666:
	move.b	d1,d0                           	| [$6666: txa]
	movem.w	d0,-(sp)                       	| [$6667: pha]
	move.b	d2,d0                           	| [$6668: tya]
	movem.w	d0,-(sp)                       	| [$6669: pha]
	OP_R_ON_ZP_ADDRESS	move,0x47,d0 |  [$666a: lda $47]
	bpl	l_668a                             	| [$666c: bpl $668a]
	GET_ADDRESS	0x030a                     	| [$666e: lda $030a]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$6671: and #$04]
	jne	l_668a                             	| [$6673: jne $668a]
	clr.b	d0                               	| [$6675: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$6677: sta $00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$6679: sta $01]
	OP_R_ON_ZP_ADDRESS	move,0x42,d0 |  [$667b: lda $42]
	OP_R_ON_ZP_ADDRESS	cmp,0x43,d0 |  [$667d: cmp $43]
	jne	l_6687                             	| [$667f: jne $6687]
	jbsr	l_66c6                            	| [$6681: jsr $66c6]
	jra	l_668a                             	| [$6684: jra $668a]
l_6687:
	jbsr	l_66b1                            	| [$6687: jsr $66b1]
l_668a:
	OP_R_ON_ZP_ADDRESS	move,0x48,d0 |  [$668a: lda $48]
	bpl	l_66ac                             	| [$668c: bpl $66ac]
	GET_ADDRESS	0x030c                     	| [$668e: lda $030c]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$6691: and #$04]
	jne	l_66ac                             	| [$6693: jne $66ac]
	move.b	#0x01,d0                        	| [$6695: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$6697: sta $00]
	move.b	#0x10,d0                        	| [$6699: lda #$10]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$669b: sta $01]
	OP_R_ON_ZP_ADDRESS	move,0x44,d0 |  [$669d: lda $44]
	OP_R_ON_ZP_ADDRESS	cmp,0x45,d0 |  [$669f: cmp $45]
	jne	l_66a9                             	| [$66a1: jne $66a9]
	jbsr	l_66c6                            	| [$66a3: jsr $66c6]
	jra	l_66ac                             	| [$66a6: jra $66ac]
l_66a9:
	jbsr	l_66b1                            	| [$66a9: jsr $66b1]
l_66ac:
	move.w	(sp)+,d0                        	| [$66ac: pla]
	move.b	d0,d2                           	| [$66ad: tay]
	move.w	(sp)+,d0                        	| [$66ae: pla]
	move.b	d0,d1                           	| [$66af: tax]
	rts                                    	| [$66b0: rts]
l_66b1:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$66b1: lda $00]
	asl.b	#1,d0                            	| [$66b3: asl a]
	move.b	d0,d1                           	| [$66b4: tax]
	GET_ADDRESS	0x030a                     	| [$66b5: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$66b8: ora #$84]
	                     	| [$66ba: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030b                     	| [$66bd: lda $030b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$66c0: ora #$84]
	                     	| [$66c2: sta $030b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$66c5: rts]
l_66c6:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$66c6: lda $4f]
	bpl	l_6716                             	| [$66c8: bpl $6716]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$66ca: lda $56]
	GET_ADDRESS	0x01                       	| [$66cc: eor $01]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x1f,d0                         	| [$66ce: and #$1f]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$66d0: sta $1b]
	and.b	#0x10,d0                         	| [$66d2: and #$10]
	beq	l_66dd                             	| [$66d4: beq $66dd]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$66d6: lda $1b]
	                           	| [$66d8: sec]
	sub.b	#0x06,d0	| [$66d9: sbc #$06]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$66db: sta $1b]
l_66dd:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$66dd: lda $1b]
	asl.b	#1,d0                            	| [$66df: asl a]
	move.b	d0,d2                           	| [$66e0: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_66ee            	| [$66e1: lda jump_table_66ee, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$66e4: sta $1b]
	GET_BANK_ADDRESS	0x66ef                     	| [$66e6: lda $66ef, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$66e9: sta $1c]
	rts |  [$66eb: jra ($001b)] [indirect_jump]

l_6716:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$6716: lda $00]
	move.b	d0,d1                           	| [$6718: tax]
	asl.b	#1,d0                            	| [$6719: asl a]
	move.b	d0,d2                           	| [$671a: tay]
	GET_ADDRESS	0x030a                     	| [$671b: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x80,d0                         	| [$671e: and #$80]
	jne	l_6723                             	| [$6720: jne $6723]
	addq.b	#1,d2                           	| [$6722: iny]
l_6723:
	move.b	d2,d0                           	| [$6723: tya]
	GET_ADDRESS	0x4d                       	| [$6724: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$6726: rts]
l_6727:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6727: ldx $00]
	GET_ADDRESS	0x5f                       	| [$6729: lda $5f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$672b: tax]
	GET_ADDRESS	0x031a                     	| [$672c: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$672f: and #$7f]
	cmp.b	#0x0e,d0                         	| [$6731: cmp #$0e]
	jne	l_6738                             	| [$6733: jne $6738]
	jra	l_6869                             	| [$6735: jra $6869]
l_6738:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$6738: lda $00]
	move.b	#0x01,d0                        	| [$673a: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$673c: sta $1b]
	jbsr	l_68b1                            	| [$673e: jsr $68b1]
	jne	l_6747                             	| [$6741: jne $6747]
	GET_ADDRESS	0x07fd                     	| [$6743: inc $07fd]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$6746: rts]
l_6747:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$6747: lda $00]
	asl.b	#1,d0                            	| [$6749: asl a]
	move.b	d0,d1                           	| [$674a: tax]
	GET_ADDRESS	0x030e                     	| [$674b: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$674e: and #$40]
	beq	l_6755                             	| [$6750: beq $6755]
	jra	l_6848                             	| [$6752: jra $6848]
l_6755:
	GET_ADDRESS	0x030f                     	| [$6755: lda $030f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$6758: and #$40]
	beq	l_675f                             	| [$675a: beq $675f]
	jra	l_682b                             	| [$675c: jra $682b]
l_675f:
	GET_ADDRESS	0x07fd                     	| [$675f: lda $07fd]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$6762: cmp #$05]
	* bcc=>bcs (cmp above)
	jcs	l_6772                             	| [$6764: bcc $6772]
	GET_ADDRESS	0x031a                     	| [$6766: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$6769: and #$7f]
	cmp.b	#0x06,d0                         	| [$676b: cmp #$06]
	* bcc=>bcs (cmp above)
	jcs	l_6772                             	| [$676d: bcc $6772]
	jra	l_67c7                             	| [$676f: jra $67c7]
l_6772:
	jra	l_6809                             	| [$6772: jra $6809]
l_6775:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6775: ldx $00]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$6777: lda $56]
	and.b	#0x20,d0                         	| [$6779: and #$20]
	jne	l_6783                             	| [$677b: jne $6783]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$677d: lda $53]
	cmp.b	#0x01,d0                         	| [$677f: cmp #$01]
	beq	l_6791                             	| [$6781: beq $6791]
l_6783:
	move.b	d1,d0                           	| [$6783: txa]
	asl.b	#1,d0                            	| [$6784: asl a]
	move.b	d0,d1                           	| [$6785: tax]
	move.b	#0x14,d0                        	| [$6786: lda #$14]
	GET_ADDRESS	0x0316                     	| [$6788: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0317                     	| [$678b: sta $0317, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_67d9                             	| [$678e: jra $67d9]
l_6791:
	GET_ADDRESS	0x0411                     	| [$6791: ldy $0411]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0x030e                     	| [$6794: lda $030e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$6797: and #$40]
	jne	l_6783                             	| [$6799: jne $6783]
	GET_ADDRESS	0x4d                       	| [$679b: sty $4d, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030a                     	| [$679d: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$67a0: ora #$80]
	                     	| [$67a2: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	d2,d0                           	| [$67a5: tya]
	eor.b	#0x01,d0                         	| [$67a6: eor #$01]
	move.b	d0,d2                           	| [$67a8: tay]
	                     	| [$67a9: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$67ac: and #$7f]
	                     	| [$67ae: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jra	l_67c7                             	| [$67b1: jra $67c7]
l_67b4:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$67b4: ldy $00]
	GET_ADDRESS	0x0411                     	| [$67b6: lda $0411]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x005f                     	| [$67b9: cmp $005f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	beq	l_67d9                             	| [$67bc: beq $67d9]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$67be: lda $53]
	cmp.b	#0x01,d0                         	| [$67c0: cmp #$01]
	beq	l_6775                             	| [$67c2: beq $6775]
	jra	l_67d9                             	| [$67c4: jra $67d9]
l_67c7:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$67c7: lda $00]
	asl.b	#1,d0                            	| [$67c9: asl a]
	move.b	d0,d2                           	| [$67ca: tay]
	GET_ADDRESS	0x030a                     	| [$67cb: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$67ce: ora #$04]
	                     	| [$67d0: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$67d3: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$67d5: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$67d8: rts]
l_67d9:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$67d9: lda $00]
	asl.b	#1,d0                            	| [$67db: asl a]
	move.b	d0,d1                           	| [$67dc: tax]
	GET_ADDRESS	0x0316                     	| [$67dd: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$67e0: and #$7f]
	cmp.b	#0x0b,d0                         	| [$67e2: cmp #$0b]
	beq	l_67c7                             	| [$67e4: beq $67c7]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$67e6: ldx $00]
	GET_ADDRESS	0x0411                     	| [$67e8: lda $0411]
	move.b	(a0),d0                         	| [...]
	move.b	d0,d2                           	| [$67eb: tay]
	eor.b	#0x01,d0                         	| [$67ec: eor #$01]
	GET_ADDRESS	0x4d                       	| [$67ee: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d0,d1                           	| [$67f0: tax]
	GET_ADDRESS	0x030a                     	| [$67f1: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$67f4: ora #$84]
	                     	| [$67f6: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                     	| [$67f9: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$67fc: and #$7f]
	or.b	#0x04,d0                          	| [$67fe: ora #$04]
	                     	| [$6800: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$6803: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$6805: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$6808: rts]
l_6809:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6809: ldx $00]
	GET_ADDRESS	0x61                       	| [$680b: lda $61, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x4d                       	| [$680d: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d0,d1                           	| [$680f: tax]
	eor.b	#0x01,d0                         	| [$6810: eor #$01]
	move.b	d0,d2                           	| [$6812: tay]
	GET_ADDRESS	0x030a                     	| [$6813: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$6816: ora #$84]
	                     	| [$6818: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                     	| [$681b: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$681e: and #$7f]
l_6820:
	or.b	#0x04,d0                          	| [$6820: ora #$04]
	GET_ADDRESS	0x030a                     	| [$6822: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$6825: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$6827: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$682a: rts]
l_682b:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$682b: lda $00]
	move.b	d0,d1                           	| [$682d: tax]
	asl.b	#1,d0                            	| [$682e: asl a]
	GET_ADDRESS	0x4d                       	| [$682f: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d0,d1                           	| [$6831: tax]
	GET_ADDRESS	0x030a                     	| [$6832: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$6835: ora #$84]
	                     	| [$6837: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030b                     	| [$683a: lda $030b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$683d: and #$7f]
	                     	| [$683f: sta $030b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$6842: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$6844: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$6847: rts]
l_6848:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$6848: lda $00]
	move.b	d0,d1                           	| [$684a: tax]
	asl.b	#1,d0                            	| [$684b: asl a]
	or.b	#0x01,d0                          	| [$684c: ora #$01]
	GET_ADDRESS	0x4d                       	| [$684e: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d0,d1                           	| [$6850: tax]
	GET_ADDRESS	0x030a                     	| [$6851: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$6854: ora #$80]
	                     	| [$6856: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0309                     	| [$6859: lda $0309, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$685c: and #$7f]
	or.b	#0x04,d0                          	| [$685e: ora #$04]
	                     	| [$6860: sta $0309, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$6863: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$6865: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$6868: rts]
l_6869:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$6869: ldx $00]
	GET_ADDRESS	0x5f                       	| [$686b: lda $5f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$686d: tax]
	eor.b	#0x01,d0                         	| [$686e: eor #$01]
	move.b	d0,d2                           	| [$6870: tay]
	GET_ADDRESS	0x030a                     	| [$6871: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$6874: ora #$84]
	                     	| [$6876: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	                     	| [$6879: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$687c: and #$7f]
	or.b	#0x04,d0                          	| [$687e: ora #$04]
	GET_ADDRESS	0x030a                     	| [$6880: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$6883: txa]
	lsr.b	#1,d0                            	| [$6884: lsr a]
	move.b	d0,d1                           	| [$6885: tax]
	move.b	d2,d0                           	| [$6886: tya]
	GET_ADDRESS	0x4d                       	| [$6887: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$6889: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$688b: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$688e: rts]
l_688f:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$688f: ldx $00]
	GET_ADDRESS	0x5f                       	| [$6891: lda $5f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x4d                       	| [$6893: sta $4d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d0,d1                           	| [$6895: tax]
	eor.b	#0x01,d0                         	| [$6896: eor #$01]
	move.b	d0,d2                           	| [$6898: tay]
	GET_ADDRESS	0x030a                     	| [$6899: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x84,d0                          	| [$689c: ora #$84]
	                     	| [$689e: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                     	| [$68a1: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$68a4: and #$7f]
	or.b	#0x04,d0                          	| [$68a6: ora #$04]
	                     	| [$68a8: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$68ab: lda #$00]
	GET_ADDRESS	0x07fd                     	| [$68ad: sta $07fd]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$68b0: rts]
l_68b1:
	GET_ADDRESS	0x0377                     	| [$68b1: lda $0377]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$68b4: and #$0f]
	cmp.b	#0x03,d0                         	| [$68b6: cmp #$03]
	* bcs=>bcc
	jcc	l_68fc                             	| [$68b8: bcs $68fc]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$68ba: sta $2a]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$68bc: lda $00]
                                         | [$68be: ror a]
	roxr.b	#2,d0                           	| [$68bf: ror a]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$68c0: sta $29]
	SET_XC_FLAGS                           	| [$68c2: sec]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$68c3: lda ball_logical_x_93]
	SBC_IMM	0xc8                           	| [$68c5: sbc #$c8]
	OP_W_ON_ZP_ADDRESS	move,0x28,d0 |  [$68c7: sta $28]
	GET_ADDRESS	0x1b                       	| [$68c9: asl $1b]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$68cb: lda $00]
	                       	| [$68cd: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$68cf: sta $1b]
	asl.b	#1,d0                            	| [$68d1: asl a]
	GET_ADDRESS	0x1b                       	| [$68d2: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x2a                       	| [$68d4: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$68d6: tay]
	SET_XC_FLAGS                           	| [$68d7: sec]
	OP_R_ON_ZP_ADDRESS	move,0x28,d0 |  [$68d8: lda $28]
	SBC_Y_BANK	0x68ff                           	| [$68da: sbc $68ff, y] [bank_address]
	bmi	l_68f7                             	| [$68dd: bmi $68f7]
	move.b	d2,d0                           	| [$68df: tya]
	asl.b	#1,d0                            	| [$68e0: asl a]
	move.b	d0,d2                           	| [$68e1: tay]
	SET_XC_FLAGS                           	| [$68e2: sec]
	GET_BANK_ADDRESS	0x690b                     	| [$68e3: lda $690b, y] [bank_address] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC	0x28                               	| [$68e6: sbc $28]
	bmi	l_68fc                             	| [$68e8: bmi $68fc]
                                         | [$68ea: asl a]
                                         | [$68eb: asl a]
	asl.b	#3,d0                            	| [$68ec: asl a]
	GET_BANK_ADDRESS	0x690c                     	| [$68ed: adc $690c, y] [bank_address] [bank_address]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$68f0: sta $2a]
	SET_XC_FLAGS                           	| [$68f2: sec]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$68f3: lda ball_logical_y_bd]
	SBC	0x2a                               	| [$68f5: sbc $2a]
l_68f7:
	GET_ADDRESS	0x29                       	| [$68f7: eor $29]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x80,d0                         	| [$68f9: and #$80]
	rts                                    	| [$68fb: rts]
l_68fc:
	clr.b	d0                               	| [$68fc: lda #$00]
	rts                                    	| [$68fe: rts]

compare_player_positions_6923:
	movem.w	d0,-(sp)                       	| [$6923: pha]
	move.b	d1,d0                           	| [$6924: txa]
	movem.w	d0,-(sp)                       	| [$6925: pha]
	move.b	d2,d0                           	| [$6926: tya]
	movem.w	d0,-(sp)                       	| [$6927: pha]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d1 |  [$6928: ldx $1b]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d2 |  [$692a: ldy $1c]
	SET_XC_FLAGS                           	| [$692c: sec]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$692d: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	objects_logical_x_array_8f       	| [$692f: sbc objects_logical_x_array_8f, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6932: sta $1b]
	GET_ADDRESS	objects_side_array_9d      	| [$6934: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	objects_side_array_9d            	| [$6936: sbc objects_side_array_9d, y]
	beq	l_694f                             	| [$6939: beq $694f]
	cmp.b	#0xff,d0                         	| [$693b: cmp #$ff]
	* bcs=>bcc
	jcc	l_6946                             	| [$693d: bcs $6946]
	st.b	d0                        	| [$693f: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6941: sta $1b]
	jra	l_694f                             	| [$6943: jra $694f]
l_6946:
	                           	| [$6946: clc]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6947: lda $1b]
	not.b	d0                               	| [$6949: eor #$ff]
	move.b	#0x01,d4	| [$694b: adc #$01]
	add.b	d4,d0                        	| [$694b: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$694d: sta $1b]
l_694f:
	SET_XC_FLAGS                           	| [$694f: sec]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$6950: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x00b9                           	| [$6952: sbc $00b9, y]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6955: sta $1c]
	GET_ADDRESS	0xc7                       	| [$6957: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x00c7                           	| [$6959: sbc $00c7, y]
	beq	l_6972                             	| [$695c: beq $6972]
	cmp.b	#0xff,d0                         	| [$695e: cmp #$ff]
	* bcs=>bcc
	jcc	l_6969                             	| [$6960: bcs $6969]
	st.b	d0                        	| [$6962: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6964: sta $1c]
	jra	l_6972                             	| [$6966: jra $6972]
l_6969:
	                           	| [$6969: clc]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$696a: lda $1c]
	not.b	d0                               	| [$696c: eor #$ff]
	move.b	#0x01,d4	| [$696e: adc #$01]
	add.b	d4,d0                        	| [$696e: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6970: sta $1c]
l_6972:
	SET_XC_FLAGS                           	| [$6972: sec]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$6973: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x00e3                           	| [$6975: sbc $00e3, y]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6978: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0xf1                       	| [$697a: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x00f1                           	| [$697c: sbc $00f1, y]
	beq	l_6995                             	| [$697f: beq $6995]
	cmp.b	#0xff,d0                         	| [$6981: cmp #$ff]
	* bcs=>bcc
	jcc	l_698c                             	| [$6983: bcs $698c]
	st.b	d0                        	| [$6985: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6987: sta base_screen_pointer_list_001d]
	jra	l_6995                             	| [$6989: jra $6995]
l_698c:
	                           	| [$698c: clc]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$698d: lda base_screen_pointer_list_001d]
	not.b	d0                               	| [$698f: eor #$ff]
	move.b	#0x01,d4	| [$6991: adc #$01]
	add.b	d4,d0                        	| [$6991: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6993: sta base_screen_pointer_list_001d]
l_6995:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6995: lda $1b]
	cmp.b	#0xff,d0                         	| [$6997: cmp #$ff]
	beq	l_69d3                             	| [$6999: beq $69d3]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$699b: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$699d: sta multipurpose_12]
	clr.b	d0                               	| [$699f: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$69a1: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$69a3: sta multipurpose_13]
	jbsr	l_d129                            	| [$69a5: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$69a8: lda multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$69aa: sta $1e]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$69ac: lda $15]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$69ae: sta $1f]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$69b0: lda $1c]
	cmp.b	#0xff,d0                         	| [$69b2: cmp #$ff]
	beq	l_69d3                             	| [$69b4: beq $69d3]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$69b6: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$69b8: sta multipurpose_12]
	clr.b	d0                               	| [$69ba: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$69bc: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$69be: sta multipurpose_13]
	jbsr	l_d129                            	| [$69c0: jsr $d129]
	                           	| [$69c3: clc]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$69c4: lda multipurpose_14]
	GET_ADDRESS	0x1e                       	| [$69c6: adc $1e]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$69c8: sta $1e]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$69ca: lda $15]
	GET_ADDRESS	0x1f                       	| [$69cc: adc $1f]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$69ce: sta $1f]
	jra	l_69d9                             	| [$69d0: jra $69d9]
l_69d3:
	st.b	d0                        	| [$69d3: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$69d5: sta $1e]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$69d7: sta $1f]
l_69d9:
	move.w	(sp)+,d0                        	| [$69d9: pla]
	move.b	d0,d2                           	| [$69da: tay]
	move.w	(sp)+,d0                        	| [$69db: pla]
	move.b	d0,d1                           	| [$69dc: tax]
	move.w	(sp)+,d0                        	| [$69dd: pla]
	rts                                    	| [$69de: rts]
l_69df:
	movem.w	d0,-(sp)                       	| [$69df: pha]
	move.b	d1,d0                           	| [$69e0: txa]
	movem.w	d0,-(sp)                       	| [$69e1: pha]
	move.b	d2,d0                           	| [$69e2: tya]
	movem.w	d0,-(sp)                       	| [$69e3: pha]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$69e4: lda $56]
	and.b	#0x0f,d0                         	| [$69e6: and #$0f]
	cmp.b	#0x06,d0                         	| [$69e8: cmp #$06]
	* bcs=>bcc
	jcc	l_6a11                             	| [$69ea: bcs $6a11]
	asl.b	#1,d0                            	| [$69ec: asl a]
	move.b	d0,d2                           	| [$69ed: tay]
	move.b	d1,d0                           	| [$69ee: txa]
                                         | [$69ef: asl a]
                                         | [$69f0: asl a]
	asl.b	#3,d0                            	| [$69f1: asl a]
	eor.b	#0x10,d0                         	| [$69f2: eor #$10]
	and.b	#0x10,d0                         	| [$69f4: and #$10]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$69f6: sta $00]
	PUSH_TABLE_Y_ADDRESS	jump_table_6a05            	| [$69f8: lda jump_table_6a05, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$69fb: sta $1b]
	GET_BANK_ADDRESS	0x6a06                     	| [$69fd: lda $6a06, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6a00: sta $1c]
	rts |  [$6a02: jra ($001b)] [indirect_jump]

l_6a11:
	st.b	d0                        	| [$6a11: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6a13: sta $1b]
	jra	l_6b79                             	| [$6a15: jra $6b79]

l_6a18:
	move.b	#0x09,d0                        	| [$6a18: lda #$09]
	OP_W_ON_ZP_ADDRESS	move,0x27,d0 |  [$6a1a: sta $27]
	move.b	#0x2f,d0                        	| [$6a1c: lda #$2f]
	OP_W_ON_ZP_ADDRESS	move,0x28,d0 |  [$6a1e: sta $28]
	move.b	#0x11,d0                        	| [$6a20: lda #$11]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$6a22: sta $29]
	move.b	#0x14,d0                        	| [$6a24: lda #$14]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$6a26: sta $2a]
	jra	l_6a3b                             	| [$6a28: jra $6a3b]
l_6a2b:
	move.b	#0x50,d0                        	| [$6a2b: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x27,d0 |  [$6a2d: sta $27]
	move.b	#0x76,d0                        	| [$6a2f: lda #$76]
	OP_W_ON_ZP_ADDRESS	move,0x28,d0 |  [$6a31: sta $28]
	move.b	#0x58,d0                        	| [$6a33: lda #$58]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$6a35: sta $29]
	move.b	#0x5b,d0                        	| [$6a37: lda #$5b]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$6a39: sta $2a]
l_6a3b:
	clr.b	d0                               	| [$6a3b: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6a3d: sta $26]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d1 |  [$6a3f: stx $1c]
	move.b	d1,d0                           	| [$6a41: txa]
	lsr.b	#1,d0                            	| [$6a42: lsr a]
	move.b	d0,d1                           	| [$6a43: tax]
	eor.b	#0x01,d0                         	| [$6a44: eor #$01]
	move.b	d0,d2                           	| [$6a46: tay]
	SET_XC_FLAGS                           	| [$6a47: sec]
	GET_ADDRESS	score_array_57             	| [$6a48: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x0057                           	| [$6a4a: sbc $0057, y]
	beq	l_6a53                             	| [$6a4d: beq $6a53]
	bpl	l_6a55                             	| [$6a4f: bpl $6a55]
	OP_W_ON_ZP_ADDRESS	addq,0x26,#1 |  [$6a51: inc $26]
l_6a53:
	OP_W_ON_ZP_ADDRESS	addq,0x26,#1 |  [$6a53: inc $26]
l_6a55:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d1 |  [$6a55: ldx $1c]
	GET_ADDRESS	0x0312                     	| [$6a57: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6a5a: asl a]
	move.b	d0,d2                           	| [$6a5b: tay]
	                           	| [$6a5c: clc]
	OP_R_ON_ZP_ADDRESS	move,0x3a,d0 |  [$6a5d: lda $3a]
	asl.b	#1,d0                            	| [$6a5f: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6a60: sta $1c]
	                           	| [$6a62: clc]
	GET_BANK_ADDRESS	0x4014                     	| [$6a63: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$6a66: sta screen_attribute_dest_address_16]
	GET_ADDRESS	0x1c                       	| [$6a68: adc $1c]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	GET_ADDRESS	0x27                       	| [$6a6a: adc $27]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6a6c: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$6a6e: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$6a71: sta $17]
	moveq	#0x00,d4	| [$6a73: adc #$00]
	addx.b	d4,d0                        	| [$6a73: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6a75: sta $11]
	jbsr	l_6609                            	| [$6a77: jsr $6609]
	cmp.b	#0x01,d0                         	| [$6a7a: cmp #$01]
	* bcs=>bcc
	jcc	l_6aa5                             	| [$6a7c: bcs $6aa5]
	 |  [$6a7e: lda $56]
	          	| [$6a80: ora #$20]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x20 |  [$6a82: sta $56]
	OP_R_ON_ZP_ADDRESS	move,0x26,d0 |  [$6a84: lda $26]
	asl.b	#1,d0                            	| [$6a86: asl a]
	GET_ADDRESS	0x26                       	| [$6a87: adc $26]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	asl.b	#1,d0                            	| [$6a89: asl a]
	                       	| [$6a8a: adc $26]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x28                       	| [$6a8c: adc $28]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	screen_attribute_dest_address_16	| [$6a8e: adc screen_attribute_dest_address_16]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6a90: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x17,d0 |  [$6a92: lda $17]
	moveq	#0x00,d4	| [$6a94: adc #$00]
	addx.b	d4,d0                        	| [$6a94: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6a96: sta $11]
	jbsr	l_6609                            	| [$6a98: jsr $6609]
	                           	| [$6a9b: clc]
	add.b	#0x09,d0                        	| [$6a9c: adc #$09]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$6a9e: ora $00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6aa0: sta $1b]
	jra	l_6b79                             	| [$6aa2: jra $6b79]
l_6aa5:
	 |  [$6aa5: lda $56]
	         	| [$6aa7: and #$df]
	OP_W_ON_ZP_ADDRESS	and,0x56,#0xdf |  [$6aa9: sta $56]
	                           	| [$6aab: clc]
	OP_R_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$6aac: lda screen_attribute_dest_address_16]
	GET_ADDRESS	0x29                       	| [$6aae: adc $29]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6ab0: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x17,d0 |  [$6ab2: lda $17]
	moveq	#0x00,d4	| [$6ab4: adc #$00]
	addx.b	d4,d0                        	| [$6ab4: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6ab6: sta $11]
	jbsr	l_6609                            	| [$6ab8: jsr $6609]
	jne	l_6adb                             	| [$6abb: jne $6adb]
	                           	| [$6abd: clc]
	OP_R_ON_ZP_ADDRESS	move,0x26,d0 |  [$6abe: lda $26]
                                         | [$6ac0: asl a]
                                         | [$6ac1: asl a]
	asl.b	#3,d0                            	| [$6ac2: asl a]
	GET_ADDRESS	0x26                       	| [$6ac3: adc $26]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x2a                       	| [$6ac5: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	screen_attribute_dest_address_16	| [$6ac7: adc screen_attribute_dest_address_16]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6ac9: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x17,d0 |  [$6acb: lda $17]
	moveq	#0x00,d4	| [$6acd: adc #$00]
	addx.b	d4,d0                        	| [$6acd: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6acf: sta $11]
	jbsr	l_6609                            	| [$6ad1: jsr $6609]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$6ad4: ora $00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ad6: sta $1b]
	jra	l_6b79                             	| [$6ad8: jra $6b79]
l_6adb:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6adb: sta $1b]
	move.b	d1,d0                           	| [$6add: txa]
	lsr.b	#1,d0                            	| [$6ade: lsr a]
	eor.b	#0x01,d0                         	| [$6adf: eor #$01]
	move.b	d0,d2                           	| [$6ae1: tay]
	GET_ADDRESS	0x005f                     	| [$6ae2: lda $005f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$6ae5: tay]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ae6: lda $1b]
	cmp.b	#0x02,d0                         	| [$6ae8: cmp #$02]
	jne	l_6af0                             	| [$6aea: jne $6af0]
	move.b	d2,d0                           	| [$6aec: tya]
	eor.b	#0x01,d0                         	| [$6aed: eor #$01]
	move.b	d0,d2                           	| [$6aef: tay]
l_6af0:
	GET_ADDRESS	0x0373                     	| [$6af0: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6af3: sta $1b]
	jra	l_6b79                             	| [$6af5: jra $6b79]
l_6af8:
	GET_ADDRESS	0x0373                     	| [$6af8: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$6afb: and #$0f]
	cmp.b	#0x0c,d0                         	| [$6afd: cmp #$0c]
	* bcs=>bcc
	jcc	l_6b0f                             	| [$6aff: bcs $6b0f]
	cmp.b	#0x09,d0                         	| [$6b01: cmp #$09]
	* bcs=>bcc
	jcc	l_6b0a                             	| [$6b03: bcs $6b0a]
	move.b	#0x8b,d0                        	| [$6b05: lda #$8b]
	jra	l_6b11                             	| [$6b07: jra $6b11]
l_6b0a:
	move.b	#0x9b,d0                        	| [$6b0a: lda #$9b]
	jra	l_6b11                             	| [$6b0c: jra $6b11]
l_6b0f:
	move.b	#0xab,d0                        	| [$6b0f: lda #$ab]
l_6b11:
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6b11: sta $26]
	OP_R_ON_ZP_ADDRESS	move,0x3a,d0 |  [$6b13: lda $3a]
                                         | [$6b15: asl a]
	asl.b	#2,d0                            	| [$6b16: asl a]
	GET_ADDRESS	0x26                       	| [$6b17: adc $26]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6b19: sta $26]
	GET_ADDRESS	0x031a                     	| [$6b1b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$6b1e: and #$7f]
	cmp.b	#0x0f,d0                         	| [$6b20: cmp #$0f]
	beq	l_6b2b                             	| [$6b22: beq $6b2b]
	                           	| [$6b24: clc]
	OP_R_ON_ZP_ADDRESS	move,0x26,d0 |  [$6b25: lda $26]
	move.b	#0x02,d4	| [$6b27: adc #$02]
	add.b	d4,d0                        	| [$6b27: adc #$02]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6b29: sta $26]
l_6b2b:
	GET_ADDRESS	0x0312                     	| [$6b2b: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$6b2e: asl a]
	move.b	d0,d2                           	| [$6b2f: tay]
	                           	| [$6b30: clc]
	GET_BANK_ADDRESS	0x4014                     	| [$6b31: lda $4014, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x26                       	| [$6b34: adc $26]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$6b36: sta screen_source_pointer_0010]
	GET_BANK_ADDRESS	0x4015                     	| [$6b38: lda $4015, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$6b3b: adc #$00]
	addx.b	d4,d0                        	| [$6b3b: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$6b3d: sta $11]
	jbsr	l_6609                            	| [$6b3f: jsr $6609]
	cmp.b	#0x01,d0                         	| [$6b42: cmp #$01]
	* bcs=>bcc
	jcc	l_6b61                             	| [$6b44: bcs $6b61]
	 |  [$6b46: lda $56]
	                          	| [$6b48: ora #$20]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x20 |  [$6b4a: sta $56]
	jbsr	pseudo_random_d00a                	| [$6b4c: jsr pseudo_random_d00a]
	and.b	#0x07,d0                         	| [$6b4f: and #$07]
	cmp.b	#0x07,d0                         	| [$6b51: cmp #$07]
	jne	l_6b57                             	| [$6b53: jne $6b57]
	move.b	#0x06,d0                        	| [$6b55: lda #$06]
l_6b57:
	                           	| [$6b57: clc]
	add.b	#0x08,d0                        	| [$6b58: adc #$08]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$6b5a: ora $00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6b5c: sta $1b]
	jra	l_6b79                             	| [$6b5e: jra $6b79]

l_6b61:
	 |  [$6b61: lda $56]
	         	| [$6b63: and #$df]
	OP_W_ON_ZP_ADDRESS	and,0x56,#0xdf |  [$6b65: sta $56]
	jbsr	pseudo_random_d00a                	| [$6b67: jsr pseudo_random_d00a]
	and.b	#0x07,d0                         	| [$6b6a: and #$07]
	cmp.b	#0x06,d0                         	| [$6b6c: cmp #$06]
	* bcc=>bcs (cmp above)
	jcs	l_6b72                             	| [$6b6e: bcc $6b72]
	move.b	#0x05,d0                        	| [$6b70: lda #$05]
l_6b72:
	                           	| [$6b72: clc]
	add.b	#0x03,d0                        	| [$6b73: adc #$03]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$6b75: ora $00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6b77: sta $1b]
l_6b79:
	move.w	(sp)+,d0                        	| [$6b79: pla]
	move.b	d0,d2                           	| [$6b7a: tay]
	move.w	(sp)+,d0                        	| [$6b7b: pla]
	move.b	d0,d1                           	| [$6b7c: tax]
	move.w	(sp)+,d0                        	| [$6b7d: pla]
	rts                                    	| [$6b7e: rts]
l_6b7f:
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6b7f: sta $1c]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d2 |  [$6b81: sty $1b]
	move.b	d1,d0                           	| [$6b83: txa]
	movem.w	d0,-(sp)                       	| [$6b84: pha]
	move.b	d2,d0                           	| [$6b85: tya]
	movem.w	d0,-(sp)                       	| [$6b86: pha]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d1 |  [$6b87: ldx $1c]
	clr.b	d0                               	| [$6b89: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$6b8b: sta $1f]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6b8d: sta $20]
	move.b	d1,d0                           	| [$6b8f: txa]
	lsr.b	#1,d0                            	| [$6b90: lsr a]
	move.b	d0,d2                           	| [$6b91: tay]
	GET_ADDRESS	0x0047                     	| [$6b92: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x80,d0                         	| [$6b95: and #$80]
	beq	l_6b9b                             	| [$6b97: beq $6b9b]
	move.b	#0x11,d0                        	| [$6b99: lda #$11]
l_6b9b:
	                           	| [$6b9b: clc]
	GET_ADDRESS	0x03e0                     	| [$6b9c: adc $03e0]
	add.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$6b9f: asl a]
	move.b	d0,d2                           	| [$6ba0: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_6bba            	| [$6ba1: lda jump_table_6bba, y]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6ba4: sta $25]
	GET_BANK_ADDRESS	0x6bbb                     	| [$6ba6: lda $6bbb, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6ba9: sta $26]
	rts |  [$6bab: jra ($0025)] [indirect_jump]
l_6bae:
	clr.b	d0                               	| [$6bae: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6bb0: sta base_screen_pointer_list_001d]
	move.w	(sp)+,d0                        	| [$6bb2: pla]
	move.b	d0,d2                           	| [$6bb3: tay]
	move.w	(sp)+,d0                        	| [$6bb4: pla]
	move.b	d0,d1                           	| [$6bb5: tax]
	rts                                    	| [$6bb6: rts]
l_6bb7:
	jra	l_6bb7                             	| [$6bb7: jra $6bb7]

l_6bfe:
	move.b	d1,d0                           	| [$6bfe: txa]
	lsr.b	#1,d0                            	| [$6bff: lsr a]
	move.b	d0,d2                           	| [$6c00: tay]
	GET_ADDRESS	0x0054                     	| [$6c01: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x0e,d0                         	| [$6c04: cmp #$0e]
	beq	l_6c0c                             	| [$6c06: beq $6c0c]
	cmp.b	#0x0f,d0                         	| [$6c08: cmp #$0f]
	jne	l_6c0f                             	| [$6c0a: jne $6c0f]
l_6c0c:
	jra	l_6d7d                             	| [$6c0c: jra $6d7d]
l_6c0f:
	jbsr	l_69df                            	| [$6c0f: jsr $69df]
	clr.b	d0                               	| [$6c12: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c14: sta $20]
	jra	l_6e54                             	| [$6c16: jra $6e54]
l_6c19:
	move.b	d1,d0                           	| [$6c19: txa]
	eor.b	#0x01,d0                         	| [$6c1a: eor #$01]
	move.b	d0,d2                           	| [$6c1c: tay]
	GET_ADDRESS	0x0373                     	| [$6c1d: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6c20: sta $1b]
	and.b	#0x0f,d0                         	| [$6c22: and #$0f]
	beq	l_6c2e                             	| [$6c24: beq $6c2e]
	cmp.b	#0x09,d0                         	| [$6c26: cmp #$09]
	* bcs=>bcc
	jcc	l_6c37                             	| [$6c28: bcs $6c37]
	cmp.b	#0x03,d0                         	| [$6c2a: cmp #$03]
	jne	l_6c30                             	| [$6c2c: jne $6c30]
l_6c2e:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6c2e: inc $1b]
l_6c30:
	move.b	#0x50,d0                        	| [$6c30: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c32: sta $20]
	jra	l_6e54                             	| [$6c34: jra $6e54]
l_6c37:
	                           	| [$6c37: sec]
	sub.b	#0x09,d0	| [$6c38: sbc #$09]
	move.b	d0,d2                           	| [$6c3a: tay]
	GET_BANK_ADDRESS	0x6e1d                     	| [$6c3b: lda $6e1d, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c3e: sta $20]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6c40: lda $1b]
	and.b	#0x10,d0                         	| [$6c42: and #$10]
	OP_R_ON_ZP_ADDRESS	or,0x20,d0 |  [$6c44: ora $20]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6c46: sta $1b]
	move.b	#0x50,d0                        	| [$6c48: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c4a: sta $20]
	jra	l_6e54                             	| [$6c4c: jra $6e54]
l_6c4f:
	move.b	d1,d0                           	| [$6c4f: txa]
	lsr.b	#1,d0                            	| [$6c50: lsr a]
	move.b	d0,d2                           	| [$6c51: tay]
	GET_ADDRESS	0x0054                     	| [$6c52: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$6c55: and #$7f]
	cmp.b	#0x0e,d0                         	| [$6c57: cmp #$0e]
	beq	l_6c5f                             	| [$6c59: beq $6c5f]
	cmp.b	#0x0f,d0                         	| [$6c5b: cmp #$0f]
	jne	l_6cb2                             	| [$6c5d: jne $6cb2]
l_6c5f:
	move.b	d1,d0                           	| [$6c5f: txa]
	eor.b	#0x01,d0                         	| [$6c60: eor #$01]
	move.b	d0,d2                           	| [$6c62: tay]
	GET_ADDRESS	0x0373                     	| [$6c63: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$6c66: and #$0f]
	cmp.b	#0x0d,d0                         	| [$6c68: cmp #$0d]
	jne	l_6c7d                             	| [$6c6a: jne $6c7d]
	move.b	d1,d0                           	| [$6c6c: txa]
	and.b	#0x02,d0                         	| [$6c6d: and #$02]
                                         | [$6c6f: asl a]
                                         | [$6c70: asl a]
	asl.b	#3,d0                            	| [$6c71: asl a]
	or.b	#0x07,d0                          	| [$6c72: ora #$07]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6c74: sta $1b]
	move.b	#0x78,d0                        	| [$6c76: lda #$78]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c78: sta $20]
	jra	l_6e54                             	| [$6c7a: jra $6e54]
l_6c7d:
	GET_ADDRESS	objects_side_array_9d      	| [$6c7d: lda objects_side_array_9d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6c80: sta $1b]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$6c82: lda objects_logical_x_array_8f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6c85: sta $1c]
	GET_ADDRESS	0x00b9                     	| [$6c87: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6c8a: sta $1e]
	move.b	#0x78,d0                        	| [$6c8c: lda #$78]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6c8e: sta $20]
	jra	l_6bae                             	| [$6c90: jra $6bae]
l_6c93:
	move.b	d1,d0                           	| [$6c93: txa]
	lsr.b	#1,d0                            	| [$6c94: lsr a]
	move.b	d0,d2                           	| [$6c95: tay]
	move.b	d1,d0                           	| [$6c96: txa]
	GET_ADDRESS	0x005f                     	| [$6c97: cmp $005f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	beq	l_6cb2                             	| [$6c9a: beq $6cb2]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$6c9c: lda $53]
	cmp.b	#0x01,d0                         	| [$6c9e: cmp #$01]
	jne	l_6cb2                             	| [$6ca0: jne $6cb2]
	move.b	#0x05,d0                        	| [$6ca2: lda #$05]
	GET_ADDRESS	0x03e0                     	| [$6ca4: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$6ca7: lda $56]
	and.b	#0xf0,d0                         	| [$6ca9: and #$f0]
	or.b	#0x03,d0                          	| [$6cab: ora #$03]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$6cad: sta $56]
	jra	l_6da0                             	| [$6caf: jra $6da0]
l_6cb2:
	move.b	d1,d0                           	| [$6cb2: txa]
	eor.b	#0x01,d0                         	| [$6cb3: eor #$01]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$6cb5: sta $2a]
	move.b	d0,d2                           	| [$6cb7: tay]
	move.b	#0x78,d0                        	| [$6cb8: lda #$78]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6cba: sta $20]
	GET_ADDRESS	0x0373                     	| [$6cbc: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$6cbf: tay]
	and.b	#0x10,d0                         	| [$6cc0: and #$10]
	beq	l_6cc6                             	| [$6cc2: beq $6cc6]
	move.b	#0x01,d0                        	| [$6cc4: lda #$01]
l_6cc6:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6cc6: sta $1b]
	GET_BANK_ADDRESS	0x6e2a                     	| [$6cc8: lda $6e2a, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6ccb: sta $1c]
	asl.b	#1,d0                            	| [$6ccd: asl a]
	jcs	l_6cd9                             	| [$6cce: bcs $6cd9]
	asl.b	#1,d0                            	| [$6cd0: asl a]
	jcc	l_6cd6                             	| [$6cd1: bcc $6cd6]
	jra	l_6d6b                             	| [$6cd3: jra $6d6b]
l_6cd6:
	asl.b	#1,d0                            	| [$6cd6: asl a]
	jcs	l_6d1f                             	| [$6cd7: bcs $6d1f]
l_6cd9:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d2 |  [$6cd9: ldy $2a]
	GET_ADDRESS	0x00b9                     	| [$6cdb: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6cde: sta $1e]
	move.b	d1,d0                           	| [$6ce0: txa]
	lsr.b	#1,d0                            	| [$6ce1: lsr a]
	move.b	d0,d2                           	| [$6ce2: tay]
	GET_ADDRESS	0x0047                     	| [$6ce3: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_6d1c                             	| [$6ce6: bmi $6d1c]
	GET_ADDRESS	0x0054                     	| [$6ce8: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$6ceb: and #$7f]
	cmp.b	#0x0c,d0                         	| [$6ced: cmp #$0c]
	beq	l_6d1c                             	| [$6cef: beq $6d1c]
	cmp.b	#0x0d,d0                         	| [$6cf1: cmp #$0d]
	beq	l_6d1c                             	| [$6cf3: beq $6d1c]
	jbsr	pseudo_random_d00a                	| [$6cf5: jsr pseudo_random_d00a]
	and.b	#0x3f,d0                         	| [$6cf8: and #$3f]
	                           	| [$6cfa: clc]
	add.b	#0x10,d0                        	| [$6cfb: adc #$10]
	lsr.b	#1,d0                            	| [$6cfd: lsr a]
	jcc	l_6d04                             	| [$6cfe: bcc $6d04]
	not.b	d0                               	| [$6d00: eor #$ff]
	moveq	#0x00,d4	| [$6d02: adc #$00]
	addx.b	d4,d0                        	| [$6d02: adc #$00]
l_6d04:
	                           	| [$6d04: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1e,d0 |  [$6d05: adc $1e]
	cmp.b	#0xb0,d0                         	| [$6d07: cmp #$b0]
	* bcs=>bcc
	jcc	l_6d18                             	| [$6d09: bcs $6d18]
	cmp.b	#0x78,d0                         	| [$6d0b: cmp #$78]
	* bcc=>bcs (cmp above)
	jcs	l_6d14                             	| [$6d0d: bcc $6d14]
	move.b	#0x78,d0                        	| [$6d0f: lda #$78]
	jra	l_6d1a                             	| [$6d11: jra $6d1a]
l_6d14:
	cmp.b	#0x18,d0                         	| [$6d14: cmp #$18]
	* bcs=>bcc
	jcc	l_6d1a                             	| [$6d16: bcs $6d1a]
l_6d18:
	move.b	#0x18,d0                        	| [$6d18: lda #$18]
l_6d1a:
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6d1a: sta $1e]
l_6d1c:
	jra	l_6bae                             	| [$6d1c: jra $6bae]
l_6d1f:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d2 |  [$6d1f: ldy $2a]
	GET_ADDRESS	0x00b9                     	| [$6d21: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x18,d0                         	| [$6d24: cmp #$18]
	* bcc=>bcs (cmp above)
	jcs	l_6d3d                             	| [$6d26: bcc $6d3d]
	cmp.b	#0x38,d0                         	| [$6d28: cmp #$38]
	* bcc=>bcs (cmp above)
	jcs	l_6d46                             	| [$6d2a: bcc $6d46]
	cmp.b	#0x58,d0                         	| [$6d2c: cmp #$58]
	* bcc=>bcs (cmp above)
	jcs	l_6d50                             	| [$6d2e: bcc $6d50]
	cmp.b	#0x78,d0                         	| [$6d30: cmp #$78]
	* bcc=>bcs (cmp above)
	jcs	l_6d5a                             	| [$6d32: bcc $6d5a]
	 |  [$6d34: lda $1c]
	         	| [$6d36: and #$04]
	OP_W_ON_ZP_ADDRESS	and,0x1c,#0x04 |  [$6d38: sta $1c]
	jra	l_6d6b                             	| [$6d3a: jra $6d6b]
l_6d3d:
	 |  [$6d3d: lda $1c]
	                         	| [$6d3f: and #$0a]
	OP_W_ON_ZP_ADDRESS	and,0x1c,#0x0a |  [$6d41: sta $1c]
	jra	l_6d6b                             	| [$6d43: jra $6d6b]
l_6d46:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d46: lda $1c]
	and.b	#0x08,d0                         	| [$6d48: and #$08]
	asl.b	#1,d0                            	| [$6d4a: asl a]
	or.b	#0x02,d0                          	| [$6d4b: ora #$02]
	jra	l_6d62                             	| [$6d4d: jra $6d62]
l_6d50:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d50: lda $1c]
	and.b	#0x08,d0                         	| [$6d52: and #$08]
	asl.b	#1,d0                            	| [$6d54: asl a]
	or.b	#0x01,d0                          	| [$6d55: ora #$01]
	jra	l_6d62                             	| [$6d57: jra $6d62]
l_6d5a:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d5a: lda $1c]
	and.b	#0x08,d0                         	| [$6d5c: and #$08]
	asl.b	#1,d0                            	| [$6d5e: asl a]
	jra	l_6d62                             	| [$6d5f: jra $6d62]
l_6d62:
	move.b	d0,d2                           	| [$6d62: tay]
	GET_BANK_ADDRESS	0x6e2a                     	| [$6d63: lda $6e2a, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d66: sta $1c]
	jra	l_6cd9                             	| [$6d68: jra $6cd9]
l_6d6b:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d6b: lda $1c]
	and.b	#0x0f,d0                         	| [$6d6d: and #$0f]
	move.b	d0,d2                           	| [$6d6f: tay]
	GET_BANK_ADDRESS	0x6e4a                     	| [$6d70: lda $6e4a, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6d73: sta $1c]
	GET_BANK_ADDRESS	0x6e4b                     	| [$6d75: lda $6e4b, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6d78: sta $1e]
	jra	l_6bae                             	| [$6d7a: jra $6bae]
l_6d7d:
	jbsr	pseudo_random_d00a                	| [$6d7d: jsr pseudo_random_d00a]
	and.b	#0x03,d0                         	| [$6d80: and #$03]
	cmp.b	#0x02,d0                         	| [$6d82: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_6d88                             	| [$6d84: bcc $6d88]
	move.b	#0x02,d0                        	| [$6d86: lda #$02]
l_6d88:
	                           	| [$6d88: clc]
	add.b	#0x06,d0                        	| [$6d89: adc #$06]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6d8b: sta $1b]
	move.b	d1,d0                           	| [$6d8d: txa]
	eor.b	#0x02,d0                         	| [$6d8e: eor #$02]
	and.b	#0x02,d0                         	| [$6d90: and #$02]
                                         | [$6d92: asl a]
                                         | [$6d93: asl a]
	asl.b	#3,d0                            	| [$6d94: asl a]
	GET_ADDRESS	0x1b                       	| [$6d95: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6d97: sta $1b]
	clr.b	d0                               	| [$6d99: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6d9b: sta $20]
	jra	l_6e54                             	| [$6d9d: jra $6e54]
l_6da0:
	move.b	d1,d0                           	| [$6da0: txa]
	eor.b	#0x01,d0                         	| [$6da1: eor #$01]
	move.b	d0,d2                           	| [$6da3: tay]
	GET_ADDRESS	0x030e                     	| [$6da4: lda $030e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$6da7: and #$40]
	beq	l_6dbb                             	| [$6da9: beq $6dbb]
	move.b	#0x04,d0                        	| [$6dab: lda #$04]
	GET_ADDRESS	0x03e0                     	| [$6dad: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$6db0: lda $56]
	and.b	#0xf0,d0                         	| [$6db2: and #$f0]
	or.b	#0x01,d0                          	| [$6db4: ora #$01]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$6db6: sta $56]
	jra	l_6d7d                             	| [$6db8: jra $6d7d]
l_6dbb:
	move.b	d1,d0                           	| [$6dbb: txa]
	lsr.b	#1,d0                            	| [$6dbc: lsr a]
	move.b	d0,d2                           	| [$6dbd: tay]
	move.b	d1,d0                           	| [$6dbe: txa]
	GET_ADDRESS	0x005f                     	| [$6dbf: cmp $005f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	jne	l_6de7                             	| [$6dc2: jne $6de7]
	eor.b	#0x01,d0                         	| [$6dc4: eor #$01]
	move.b	d0,d2                           	| [$6dc6: tay]
	GET_ADDRESS	0x0373                     	| [$6dc7: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$6dca: and #$0f]
l_6dcc:
	cmp.b	#0x02,d0                         	| [$6dcc: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_6dd5                             	| [$6dce: bcc $6dd5]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC_IMM	0x03                           	| [$6dd0: sbc #$03]
	jra	l_6dcc                             	| [$6dd2: jra $6dcc]
l_6dd5:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6dd5: sta $1b]
	GET_ADDRESS	0x0373                     	| [$6dd7: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$6dda: and #$10]
	OP_R_ON_ZP_ADDRESS	or,0x1b,d0 |  [$6ddc: ora $1b]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6dde: sta $1b]
	move.b	#0x50,d0                        	| [$6de0: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6de2: sta $20]
	jra	l_6e54                             	| [$6de4: jra $6e54]
l_6de7:
	move.b	d1,d0                           	| [$6de7: txa]
	eor.b	#0x01,d0                         	| [$6de8: eor #$01]
	move.b	d0,d2                           	| [$6dea: tay]
	GET_ADDRESS	0x0373                     	| [$6deb: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6dee: sta $1b]
	and.b	#0x0f,d0                         	| [$6df0: and #$0f]
	beq	l_6dfc                             	| [$6df2: beq $6dfc]
	cmp.b	#0x09,d0                         	| [$6df4: cmp #$09]
	* bcs=>bcc
	jcc	l_6e05                             	| [$6df6: bcs $6e05]
	cmp.b	#0x03,d0                         	| [$6df8: cmp #$03]
	jne	l_6dfe                             	| [$6dfa: jne $6dfe]
l_6dfc:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$6dfc: inc $1b]
l_6dfe:
	move.b	#0x50,d0                        	| [$6dfe: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6e00: sta $20]
	jra	l_6e54                             	| [$6e02: jra $6e54]
l_6e05:
	                           	| [$6e05: sec]
	sub.b	#0x09,d0	| [$6e06: sbc #$09]
	move.b	d0,d2                           	| [$6e08: tay]
	GET_BANK_ADDRESS	0x6e1d                     	| [$6e09: lda $6e1d, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6e0c: sta $20]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e0e: lda $1b]
	and.b	#0x10,d0                         	| [$6e10: and #$10]
	OP_R_ON_ZP_ADDRESS	or,0x20,d0 |  [$6e12: ora $20]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e14: sta $1b]
	move.b	#0x50,d0                        	| [$6e16: lda #$50]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6e18: sta $20]
	jra	l_6e54                             	| [$6e1a: jra $6e54]

l_6e23:
	clr.b	d0                               	| [$6e23: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6e25: sta $20]
	jra	l_6e54                             	| [$6e27: jra $6e54]

l_6e54:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e54: lda $1b]
	OP_W_ON_ZP_ADDRESS	move,0x28,d0 |  [$6e56: sta $28]
	and.b	#0x0f,d0                         	| [$6e58: and #$0f]
	cmp.b	#0x0a,d0                         	| [$6e5a: cmp #$0a]
	beq	l_6eb7                             	| [$6e5c: beq $6eb7]
	cmp.b	#0x0d,d0                         	| [$6e5e: cmp #$0d]
	beq	l_6eb7                             	| [$6e60: beq $6eb7]
	cmp.b	#0x0f,d0                         	| [$6e62: cmp #$0f]
	jne	l_6e69                             	| [$6e64: jne $6e69]
	jra	l_6eef                             	| [$6e66: jra $6eef]
l_6e69:
	GET_ADDRESS	0x03e0                     	| [$6e69: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$6e6c: cmp #$0a]
	jne	l_6e8e                             	| [$6e6e: jne $6e8e]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e70: lda $1b]
	and.b	#0x0f,d0                         	| [$6e72: and #$0f]
	OP_W_ON_ZP_ADDRESS	move,0x24,d0 |  [$6e74: sta $24]
	cmp.b	#0x03,d0                         	| [$6e76: cmp #$03]
	* bcs=>bcc
	jcc	l_6e8e                             	| [$6e78: bcs $6e8e]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e7a: lda $1b]
	and.b	#0x10,d0                         	| [$6e7c: and #$10]
	beq	l_6e87                             	| [$6e7e: beq $6e87]
	                           	| [$6e80: clc]
	OP_R_ON_ZP_ADDRESS	move,0x24,d0 |  [$6e81: lda $24]
	move.b	#0x03,d4	| [$6e83: adc #$03]
	add.b	d4,d0                        	| [$6e83: adc #$03]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e85: sta $1b]
l_6e87:
	                           	| [$6e87: clc]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e88: lda $1b]
	move.b	#0x20,d4	| [$6e8a: adc #$20]
	add.b	d4,d0                        	| [$6e8a: adc #$20]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e8c: sta $1b]
l_6e8e:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e8e: lda $1b]
                                         | [$6e90: asl a]
	asl.b	#2,d0                            	| [$6e91: asl a]
	move.b	d0,d2                           	| [$6e92: tay]
	move.b	#0x59,d0                        	| [$6e93: lda #$59]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6e95: sta $25]
	move.b	#0x6f,d0                        	| [$6e97: lda #$6f]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6e99: sta $26]
	OP_R_ON_ZP_ADDRESS	move,0x28,d0 |  [$6e9b: lda $28]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e9d: sta $1b]
l_6e9f:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6e9f: lda $1b]
	and.b	#0x10,d0                         	| [$6ea1: and #$10]
	beq	l_6ea7                             	| [$6ea3: beq $6ea7]
	move.b	#0x01,d0                        	| [$6ea5: lda #$01]
l_6ea7:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ea7: sta $1b]
	jbsr	l_6f1b                            	| [$6ea9: jsr $6f1b]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6eac: sta $1c]
	addq.b	#1,d2                           	| [$6eae: iny]
	jbsr	l_6f1b                            	| [$6eaf: jsr $6f1b]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6eb2: sta $1e]
	jra	l_6bae                             	| [$6eb4: jra $6bae]
l_6eb7:
	SET_XC_FLAGS                           	| [$6eb7: sec]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6eb8: lda $1b]
	SBC_IMM	0x0a                           	| [$6eba: sbc #$0a]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ebc: sta $1b]
	jbsr	pseudo_random_d00a                	| [$6ebe: jsr pseudo_random_d00a]
	and.b	#0x03,d0                         	| [$6ec1: and #$03]
	cmp.b	#0x03,d0                         	| [$6ec3: cmp #$03]
	jne	l_6ec9                             	| [$6ec5: jne $6ec9]
	move.b	#0x01,d0                        	| [$6ec7: lda #$01]
l_6ec9:
	                           	| [$6ec9: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$6eca: adc $1b]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ecc: sta $1b]
	and.b	#0x0f,d0                         	| [$6ece: and #$0f]
                                         | [$6ed0: asl a]
	asl.b	#2,d0                            	| [$6ed1: asl a]
	move.b	d0,d2                           	| [$6ed2: tay]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6ed3: lda $1b]
	and.b	#0x10,d0                         	| [$6ed5: and #$10]
	jne	l_6ee4                             	| [$6ed7: jne $6ee4]
	move.b	#0xf1,d0                        	| [$6ed9: lda #$f1]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6edb: sta $25]
	move.b	#0x6f,d0                        	| [$6edd: lda #$6f]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6edf: sta $26]
	jra	l_6e9f                             	| [$6ee1: jra $6e9f]
l_6ee4:
	move.b	#0x09,d0                        	| [$6ee4: lda #$09]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6ee6: sta $25]
	move.b	#0x70,d0                        	| [$6ee8: lda #$70]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6eea: sta $26]
	jra	l_6e9f                             	| [$6eec: jra $6e9f]
l_6eef:
	GET_ADDRESS	0x0373                     	| [$6eef: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$6ef2: and #$0f]
l_6ef4:
	cmp.b	#0x02,d0                         	| [$6ef4: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_6efd                             	| [$6ef6: bcc $6efd]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC_IMM	0x03                           	| [$6ef8: sbc #$03]
	jra	l_6ef4                             	| [$6efa: jra $6ef4]
l_6efd:
                                         | [$6efd: asl a]
	asl.b	#2,d0                            	| [$6efe: asl a]
	move.b	d0,d2                           	| [$6eff: tay]
	GET_BANK_ADDRESS	0x7021                     	| [$6f00: lda $7021, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6f03: sta $1b]
	GET_BANK_ADDRESS	0x7022                     	| [$6f05: lda $7022, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$6f08: sta $1c]
	GET_BANK_ADDRESS	0x7023                     	| [$6f0a: lda $7023, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$6f0d: sta base_screen_pointer_list_001d]
	GET_BANK_ADDRESS	0x7024                     	| [$6f0f: lda $7024, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$6f12: sta $1e]
	move.b	#0x30,d0                        	| [$6f14: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$6f16: sta $20]
	jra	l_6bae                             	| [$6f18: jra $6bae]
l_6f1b:
	GET_INDIRECT_BANK_ADDRESS	0x25              	| [$6f1b: lda ($25), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$6f1d: sta $2a]
	jbsr	pseudo_random_d00a                	| [$6f1f: jsr pseudo_random_d00a]
l_6f22:
	OP_R_ON_ZP_ADDRESS	cmp,0x2a,d0 |  [$6f22: cmp $2a]
	* bcc=>bcs (cmp above)
	jcs	l_6f2b                             	| [$6f24: bcc $6f2b]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC	0x2a                               	| [$6f26: sbc $2a]
	jra	l_6f22                             	| [$6f28: jra $6f22]
l_6f2b:
	addq.b	#1,d2                           	| [$6f2b: iny]
	GET_INDIRECT_BANK_ADDRESS	0x25              	| [$6f2c: adc ($25), y] [bank_address]
	move.b	(a0,d2.w),d4	| [...]
	add.b	d4,d0                    	| [...]
	rts                                    	| [$6f2e: rts]

	jbsr	pseudo_random_d00a                	| [$6f2f: jsr pseudo_random_d00a]
	and.b	#0x03,d0                         	| [$6f32: and #$03]
	cmp.b	#0x03,d0                         	| [$6f34: cmp #$03]
	jne	l_6f3a                             	| [$6f36: jne $6f3a]
	move.b	#0x01,d0                        	| [$6f38: lda #$01]
l_6f3a:
                                         | [$6f3a: asl a]
	asl.b	#2,d0                            	| [$6f3b: asl a]
	move.b	d0,d2                           	| [$6f3c: tay]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$6f3d: lda $1b]
	and.b	#0x10,d0                         	| [$6f3f: and #$10]
	jne	l_6f4e                             	| [$6f41: jne $6f4e]
	move.b	#0xfd,d0                        	| [$6f43: lda #$fd]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6f45: sta $25]
	move.b	#0x6f,d0                        	| [$6f47: lda #$6f]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6f49: sta $26]
	jra	l_6e9f                             	| [$6f4b: jra $6e9f]
l_6f4e:
	move.b	#0x15,d0                        	| [$6f4e: lda #$15]
	OP_W_ON_ZP_ADDRESS	move,0x25,d0 |  [$6f50: sta $25]
	move.b	#0x70,d0                        	| [$6f52: lda #$70]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$6f54: sta $26]
	jra	l_6e9f                             	| [$6f56: jra $6e9f]

l_702d:
	movem.w	d0-d2,-(sp)                       	| [$702d: pha]
	                        	| [$702e: txa]
	                       	| [$702f: pha]
	                        	| [$7030: tya]
	                       	| [$7031: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$7032: ldx current_object_index_4c]
	GET_ADDRESS	0x030e                     	| [$7034: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$7037: and #$40]
	jne	l_7064                             	| [$7039: jne $7064]
	GET_ADDRESS	0x031a                     	| [$703b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$703e: and #$7f]
	cmp.b	#0x22,d0                         	| [$7040: cmp #$22]
	beq	l_7064                             	| [$7042: beq $7064]
	cmp.b	#0x23,d0                         	| [$7044: cmp #$23]
	beq	l_7064                             	| [$7046: beq $7064]
	cmp.b	#0x24,d0                         	| [$7048: cmp #$24]
	beq	l_7064                             	| [$704a: beq $7064]
	GET_ADDRESS	0x0316                     	| [$704c: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$704f: and #$7f]
	cmp.b	#0x16,d0                         	| [$7051: cmp #$16]
l_7053:
	* bcs=>bcc
	jcc	l_7053                             	| [$7053: bcs $7053]
	asl.b	#1,d0                            	| [$7055: asl a]
	move.b	d0,d2                           	| [$7056: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_707a            	| [$7057: lda jump_table_707a, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$705a: sta $1b]
	GET_BANK_ADDRESS	0x707b                     	| [$705c: lda $707b, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$705f: sta $1c]
	rts |  [$7061: jra ($001b)] [indirect_jump]
l_7064:
	GET_ADDRESS	0x0316                     	| [$7064: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$7067: and #$7f]
	                     	| [$7069: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_706c:
	GET_ADDRESS	0x030a                     	| [$706c: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfe,d0                         	| [$706f: and #$fe]
	                     	| [$7071: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	movem.w	(sp)+,d0-d2                        	| [$7074: pla]
	                       	| [$7075: tay]
	                       	| [$7076: pla]
	                       	| [$7077: tax]
	                       	| [$7078: pla]
	rts                                    	| [$7079: rts]

l_70a6:
	GET_ADDRESS	0x0316                     	| [$70a6: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_70be                             	| [$70a9: bmi $70be]
	or.b	#0x80,d0                          	| [$70ab: ora #$80]
	                     	| [$70ad: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03e0                     	| [$70b0: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0b,d0                         	| [$70b3: cmp #$0b]
	beq	l_70c1                             	| [$70b5: beq $70c1]
	clr.b	d0                               	| [$70b7: lda #$00]
	or.b	#0x80,d0                          	| [$70b9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$70bb: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_70be:
	jra	l_706c                             	| [$70be: jra $706c]
l_70c1:
	move.b	#0x04,d0                        	| [$70c1: lda #$04]
	or.b	#0x80,d0                          	| [$70c3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$70c5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$70c8: jra $706c]
l_70cb:
	jbsr	l_90b0                            	| [$70cb: jsr $90b0]
	jcc	l_70d3                             	| [$70ce: bcc $70d3]
	jra	l_7131                             	| [$70d0: jra $7131]
l_70d3:
	GET_ADDRESS	0x0316                     	| [$70d3: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_70e2                             	| [$70d6: bpl $70e2]
	GET_ADDRESS	0x03b8                     	| [$70d8: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$70db: cmp #$ff]
	beq	l_7131                             	| [$70dd: beq $7131]
	jra	l_710f                             	| [$70df: jra $710f]
l_70e2:
	or.b	#0x80,d0                          	| [$70e2: ora #$80]
	GET_ADDRESS	0x0316                     	| [$70e4: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$70e7: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$70e9: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_85e0                            	| [$70ec: jsr $85e0]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$70ef: lda $1b]
	GET_ADDRESS	0x0384                     	| [$70f1: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$70f4: lda $1c]
	GET_ADDRESS	0x0380                     	| [$70f6: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$70f9: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$70fb: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$70fe: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7100: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7103: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7106: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7109: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$710c: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_710f:
	jbsr	l_8229                            	| [$710f: jsr $8229]
	jcc	l_7152                             	| [$7112: bcc $7152]
	GET_ADDRESS	0x03b8                     	| [$7114: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_7131                             	| [$7117: jne $7131]
	move.b	#0x01,d0                        	| [$7119: lda #$01]
	jbsr	l_8296                            	| [$711b: jsr $8296]
	jcc	l_7143                             	| [$711e: bcc $7143]
	jbsr	l_83fa                            	| [$7120: jsr $83fa]
	jcc	l_7134                             	| [$7123: bcc $7134]
	move.b	#0x08,d0                        	| [$7125: lda #$08]
	or.b	#0x80,d0                          	| [$7127: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7129: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$712c: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$712e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7131:
	jra	l_706c                             	| [$7131: jra $706c]
l_7134:
	move.b	#0x07,d0                        	| [$7134: lda #$07]
	or.b	#0x80,d0                          	| [$7136: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7138: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$713b: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$713d: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7140: jra $706c]
l_7143:
	move.b	#0x09,d0                        	| [$7143: lda #$09]
	or.b	#0x80,d0                          	| [$7145: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7147: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$714a: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$714c: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$714f: jra $706c]
l_7152:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$7152: lda $56]
	and.b	#0x0f,d0                         	| [$7154: and #$0f]
	cmp.b	#0x02,d0                         	| [$7156: cmp #$02]
	jne	l_7169                             	| [$7158: jne $7169]
	move.b	#0x04,d0                        	| [$715a: lda #$04]
	or.b	#0x80,d0                          	| [$715c: ora #$80]
	GET_ADDRESS	0x0327                     	| [$715e: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7161: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7163: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7166: jra $706c]
l_7169:
	clr.b	d0                               	| [$7169: lda #$00]
	or.b	#0x80,d0                          	| [$716b: ora #$80]
	GET_ADDRESS	0x0327                     	| [$716d: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7170: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7172: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7175: jra $706c]
l_7178:
	jbsr	l_90b0                            	| [$7178: jsr $90b0]
	jcc	l_7180                             	| [$717b: bcc $7180]
	jra	l_71d9                             	| [$717d: jra $71d9]
l_7180:
	GET_ADDRESS	0x0316                     	| [$7180: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_718f                             	| [$7183: bpl $718f]
	GET_ADDRESS	0x03b8                     	| [$7185: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7188: cmp #$ff]
	beq	l_71d9                             	| [$718a: beq $71d9]
	jra	l_71bc                             	| [$718c: jra $71bc]
l_718f:
	or.b	#0x80,d0                          	| [$718f: ora #$80]
	GET_ADDRESS	0x0316                     	| [$7191: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7194: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7196: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_86d8                            	| [$7199: jsr $86d8]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$719c: lda $1b]
	GET_ADDRESS	0x0384                     	| [$719e: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$71a1: lda $1c]
	GET_ADDRESS	0x0380                     	| [$71a3: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$71a6: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$71a8: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$71ab: lda #$00]
	GET_ADDRESS	0x038c                     	| [$71ad: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$71b0: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$71b3: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$71b6: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$71b9: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_71bc:
	jbsr	l_8229                            	| [$71bc: jsr $8229]
	jcc	l_71eb                             	| [$71bf: bcc $71eb]
	GET_ADDRESS	0x03b8                     	| [$71c1: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_71d9                             	| [$71c4: jne $71d9]
	move.b	#0x02,d0                        	| [$71c6: lda #$02]
	jbsr	l_8296                            	| [$71c8: jsr $8296]
	jcc	l_71dc                             	| [$71cb: bcc $71dc]
	move.b	#0x08,d0                        	| [$71cd: lda #$08]
	or.b	#0x80,d0                          	| [$71cf: ora #$80]
	GET_ADDRESS	0x0327                     	| [$71d1: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$71d4: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$71d6: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_71d9:
	jra	l_706c                             	| [$71d9: jra $706c]
l_71dc:
	move.b	#0x09,d0                        	| [$71dc: lda #$09]
	or.b	#0x80,d0                          	| [$71de: ora #$80]
	GET_ADDRESS	0x0327                     	| [$71e0: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$71e3: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$71e5: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$71e8: jra $706c]
l_71eb:
	clr.b	d0                               	| [$71eb: lda #$00]
	or.b	#0x80,d0                          	| [$71ed: ora #$80]
	GET_ADDRESS	0x0327                     	| [$71ef: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$71f2: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$71f4: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$71f7: jra $706c]
	move.b	#0x04,d0                        	| [$71fa: lda #$04]
	or.b	#0x80,d0                          	| [$71fc: ora #$80]
	GET_ADDRESS	0x0327                     	| [$71fe: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7201: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7203: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7206: jra $706c]
l_7209:
	jbsr	l_90b0                            	| [$7209: jsr $90b0]
	jcc	l_7211                             	| [$720c: bcc $7211]
	jra	l_7268                             	| [$720e: jra $7268]
l_7211:
	GET_ADDRESS	0x0316                     	| [$7211: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7220                             	| [$7214: bpl $7220]
	GET_ADDRESS	0x03b8                     	| [$7216: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7219: cmp #$ff]
	beq	l_7268                             	| [$721b: beq $7268]
	jra	l_724d                             	| [$721d: jra $724d]
l_7220:
	or.b	#0x80,d0                          	| [$7220: ora #$80]
	GET_ADDRESS	0x0316                     	| [$7222: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7225: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7227: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8e92                            	| [$722a: jsr $8e92]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$722d: lda $1b]
	GET_ADDRESS	0x0384                     	| [$722f: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7232: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7234: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7237: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x038c                     	| [$7239: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$723c: lda $1e]
	GET_ADDRESS	0x0388                     	| [$723e: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7241: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7244: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7247: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$724a: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_724d:
	jbsr	l_8229                            	| [$724d: jsr $8229]
	jcc	l_727a                             	| [$7250: bcc $727a]
	GET_ADDRESS	0x03b8                     	| [$7252: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_7268                             	| [$7255: jne $7268]
	jbsr	l_8289                            	| [$7257: jsr $8289]
	jcs	l_726b                             	| [$725a: bcs $726b]
	move.b	#0x08,d0                        	| [$725c: lda #$08]
	or.b	#0x80,d0                          	| [$725e: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7260: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7263: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7265: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7268:
	jra	l_706c                             	| [$7268: jra $706c]
l_726b:
	move.b	#0x09,d0                        	| [$726b: lda #$09]
	or.b	#0x80,d0                          	| [$726d: ora #$80]
	GET_ADDRESS	0x0327                     	| [$726f: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7272: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7274: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7277: jra $706c]
l_727a:
	clr.b	d0                               	| [$727a: lda #$00]
	or.b	#0x80,d0                          	| [$727c: ora #$80]
	GET_ADDRESS	0x0327                     	| [$727e: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7281: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7283: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7286: jra $706c]
l_7289:
	GET_ADDRESS	0x0316                     	| [$7289: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7298                             	| [$728c: bpl $7298]
	GET_ADDRESS	0x03b8                     	| [$728e: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7291: cmp #$ff]
	beq	l_72f2                             	| [$7293: beq $72f2]
	jra	l_72c6                             	| [$7295: jra $72c6]
l_7298:
	or.b	#0x80,d0                          	| [$7298: ora #$80]
	GET_ADDRESS	0x0316                     	| [$729a: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$729d: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$729f: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03eb                     	| [$72a2: lda $03eb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$72a5: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ea                     	| [$72a8: lda $03ea]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$72ab: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ed                     	| [$72ae: lda $03ed]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x038c                     	| [$72b1: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ec                     	| [$72b4: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$72b7: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03e9                     	| [$72ba: lda $03e9]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0378                     	| [$72bd: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$72c0: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$72c3: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_72c6:
	jbsr	l_8429                            	| [$72c6: jsr $8429]
	jcc	l_7304                             	| [$72c9: bcc $7304]
	move.b	#0x0b,d0                        	| [$72cb: lda #$0b]
	jbsr	l_8296                            	| [$72cd: jsr $8296]
	jcs	l_7304                             	| [$72d0: bcs $7304]
	GET_ADDRESS	0x03b8                     	| [$72d2: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_72f2                             	| [$72d5: jne $72f2]
	clr.b	d0                               	| [$72d7: lda #$00]
	jbsr	l_8549                            	| [$72d9: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$72dc: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$72de: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_827d                            	| [$72e1: jsr $827d]
	jcs	l_72f5                             	| [$72e4: bcs $72f5]
	move.b	#0x08,d0                        	| [$72e6: lda #$08]
	or.b	#0x80,d0                          	| [$72e8: ora #$80]
	GET_ADDRESS	0x0327                     	| [$72ea: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$72ed: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$72ef: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_72f2:
	jra	l_706c                             	| [$72f2: jra $706c]
l_72f5:
	move.b	#0x09,d0                        	| [$72f5: lda #$09]
	or.b	#0x80,d0                          	| [$72f7: ora #$80]
	GET_ADDRESS	0x0327                     	| [$72f9: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$72fc: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$72fe: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7301: jra $706c]
l_7304:
	clr.b	d0                               	| [$7304: lda #$00]
	or.b	#0x80,d0                          	| [$7306: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7308: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$730b: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$730d: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7310: jra $706c]
	move.b	#0x04,d0                        	| [$7313: lda #$04]
	or.b	#0x80,d0                          	| [$7315: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7317: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$731a: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$731c: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$731f: jra $706c]
l_7322:
	jbsr	l_90b0                            	| [$7322: jsr $90b0]
	jcc	l_732a                             	| [$7325: bcc $732a]
	jra	l_73b3                             	| [$7327: jra $73b3]
l_732a:
	GET_ADDRESS	0x0316                     	| [$732a: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_734d                             	| [$732d: bpl $734d]
	GET_ADDRESS	0x03b8                     	| [$732f: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7332: cmp #$ff]
	beq	l_73b3                             	| [$7334: beq $73b3]
	asl.b	#1,d0                            	| [$7336: asl a]
	move.b	d0,d2                           	| [$7337: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_7345            	| [$7338: lda jump_table_7345, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$733b: sta $1b]
	GET_BANK_ADDRESS	0x7346                     	| [$733d: lda $7346, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7340: sta $1c]
	rts |  [$7342: jra ($001b)] [indirect_jump]

l_734d:
	or.b	#0x80,d0                          	| [$734d: ora #$80]
	GET_ADDRESS	0x0316                     	| [$734f: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7352: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7354: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0401                     	| [$7357: lda $0401]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$735a: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0400                     	| [$735d: lda $0400]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$7360: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0402                     	| [$7363: lda $0402]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$7366: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7369: lda #$00]
	GET_ADDRESS	0x038c                     	| [$736b: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_9095                            	| [$736e: jsr $9095]
	jbsr	l_903e                            	| [$7371: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7374: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7377: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$737a: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$737d: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$737f: sta $2a]
	GET_ADDRESS	0x0404                     	| [$7381: lda $0404]
	move.b	(a0),d0                         	| [...]
	jbsr	l_88c5                            	| [$7384: jsr $88c5]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7387: lda $1b]
	GET_ADDRESS	0x03b0                     	| [$7389: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_738c:
	jbsr	l_8229                            	| [$738c: jsr $8229]
	jcs	l_73e7                             	| [$738f: bcs $73e7]
l_7391:
	jbsr	l_82ea                            	| [$7391: jsr $82ea]
	jcs	l_73d1                             	| [$7394: bcs $73d1]
l_7396:
	GET_ADDRESS	0x0406                     	| [$7396: lda $0406]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7399: sta $1b]
	move.b	#0x01,d0                        	| [$739b: lda #$01]
	jbsr	l_82f9                            	| [$739d: jsr $82f9]
	jcs	l_73b6                             	| [$73a0: bcs $73b6]
	GET_ADDRESS	0x030e                     	| [$73a2: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_73fb                             	| [$73a5: bpl $73fb]
	move.b	#0x0c,d0                        	| [$73a7: lda #$0c]
	or.b	#0x80,d0                          	| [$73a9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$73ab: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$73ae: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$73b0: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_73b3:
	jra	l_706c                             	| [$73b3: jra $706c]
l_73b6:
	GET_ADDRESS	0x03b8                     	| [$73b6: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$73b9: cmp #$03]
	beq	l_73b3                             	| [$73bb: beq $73b3]
	move.b	#0x01,d0                        	| [$73bd: lda #$01]
	jbsr	l_b90e                            	| [$73bf: jsr $b90e]
	move.b	#0x0a,d0                        	| [$73c2: lda #$0a]
	or.b	#0x80,d0                          	| [$73c4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$73c6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$73c9: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$73cb: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$73ce: jra $706c]
l_73d1:
	GET_ADDRESS	0x03b8                     	| [$73d1: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$73d4: cmp #$02]
	beq	l_73b3                             	| [$73d6: beq $73b3]
	move.b	#0x01,d0                        	| [$73d8: lda #$01]
	or.b	#0x80,d0                          	| [$73da: ora #$80]
	GET_ADDRESS	0x0327                     	| [$73dc: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$73df: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$73e1: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$73e4: jra $706c]
l_73e7:
	GET_ADDRESS	0x03b8                     	| [$73e7: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_73b3                             	| [$73ea: jne $73b3]
	move.b	#0x07,d0                        	| [$73ec: lda #$07]
	or.b	#0x80,d0                          	| [$73ee: ora #$80]
	GET_ADDRESS	0x0327                     	| [$73f0: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$73f3: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$73f5: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$73f8: jra $706c]
l_73fb:
	clr.b	d0                               	| [$73fb: lda #$00]
	or.b	#0x80,d0                          	| [$73fd: ora #$80]
	GET_ADDRESS	0x0327                     	| [$73ff: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7402: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7404: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7407: jra $706c]
l_740a:
	jbsr	l_90b0                            	| [$740a: jsr $90b0]
	jcc	l_7412                             	| [$740d: bcc $7412]
	jra	l_74c6                             	| [$740f: jra $74c6]
l_7412:
	GET_ADDRESS	0x0316                     	| [$7412: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_743a                             	| [$7415: bpl $743a]
	GET_ADDRESS	0x03b8                     	| [$7417: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$741a: cmp #$ff]
	jne	l_7421                             	| [$741c: jne $7421]
	jra	l_74c6                             	| [$741e: jra $74c6]
l_7421:
	asl.b	#1,d0                            	| [$7421: asl a]
	move.b	d0,d2                           	| [$7422: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_7430            	| [$7423: lda jump_table_7430, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7426: sta $1b]
	GET_BANK_ADDRESS	0x7431                     	| [$7428: lda $7431, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$742b: sta $1c]
	rts |  [$742d: jra ($001b)] [indirect_jump]

l_743a:
	or.b	#0x80,d0                          	| [$743a: ora #$80]
	GET_ADDRESS	0x0316                     	| [$743c: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$743f: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7441: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7444:
	jbsr	l_8289                            	| [$7444: jsr $8289]
	jcc	l_744c                             	| [$7447: bcc $744c]
	jra	l_7510                             	| [$7449: jra $7510]
l_744c:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$744c: lda $56]
	and.b	#0x0f,d0                         	| [$744e: and #$0f]
	cmp.b	#0x02,d0                         	| [$7450: cmp #$02]
	jne	l_745c                             	| [$7452: jne $745c]
	move.b	#0x0e,d0                        	| [$7454: lda #$0e]
	GET_ADDRESS	0x0316                     	| [$7456: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_79b2                             	| [$7459: jra $79b2]
l_745c:
	jbsr	l_8919                            	| [$745c: jsr $8919]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$745f: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7461: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x040b                     	| [$7464: sta $040b]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7467: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7469: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x040a                     	| [$746c: sta $040a]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$746f: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$7471: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x040c                     	| [$7474: sta $040c]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$7477: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7479: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$747c: lda $1e]
	GET_ADDRESS	0x040d                     	| [$747e: sta $040d]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_9095                            	| [$7481: jsr $9095]
	jbsr	l_903e                            	| [$7484: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7487: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$748a: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$748d: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7490: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$7492: sta $2a]
	GET_ADDRESS	0x040d                     	| [$7494: lda $040d]
	move.b	(a0),d0                         	| [...]
	jbsr	l_88c5                            	| [$7497: jsr $88c5]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$749a: lda $1b]
	                           	| [$749c: clc]
	add.b	#0x04,d0                        	| [$749d: adc #$04]
	GET_ADDRESS	0x040e                     	| [$749f: sta $040e]
	move.b	d0,(a0)                         	| [...]
l_74a2:
	jbsr	l_8229                            	| [$74a2: jsr $8229]
	jcs	l_74fa                             	| [$74a5: bcs $74fa]
l_74a7:
	clr.b	d0                               	| [$74a7: lda #$00]
	jbsr	l_8323                            	| [$74a9: jsr $8323]
	jcs	l_74e4                             	| [$74ac: bcs $74e4]
l_74ae:
	GET_ADDRESS	0x03ff                     	| [$74ae: lda $03ff]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$74b1: sta $1b]
	move.b	#0x02,d0                        	| [$74b3: lda #$02]
	jbsr	l_82f9                            	| [$74b5: jsr $82f9]
	jcs	l_74c9                             	| [$74b8: bcs $74c9]
	move.b	#0x0c,d0                        	| [$74ba: lda #$0c]
	or.b	#0x80,d0                          	| [$74bc: ora #$80]
	GET_ADDRESS	0x0327                     	| [$74be: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$74c1: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$74c3: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_74c6:
	jra	l_706c                             	| [$74c6: jra $706c]
l_74c9:
	GET_ADDRESS	0x03b8                     	| [$74c9: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$74cc: cmp #$04]
	beq	l_74c6                             	| [$74ce: beq $74c6]
	move.b	#0x01,d0                        	| [$74d0: lda #$01]
	jbsr	l_b90e                            	| [$74d2: jsr $b90e]
	move.b	#0x0a,d0                        	| [$74d5: lda #$0a]
	or.b	#0x80,d0                          	| [$74d7: ora #$80]
	GET_ADDRESS	0x0327                     	| [$74d9: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$74dc: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$74de: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$74e1: jra $706c]
l_74e4:
	GET_ADDRESS	0x03b8                     	| [$74e4: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$74e7: cmp #$03]
	beq	l_74c6                             	| [$74e9: beq $74c6]
	move.b	#0x01,d0                        	| [$74eb: lda #$01]
	or.b	#0x80,d0                          	| [$74ed: ora #$80]
	GET_ADDRESS	0x0327                     	| [$74ef: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$74f2: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$74f4: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$74f7: jra $706c]
l_74fa:
	GET_ADDRESS	0x03b8                     	| [$74fa: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$74fd: cmp #$02]
	beq	l_74c6                             	| [$74ff: beq $74c6]
	move.b	#0x09,d0                        	| [$7501: lda #$09]
	or.b	#0x80,d0                          	| [$7503: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7505: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7508: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$750a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$750d: jra $706c]
l_7510:
	GET_ADDRESS	0x03b8                     	| [$7510: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_74c6                             	| [$7513: jne $74c6]
	jbsr	l_8e92                            	| [$7515: jsr $8e92]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7518: lda $1b]
	GET_ADDRESS	0x0384                     	| [$751a: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$751d: lda $1c]
	GET_ADDRESS	0x0380                     	| [$751f: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7522: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x038c                     	| [$7524: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$7527: lda $1e]
	GET_ADDRESS	0x0388                     	| [$7529: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$752c: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$752f: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7532: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7535: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x08,d0                        	| [$7538: lda #$08]
	or.b	#0x80,d0                          	| [$753a: ora #$80]
	GET_ADDRESS	0x0327                     	| [$753c: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$753f: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7541: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7544: jra $706c]
l_7547:
	jbsr	l_90b0                            	| [$7547: jsr $90b0]
	jcc	l_754f                             	| [$754a: bcc $754f]
	jra	l_7632                             	| [$754c: jra $7632]
l_754f:
	GET_ADDRESS	0x0316                     	| [$754f: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7579                             	| [$7552: bpl $7579]
	GET_ADDRESS	0x03b8                     	| [$7554: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7557: cmp #$ff]
	jne	l_755e                             	| [$7559: jne $755e]
	jra	l_7632                             	| [$755b: jra $7632]
l_755e:
	asl.b	#1,d0                            	| [$755e: asl a]
	move.b	d0,d2                           	| [$755f: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_756d            	| [$7560: lda jump_table_756d, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7563: sta $1b]
	GET_BANK_ADDRESS	0x756e                     	| [$7565: lda $756e, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7568: sta $1c]
	rts |  [$756a: jra ($001b)] [indirect_jump]

l_7579:
	or.b	#0x80,d0                          	| [$7579: ora #$80]
	GET_ADDRESS	0x0316                     	| [$757b: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$757e: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7580: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_897d                            	| [$7583: jsr $897d]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7586: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7588: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$758b: lda $1c]
	GET_ADDRESS	0x0380                     	| [$758d: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7590: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$7592: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7595: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7597: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$759a: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$759d: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$75a0: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$75a3: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_75a6:
	jbsr	l_8229                            	| [$75a6: jsr $8229]
	jcs	l_761a                             	| [$75a9: bcs $761a]
l_75ab:
	move.b	#0x01,d0                        	| [$75ab: lda #$01]
	jbsr	l_8323                            	| [$75ad: jsr $8323]
	jcc	l_75b5                             	| [$75b0: bcc $75b5]
	jra	l_7644                             	| [$75b2: jra $7644]
l_75b5:
	GET_ADDRESS	0x03fc                     	| [$75b5: lda $03fc]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$75b8: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03fb                     	| [$75bb: lda $03fb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$75be: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03fd                     	| [$75c1: lda $03fd]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$75c4: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$75c7: lda #$00]
	GET_ADDRESS	0x038c                     	| [$75c9: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_9095                            	| [$75cc: jsr $9095]
	jbsr	l_903e                            	| [$75cf: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$75d2: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$75d5: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$75d8: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$75db: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$75dd: sta $2a]
	GET_ADDRESS	0x03fe                     	| [$75df: lda $03fe]
	move.b	(a0),d0                         	| [...]
	jbsr	l_88c5                            	| [$75e2: jsr $88c5]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$75e5: lda $1b]
	GET_ADDRESS	0x03b0                     	| [$75e7: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_84c7                            	| [$75ea: jsr $84c7]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$75ed: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$75ef: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_90c9                            	| [$75f2: jsr $90c9]
	jcs	l_75fa                             	| [$75f5: bcs $75fa]
	jra	l_79b2                             	| [$75f7: jra $79b2]
l_75fa:
	jbsr	l_832f                            	| [$75fa: jsr $832f]
	jcs	l_765a                             	| [$75fd: bcs $765a]
l_75ff:
	GET_ADDRESS	0x03ff                     	| [$75ff: lda $03ff]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7602: sta $1b]
	move.b	#0x03,d0                        	| [$7604: lda #$03]
	jbsr	l_82f9                            	| [$7606: jsr $82f9]
	jcs	l_7670                             	| [$7609: bcs $7670]
l_760b:
	GET_ADDRESS	0x03ff                     	| [$760b: lda $03ff]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$760e: sta $1b]
	move.b	#0x04,d0                        	| [$7610: lda #$04]
	jbsr	l_82f9                            	| [$7612: jsr $82f9]
	jcs	l_7686                             	| [$7615: bcs $7686]
	jra	l_76a1                             	| [$7617: jra $76a1]
l_761a:
	GET_ADDRESS	0x03b8                     	| [$761a: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_7632                             	| [$761d: jne $7632]
	move.b	#0x03,d0                        	| [$761f: lda #$03]
	jbsr	l_8296                            	| [$7621: jsr $8296]
	jcc	l_7635                             	| [$7624: bcc $7635]
	move.b	#0x08,d0                        	| [$7626: lda #$08]
	or.b	#0x80,d0                          	| [$7628: ora #$80]
	GET_ADDRESS	0x0327                     	| [$762a: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$762d: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$762f: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7632:
	jra	l_706c                             	| [$7632: jra $706c]
l_7635:
	move.b	#0x09,d0                        	| [$7635: lda #$09]
	or.b	#0x80,d0                          	| [$7637: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7639: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$763c: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$763e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7641: jra $706c]
l_7644:
	GET_ADDRESS	0x03b8                     	| [$7644: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$7647: cmp #$02]
	beq	l_7632                             	| [$7649: beq $7632]
	clr.b	d0                               	| [$764b: lda #$00]
	or.b	#0x80,d0                          	| [$764d: ora #$80]
	GET_ADDRESS	0x0327                     	| [$764f: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7652: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$7654: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7657: jra $706c]
l_765a:
	GET_ADDRESS	0x03b8                     	| [$765a: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$765d: cmp #$03]
	beq	l_7632                             	| [$765f: beq $7632]
	clr.b	d0                               	| [$7661: lda #$00]
	or.b	#0x80,d0                          	| [$7663: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7665: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7668: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$766a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$766d: jra $706c]
l_7670:
	GET_ADDRESS	0x03b8                     	| [$7670: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$7673: cmp #$04]
	beq	l_7632                             	| [$7675: beq $7632]
	move.b	#0x09,d0                        	| [$7677: lda #$09]
	or.b	#0x80,d0                          	| [$7679: ora #$80]
	GET_ADDRESS	0x0327                     	| [$767b: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$767e: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$7680: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7683: jra $706c]
l_7686:
	GET_ADDRESS	0x03b8                     	| [$7686: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x05,d0                         	| [$7689: cmp #$05]
	beq	l_7632                             	| [$768b: beq $7632]
	move.b	#0x01,d0                        	| [$768d: lda #$01]
	jbsr	l_b90e                            	| [$768f: jsr $b90e]
	move.b	#0x0b,d0                        	| [$7692: lda #$0b]
	or.b	#0x80,d0                          	| [$7694: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7696: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x05,d0                        	| [$7699: lda #$05]
	GET_ADDRESS	0x03b8                     	| [$769b: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$769e: jra $706c]
l_76a1:
	move.b	#0x0c,d0                        	| [$76a1: lda #$0c]
	or.b	#0x80,d0                          	| [$76a3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$76a5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$76a8: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$76aa: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$76ad: jra $706c]
l_76b0:
	jbsr	l_90b0                            	| [$76b0: jsr $90b0]
	jcc	l_76b8                             	| [$76b3: bcc $76b8]
	jra	l_77a7                             	| [$76b5: jra $77a7]
l_76b8:
	GET_ADDRESS	0x0316                     	| [$76b8: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_76e4                             	| [$76bb: bpl $76e4]
	GET_ADDRESS	0x03b8                     	| [$76bd: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$76c0: cmp #$ff]
	jne	l_76c7                             	| [$76c2: jne $76c7]
	jra	l_77a7                             	| [$76c4: jra $77a7]
l_76c7:
	asl.b	#1,d0                            	| [$76c7: asl a]
	move.b	d0,d2                           	| [$76c8: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_76d6            	| [$76c9: lda jump_table_76d6, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$76cc: sta $1b]
	GET_BANK_ADDRESS	0x76d7                     	| [$76ce: lda $76d7, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$76d1: sta $1c]
	rts |  [$76d3: jra ($001b)] [indirect_jump]

l_76e4:
	or.b	#0x80,d0                          	| [$76e4: ora #$80]
	GET_ADDRESS	0x0316                     	| [$76e6: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$76e9: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$76eb: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8323                            	| [$76ee: jsr $8323]
	jcc	l_773e                             	| [$76f1: bcc $773e]
	move.b	d1,d0                           	| [$76f3: txa]
	lsr.b	#1,d0                            	| [$76f4: lsr a]
	move.b	d0,d2                           	| [$76f5: tay]
	GET_ADDRESS	0x0054                     	| [$76f6: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x0e,d0                         	| [$76f9: cmp #$0e]
	beq	l_7701                             	| [$76fb: beq $7701]
	cmp.b	#0x0f,d0                         	| [$76fd: cmp #$0f]
	jne	l_7704                             	| [$76ff: jne $7704]
l_7701:
	jra	l_781d                             	| [$7701: jra $781d]
l_7704:
	jbsr	l_8f60                            	| [$7704: jsr $8f60]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7707: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7709: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$770c: lda $1c]
	GET_ADDRESS	0x0380                     	| [$770e: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7711: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$7713: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7716: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7718: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$771b: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$771e: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7721: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7724: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7727:
	jbsr	l_8229                            	| [$7727: jsr $8229]
	jcs	l_77aa                             	| [$772a: bcs $77aa]
l_772c:
	jbsr	l_8323                            	| [$772c: jsr $8323]
	jcc	l_7734                             	| [$772f: bcc $7734]
	jra	l_77c0                             	| [$7731: jra $77c0]
l_7734:
	GET_ADDRESS	0x03b8                     	| [$7734: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$7737: cmp #$01]
	jne	l_773e                             	| [$7739: jne $773e]
	jra	l_77c0                             	| [$773b: jra $77c0]
l_773e:
	GET_ADDRESS	0x03fc                     	| [$773e: lda $03fc]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$7741: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03fb                     	| [$7744: lda $03fb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$7747: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03fd                     	| [$774a: lda $03fd]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$774d: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7750: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7752: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_9095                            	| [$7755: jsr $9095]
	jbsr	l_903e                            	| [$7758: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$775b: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$775e: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7761: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7764: lda #$00]
	jbsr	l_8549                            	| [$7766: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7769: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$776b: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$776e: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$7770: sta $2a]
	GET_ADDRESS	0x03fe                     	| [$7772: lda $03fe]
	move.b	(a0),d0                         	| [...]
	jbsr	l_88c5                            	| [$7775: jsr $88c5]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7778: lda $1b]
	GET_ADDRESS	0x03b0                     	| [$777a: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_90c9                            	| [$777d: jsr $90c9]
	jcs	l_7785                             	| [$7780: bcs $7785]
	jra	l_79b2                             	| [$7782: jra $79b2]
l_7785:
	jbsr	l_832f                            	| [$7785: jsr $832f]
	jcs	l_77d6                             	| [$7788: bcs $77d6]
l_778a:
	jbsr	l_8229                            	| [$778a: jsr $8229]
	jcs	l_77ec                             	| [$778d: bcs $77ec]
l_778f:
	GET_ADDRESS	0x03ff                     	| [$778f: lda $03ff]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7792: sta $1b]
	move.b	#0x05,d0                        	| [$7794: lda #$05]
	jbsr	l_82f9                            	| [$7796: jsr $82f9]
	jcs	l_7802                             	| [$7799: bcs $7802]
	move.b	#0x0c,d0                        	| [$779b: lda #$0c]
	or.b	#0x80,d0                          	| [$779d: ora #$80]
	GET_ADDRESS	0x0327                     	| [$779f: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$77a2: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$77a4: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_77a7:
	jra	l_706c                             	| [$77a7: jra $706c]
l_77aa:
	GET_ADDRESS	0x03b8                     	| [$77aa: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$77ad: cmp #$01]
	beq	l_77a7                             	| [$77af: beq $77a7]
	move.b	#0x09,d0                        	| [$77b1: lda #$09]
	or.b	#0x80,d0                          	| [$77b3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$77b5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$77b8: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$77ba: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$77bd: jra $706c]
l_77c0:
	GET_ADDRESS	0x03b8                     	| [$77c0: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$77c3: cmp #$02]
	beq	l_77a7                             	| [$77c5: beq $77a7]
	clr.b	d0                               	| [$77c7: lda #$00]
	or.b	#0x80,d0                          	| [$77c9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$77cb: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$77ce: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$77d0: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$77d3: jra $706c]
l_77d6:
	GET_ADDRESS	0x03b8                     	| [$77d6: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$77d9: cmp #$03]
	beq	l_77a7                             	| [$77db: beq $77a7]
	clr.b	d0                               	| [$77dd: lda #$00]
	or.b	#0x80,d0                          	| [$77df: ora #$80]
	GET_ADDRESS	0x0327                     	| [$77e1: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$77e4: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$77e6: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$77e9: jra $706c]
l_77ec:
	GET_ADDRESS	0x03b8                     	| [$77ec: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$77ef: cmp #$04]
	beq	l_77a7                             	| [$77f1: beq $77a7]
	move.b	#0x07,d0                        	| [$77f3: lda #$07]
	or.b	#0x80,d0                          	| [$77f5: ora #$80]
	GET_ADDRESS	0x0327                     	| [$77f7: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$77fa: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$77fc: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$77ff: jra $706c]
l_7802:
	GET_ADDRESS	0x03b8                     	| [$7802: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x05,d0                         	| [$7805: cmp #$05]
	beq	l_77a7                             	| [$7807: beq $77a7]
	move.b	#0x01,d0                        	| [$7809: lda #$01]
	jbsr	l_b90e                            	| [$780b: jsr $b90e]
	move.b	#0x0a,d0                        	| [$780e: lda #$0a]
	or.b	#0x80,d0                          	| [$7810: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7812: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x05,d0                        	| [$7815: lda #$05]
	GET_ADDRESS	0x03b8                     	| [$7817: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$781a: jra $706c]
l_781d:
	jbsr	l_8e92                            	| [$781d: jsr $8e92]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7820: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7822: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7825: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7827: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$782a: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x038c                     	| [$782c: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$782f: lda $1e]
	GET_ADDRESS	0x0388                     	| [$7831: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7834: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7837: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$783a: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$783d: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7840:
	GET_ADDRESS	0x03f9                     	| [$7840: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7843: sta $1b]
	move.b	#0x0b,d0                        	| [$7845: lda #$0b]
	jbsr	l_82f9                            	| [$7847: jsr $82f9]
	jcs	l_784f                             	| [$784a: bcs $784f]
	jra	l_77c0                             	| [$784c: jra $77c0]
l_784f:
	jbsr	l_8229                            	| [$784f: jsr $8229]
	jcs	l_7857                             	| [$7852: bcs $7857]
	jra	l_77c0                             	| [$7854: jra $77c0]
l_7857:
	GET_ADDRESS	0x03b8                     	| [$7857: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x06,d0                         	| [$785a: cmp #$06]
	beq	l_786a                             	| [$785c: beq $786a]
	move.b	#0x07,d0                        	| [$785e: lda #$07]
	or.b	#0x80,d0                          	| [$7860: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7862: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x06,d0                        	| [$7865: lda #$06]
	GET_ADDRESS	0x03b8                     	| [$7867: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_786a:
	jra	l_706c                             	| [$786a: jra $706c]
l_786d:
	GET_ADDRESS	0x030e                     	| [$786d: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_786a                             	| [$7870: bmi $786a]
	GET_ADDRESS	0x0316                     	| [$7872: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7897                             	| [$7875: bpl $7897]
	GET_ADDRESS	0x03b8                     	| [$7877: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$787a: cmp #$ff]
	beq	l_786a                             	| [$787c: beq $786a]
	asl.b	#1,d0                            	| [$787e: asl a]
	move.b	d0,d2                           	| [$787f: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_788d            	| [$7880: lda jump_table_788d, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7883: sta $1b]
	GET_BANK_ADDRESS	0x788e                     	| [$7885: lda $788e, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7888: sta $1c]
	rts |  [$788a: jra ($001b)] [indirect_jump]

l_7897:
	or.b	#0x80,d0                          	| [$7897: ora #$80]
	GET_ADDRESS	0x0316                     	| [$7899: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$789c: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$789e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$78a1: txa]
	and.b	#0x02,d0                         	| [$78a2: and #$02]
	lsr.b	#1,d0                            	| [$78a4: lsr a]
	move.b	d0,d2                           	| [$78a5: tay]
	GET_ADDRESS	0x0047                     	| [$78a6: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_78ae                             	| [$78a9: bpl $78ae]
	jbsr	l_abf8                            	| [$78ab: jsr $abf8]
l_78ae:
	GET_ADDRESS	0x03f6                     	| [$78ae: lda $03f6]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$78b1: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03f5                     	| [$78b4: lda $03f5]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$78b7: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03f8                     	| [$78ba: lda $03f8]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x038c                     	| [$78bd: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03f7                     	| [$78c0: lda $03f7]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$78c3: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$78c6: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$78c9: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$78cc: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$78cf: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$78d2: txa]
	and.b	#0x02,d0                         	| [$78d3: and #$02]
	lsr.b	#1,d0                            	| [$78d5: lsr a]
	move.b	d0,d2                           	| [$78d6: tay]
	GET_ADDRESS	0x0047                     	| [$78d7: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_78ec                             	| [$78da: bmi $78ec]
	jbsr	l_90c9                            	| [$78dc: jsr $90c9]
	jcs	l_78e4                             	| [$78df: bcs $78e4]
	jra	l_79b2                             	| [$78e1: jra $79b2]
l_78e4:
	jbsr	l_8429                            	| [$78e4: jsr $8429]
	jcs	l_78ec                             	| [$78e7: bcs $78ec]
	jra	l_7980                             	| [$78e9: jra $7980]
l_78ec:
	jbsr	l_8229                            	| [$78ec: jsr $8229]
	jcc	player_preparing_for_pass_7909     	| [$78ef: bcc player_preparing_for_pass_7909]
	GET_ADDRESS	0x03b8                     	| [$78f1: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_78ff                             	| [$78f4: beq $78ff]
	cmp.b	#0x01,d0                         	| [$78f6: cmp #$01]
	beq	l_7933                             	| [$78f8: beq $7933]
	move.b	#0x09,d0                        	| [$78fa: lda #$09]
	jra	l_7901                             	| [$78fc: jra $7901]
l_78ff:
	move.b	#0x08,d0                        	| [$78ff: lda #$08]
l_7901:
	jbsr	l_8296                            	| [$7901: jsr $8296]
	jcs	l_794c                             	| [$7904: bcs $794c]
	jra	l_795b                             	| [$7906: jra $795b]

* called the whole time the first player is sending the ball to
* the second player who is positioning to pass the ball for the attack
player_preparing_for_pass_7909:
	GET_ADDRESS	0x03f9                     	| [$7909: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$790c: sta $1b]
	move.b	#0x06,d0                        	| [$790e: lda #$06]
	jbsr	l_82f9                            	| [$7910: jsr $82f9]
	jcc	l_7924                             	| [$7913: bcc $7924]
	GET_ADDRESS	0x03f9                     	| [$7915: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7918: sta $1b]
	move.b	#0x0c,d0                        	| [$791a: lda #$0c]
	jbsr	l_82f9                            	| [$791c: jsr $82f9]
	jcc	l_7936                             	| [$791f: bcc $7936]
	jra	l_799c                             	| [$7921: jra $799c]
l_7924:
	jbsr	l_9107                            	| [$7924: jsr $9107]
	move.b	#0x0d,d0                        	| [$7927: lda #$0d]
	or.b	#0x80,d0                          	| [$7929: ora #$80]
	GET_ADDRESS	0x0327                     	| [$792b: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$792e: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7930: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7933:
	jra	l_706c                             	| [$7933: jra $706c]
l_7936:
	GET_ADDRESS	0x03b8                     	| [$7936: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7939: cmp #$03]
	beq	l_7933                             	| [$793b: beq $7933]
	move.b	#0x26,d0                        	| [$793d: lda #$26]
	or.b	#0x80,d0                          	| [$793f: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7941: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7944: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7946: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7949: jra $706c]
l_794c:
	move.b	#0x08,d0                        	| [$794c: lda #$08]
	or.b	#0x80,d0                          	| [$794e: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7950: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7953: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7955: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7958: jra $706c]
l_795b:
	GET_ADDRESS	0x03b8                     	| [$795b: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$795e: cmp #$02]
	beq	l_7933                             	| [$7960: beq $7933]
	move.b	#0x09,d0                        	| [$7962: lda #$09]
	or.b	#0x80,d0                          	| [$7964: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7966: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7969: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$796b: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$796e: jra $706c]
l_7971:
	clr.b	d0                               	| [$7971: lda #$00]
	or.b	#0x80,d0                          	| [$7973: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7975: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7978: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$797a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$797d: jra $706c]
l_7980:
	GET_ADDRESS	0x03f6                     	| [$7980: lda $03f6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7983: sta $1b]
	GET_ADDRESS	0x03f5                     	| [$7985: lda $03f5]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7988: sta $1c]
	GET_ADDRESS	0x03f8                     	| [$798a: lda $03f8]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$798d: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x03f7                     	| [$798f: lda $03f7]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$7992: sta $1e]
	jbsr	l_846b                            	| [$7994: jsr $846b]
	jcc	l_7971                             	| [$7997: bcc $7971]
	jra	player_preparing_for_pass_7909     	| [$7999: jra player_preparing_for_pass_7909]
l_799c:
	GET_ADDRESS	0x03b8                     	| [$799c: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$799f: cmp #$04]
	beq	l_79af                             	| [$79a1: beq $79af]
	clr.b	d0                               	| [$79a3: lda #$00]
	or.b	#0x80,d0                          	| [$79a5: ora #$80]
	GET_ADDRESS	0x0327                     	| [$79a7: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$79aa: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$79ac: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_79af:
	jra	l_706c                             	| [$79af: jra $706c]
l_79b2:
	GET_ADDRESS	0x030e                     	| [$79b2: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_79af                             	| [$79b5: bmi $79af]
	jbsr	l_90f3                            	| [$79b7: jsr $90f3]
	jcc	l_79af                             	| [$79ba: bcc $79af]
	GET_ADDRESS	0x0316                     	| [$79bc: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_79ec                             	| [$79bf: bpl $79ec]
	GET_ADDRESS	0x03b8                     	| [$79c1: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$79c4: cmp #$ff]
	jne	l_79cb                             	| [$79c6: jne $79cb]
	jra	l_7b90                             	| [$79c8: jra $7b90]
l_79cb:
	asl.b	#1,d0                            	| [$79cb: asl a]
	move.b	d0,d2                           	| [$79cc: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_79da            	| [$79cd: lda jump_table_79da, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$79d0: sta $1b]
	GET_BANK_ADDRESS	0x79db                     	| [$79d2: lda $79db, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$79d5: sta $1c]
	rts |  [$79d7: jra ($001b)] [indirect_jump]

l_79ec:
	or.b	#0x80,d0                          	| [$79ec: ora #$80]
	GET_ADDRESS	0x0316                     	| [$79ee: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$79f1: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$79f3: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ee                     	| [$79f6: lda $03ee]
	move.b	(a0),d0                         	| [...]
	jne	l_79fe                             	| [$79f9: jne $79fe]
	jra	l_7cfc                             	| [$79fb: jra $7cfc]
l_79fe:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$79fe: lda $56]
	and.b	#0x0f,d0                         	| [$7a00: and #$0f]
	cmp.b	#0x06,d0                         	| [$7a02: cmp #$06]
	beq	l_7a2b                             	| [$7a04: beq $7a2b]
	cmp.b	#0x07,d0                         	| [$7a06: cmp #$07]
	beq	l_7a2b                             	| [$7a08: beq $7a2b]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$7a0a: lda $53]
	jne	l_7a2b                             	| [$7a0c: jne $7a2b]
	jbsr	l_8350                            	| [$7a0e: jsr $8350]
	jcc	l_7a2b                             	| [$7a11: bcc $7a2b]
	GET_ADDRESS	0x03a0                     	| [$7a13: lda $03a0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7a16: sta $1b]
	move.b	#0x07,d0                        	| [$7a18: lda #$07]
	jbsr	l_82f9                            	| [$7a1a: jsr $82f9]
	jcs	l_7a2b                             	| [$7a1d: bcs $7a2b]
	jbsr	l_8a6a                            	| [$7a1f: jsr $8a6a]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7a22: lda $1b]
	cmp.b	#0x04,d0                         	| [$7a24: cmp #$04]
	beq	l_7a2b                             	| [$7a26: beq $7a2b]
	jra	l_7ae5                             	| [$7a28: jra $7ae5]
l_7a2b:
	clr.b	d0                               	| [$7a2b: lda #$00]
	jbsr	l_843e                            	| [$7a2d: jsr $843e]
	jcs	l_7a35                             	| [$7a30: bcs $7a35]
	jra	l_7d21                             	| [$7a32: jra $7d21]
l_7a35:
	jbsr	l_8f0f                            	| [$7a35: jsr $8f0f]
	jbsr	l_8fc4                            	| [$7a38: jsr $8fc4]
	jbsr	l_903e                            	| [$7a3b: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7a3e: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7a41: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7a44: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7a47: lda #$00]
	jbsr	l_8549                            	| [$7a49: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7a4c: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$7a4e: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8369                            	| [$7a51: jsr $8369]
	jcs	l_7a59                             	| [$7a54: bcs $7a59]
	jra	l_7b16                             	| [$7a56: jra $7b16]
l_7a59:
	move.b	#0x01,d0                        	| [$7a59: lda #$01]
	jbsr	l_8549                            	| [$7a5b: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7a5e: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$7a60: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8369                            	| [$7a63: jsr $8369]
	jcs	l_7a6b                             	| [$7a66: bcs $7a6b]
	jra	l_7b35                             	| [$7a68: jra $7b35]
l_7a6b:
	GET_ADDRESS	0x03eb                     	| [$7a6b: lda $03eb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$7a6e: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ea                     	| [$7a71: lda $03ea]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$7a74: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ed                     	| [$7a77: lda $03ed]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x038c                     	| [$7a7a: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ec                     	| [$7a7d: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$7a80: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7a83: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7a86: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7a89: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7a8c: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7a8f: lda #$01]
	jbsr	l_843e                            	| [$7a91: jsr $843e]
	jcs	l_7a99                             	| [$7a94: bcs $7a99]
	jra	l_7d45                             	| [$7a96: jra $7d45]
l_7a99:
	move.b	#0x01,d0                        	| [$7a99: lda #$01]
	jbsr	l_8549                            	| [$7a9b: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7a9e: lda $1b]
	GET_ADDRESS	0x03b4                     	| [$7aa0: sta $03b4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8369                            	| [$7aa3: jsr $8369]
	jcs	l_7aae                             	| [$7aa6: bcs $7aae]
	jbsr	l_8fc4                            	| [$7aa8: jsr $8fc4]
	jra	l_7b35                             	| [$7aab: jra $7b35]
l_7aae:
	GET_ADDRESS	0x03ee                     	| [$7aae: lda $03ee]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7ab1: sta $1b]
	move.b	#0x0a,d0                        	| [$7ab3: lda #$0a]
	jbsr	l_82f9                            	| [$7ab5: jsr $82f9]
	jcc	l_7abd                             	| [$7ab8: bcc $7abd]
	jra	l_7b54                             	| [$7aba: jra $7b54]
l_7abd:
	move.b	#0x07,d0                        	| [$7abd: lda #$07]
	jbsr	l_8296                            	| [$7abf: jsr $8296]
	jcs	l_7ac7                             	| [$7ac2: bcs $7ac7]
	jra	l_7cfc                             	| [$7ac4: jra $7cfc]
l_7ac7:
	jbsr	l_8378                            	| [$7ac7: jsr $8378]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7aca: lda $1b]
	beq	l_7ad8                             	| [$7acc: beq $7ad8]
	cmp.b	#0x01,d0                         	| [$7ace: cmp #$01]
	beq	l_7ad5                             	| [$7ad0: beq $7ad5]
	jra	l_7ccf                             	| [$7ad2: jra $7ccf]
l_7ad5:
	jra	l_7cde                             	| [$7ad5: jra $7cde]
l_7ad8:
	move.b	#0x05,d0                        	| [$7ad8: lda #$05]
	jbsr	l_8296                            	| [$7ada: jsr $8296]
	jcs	l_7ae2                             	| [$7add: bcs $7ae2]
	jra	l_7cc0                             	| [$7adf: jra $7cc0]
l_7ae2:
	jra	l_7cb1                             	| [$7ae2: jra $7cb1]
l_7ae5:
	GET_ADDRESS	0x03a0                     	| [$7ae5: lda $03a0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7ae8: sta $1b]
	move.b	#0x08,d0                        	| [$7aea: lda #$08]
	jbsr	l_82f9                            	| [$7aec: jsr $82f9]
	jcc	l_7af4                             	| [$7aef: bcc $7af4]
	jra	l_7bc0                             	| [$7af1: jra $7bc0]
l_7af4:
	jbsr	l_8a6a                            	| [$7af4: jsr $8a6a]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7af7: lda $1b]
	jne	l_7afe                             	| [$7af9: jne $7afe]
	jra	l_7b79                             	| [$7afb: jra $7b79]
l_7afe:
	cmp.b	#0x01,d0                         	| [$7afe: cmp #$01]
	jne	l_7b05                             	| [$7b00: jne $7b05]
	jra	l_7b93                             	| [$7b02: jra $7b93]
l_7b05:
	cmp.b	#0x02,d0                         	| [$7b05: cmp #$02]
	jne	l_7b0c                             	| [$7b07: jne $7b0c]
	jra	l_7ba2                             	| [$7b09: jra $7ba2]
l_7b0c:
	cmp.b	#0x03,d0                         	| [$7b0c: cmp #$03]
	jne	l_7b13                             	| [$7b0e: jne $7b13]
	jra	l_7bb1                             	| [$7b10: jra $7bb1]
l_7b13:
	jra	l_7a2b                             	| [$7b13: jra $7a2b]
l_7b16:
	jbsr	l_8229                            	| [$7b16: jsr $8229]
	jcc	l_7b23                             	| [$7b19: bcc $7b23]
	jbsr	l_8429                            	| [$7b1b: jsr $8429]
	jcc	l_7b23                             	| [$7b1e: bcc $7b23]
	jra	l_7c98                             	| [$7b20: jra $7c98]
l_7b23:
	GET_ADDRESS	0x03b8                     	| [$7b23: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7b26: cmp #$03]
	jne	l_7b32                             	| [$7b28: jne $7b32]
	jbsr	l_835e                            	| [$7b2a: jsr $835e]
	jcs	l_7b32                             	| [$7b2d: bcs $7b32]
	jra	l_7b79                             	| [$7b2f: jra $7b79]
l_7b32:
	jra	l_7bd6                             	| [$7b32: jra $7bd6]
l_7b35:
	jbsr	l_8229                            	| [$7b35: jsr $8229]
	jcc	l_7b42                             	| [$7b38: bcc $7b42]
	jbsr	l_8429                            	| [$7b3a: jsr $8429]
	jcc	l_7b42                             	| [$7b3d: bcc $7b42]
	jra	l_7c82                             	| [$7b3f: jra $7c82]
l_7b42:
	GET_ADDRESS	0x03b8                     	| [$7b42: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x05,d0                         	| [$7b45: cmp #$05]
	jne	l_7b51                             	| [$7b47: jne $7b51]
	jbsr	l_835e                            	| [$7b49: jsr $835e]
	jcs	l_7b51                             	| [$7b4c: bcs $7b51]
	jra	l_7b79                             	| [$7b4e: jra $7b79]
l_7b51:
	jra	l_7c2c                             	| [$7b51: jra $7c2c]
l_7b54:
	jbsr	l_8429                            	| [$7b54: jsr $8429]
	jcc	l_7b60                             	| [$7b57: bcc $7b60]
	move.b	#0x0a,d0                        	| [$7b59: lda #$0a]
	jbsr	l_8296                            	| [$7b5b: jsr $8296]
	jcc	l_7b63                             	| [$7b5e: bcc $7b63]
l_7b60:
	jra	l_7d0b                             	| [$7b60: jra $7d0b]
l_7b63:
	GET_ADDRESS	0x03b8                     	| [$7b63: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x06,d0                         	| [$7b66: cmp #$06]
	beq	l_7b90                             	| [$7b68: beq $7b90]
	move.b	#0x09,d0                        	| [$7b6a: lda #$09]
	or.b	#0x80,d0                          	| [$7b6c: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7b6e: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x06,d0                        	| [$7b71: lda #$06]
	GET_ADDRESS	0x03b8                     	| [$7b73: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7b76: jra $706c]
l_7b79:
	GET_ADDRESS	0x03b0                     	| [$7b79: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$7b7c: cmp #$01]
	beq	l_7bb1                             	| [$7b7e: beq $7bb1]
	cmp.b	#0x02,d0                         	| [$7b80: cmp #$02]
	beq	l_7ba2                             	| [$7b82: beq $7ba2]
	move.b	#0x0f,d0                        	| [$7b84: lda #$0f]
	or.b	#0x80,d0                          	| [$7b86: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7b88: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7b8b: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7b8d: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7b90:
	jra	l_706c                             	| [$7b90: jra $706c]
l_7b93:
	move.b	#0x12,d0                        	| [$7b93: lda #$12]
	or.b	#0x80,d0                          	| [$7b95: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7b97: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7b9a: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7b9c: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7b9f: jra $706c]
l_7ba2:
	move.b	#0x16,d0                        	| [$7ba2: lda #$16]
	or.b	#0x80,d0                          	| [$7ba4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ba6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7ba9: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7bab: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7bae: jra $706c]
l_7bb1:
	move.b	#0x15,d0                        	| [$7bb1: lda #$15]
	or.b	#0x80,d0                          	| [$7bb3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7bb5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7bb8: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7bba: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7bbd: jra $706c]
l_7bc0:
	GET_ADDRESS	0x03b8                     	| [$7bc0: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$7bc3: cmp #$01]
	beq	l_7b90                             	| [$7bc5: beq $7b90]
	move.b	#0x04,d0                        	| [$7bc7: lda #$04]
	or.b	#0x80,d0                          	| [$7bc9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7bcb: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7bce: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7bd0: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7bd3: jra $706c]
l_7bd6:
	GET_ADDRESS	0x03b8                     	| [$7bd6: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7bd9: cmp #$03]
	beq	l_7b90                             	| [$7bdb: beq $7b90]
	GET_ADDRESS	0x03b0                     	| [$7bdd: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_7bf1                             	| [$7be0: beq $7bf1]
	clr.b	d0                               	| [$7be2: lda #$00]
	or.b	#0x80,d0                          	| [$7be4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7be6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7be9: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7beb: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7bee: jra $706c]
l_7bf1:
	jbsr	l_8493                            	| [$7bf1: jsr $8493]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7bf4: lda $1b]
	beq	l_7c0b                             	| [$7bf6: beq $7c0b]
	move.b	#0x05,d0                        	| [$7bf8: lda #$05]
	or.b	#0x80,d0                          	| [$7bfa: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7bfc: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7bff: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7c01: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7c04: lda $1c]
	beq	l_7c1c                             	| [$7c06: beq $7c1c]
	jra	l_7c24                             	| [$7c08: jra $7c24]
l_7c0b:
	move.b	#0x04,d0                        	| [$7c0b: lda #$04]
	or.b	#0x80,d0                          	| [$7c0d: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7c0f: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7c12: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7c14: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$7c17: txa]
	and.b	#0x02,d0                         	| [$7c18: and #$02]
	beq	l_7c24                             	| [$7c1a: beq $7c24]
l_7c1c:
	move.b	#0xc0,d0                        	| [$7c1c: lda #$c0]
	GET_ADDRESS	player_direction_032b      	| [$7c1e: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7c21: jra $706c]
l_7c24:
	move.b	#0x40,d0                        	| [$7c24: lda #$40]
	GET_ADDRESS	player_direction_032b      	| [$7c26: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7c29: jra $706c]
l_7c2c:
	GET_ADDRESS	0x03b8                     	| [$7c2c: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x05,d0                         	| [$7c2f: cmp #$05]
	beq	l_7c7f                             	| [$7c31: beq $7c7f]
	GET_ADDRESS	0x03b0                     	| [$7c33: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_7c47                             	| [$7c36: beq $7c47]
	clr.b	d0                               	| [$7c38: lda #$00]
	or.b	#0x80,d0                          	| [$7c3a: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7c3c: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x05,d0                        	| [$7c3f: lda #$05]
	GET_ADDRESS	0x03b8                     	| [$7c41: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7c44: jra $706c]
l_7c47:
	jbsr	l_8493                            	| [$7c47: jsr $8493]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7c4a: lda $1b]
	beq	l_7c61                             	| [$7c4c: beq $7c61]
	move.b	#0x05,d0                        	| [$7c4e: lda #$05]
	or.b	#0x80,d0                          	| [$7c50: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7c52: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x05,d0                        	| [$7c55: lda #$05]
	GET_ADDRESS	0x03b8                     	| [$7c57: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7c5a: lda $1c]
	beq	l_7c72                             	| [$7c5c: beq $7c72]
	jra	l_7c7a                             	| [$7c5e: jra $7c7a]
l_7c61:
	move.b	#0x04,d0                        	| [$7c61: lda #$04]
	or.b	#0x80,d0                          	| [$7c63: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7c65: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x05,d0                        	| [$7c68: lda #$05]
	GET_ADDRESS	0x03b8                     	| [$7c6a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$7c6d: txa]
	and.b	#0x02,d0                         	| [$7c6e: and #$02]
	beq	l_7c7a                             	| [$7c70: beq $7c7a]
l_7c72:
	move.b	#0xc0,d0                        	| [$7c72: lda #$c0]
	GET_ADDRESS	player_direction_032b      	| [$7c74: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7c77: jra $706c]
l_7c7a:
	move.b	#0x40,d0                        	| [$7c7a: lda #$40]
	GET_ADDRESS	player_direction_032b      	| [$7c7c: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7c7f:
	jra	l_706c                             	| [$7c7f: jra $706c]
l_7c82:
	GET_ADDRESS	0x03b8                     	| [$7c82: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$7c85: cmp #$04]
	beq	l_7c7f                             	| [$7c87: beq $7c7f]
	move.b	#0x09,d0                        	| [$7c89: lda #$09]
	or.b	#0x80,d0                          	| [$7c8b: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7c8d: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$7c90: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$7c92: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7c95: jra $706c]
l_7c98:
	GET_ADDRESS	0x03b8                     	| [$7c98: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$7c9b: cmp #$02]
	jne	l_7ca2                             	| [$7c9d: jne $7ca2]
	jra	l_7b90                             	| [$7c9f: jra $7b90]
l_7ca2:
	move.b	#0x06,d0                        	| [$7ca2: lda #$06]
	or.b	#0x80,d0                          	| [$7ca4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ca6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7ca9: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$7cab: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7cae: jra $706c]
l_7cb1:
	move.b	#0x10,d0                        	| [$7cb1: lda #$10]
	or.b	#0x80,d0                          	| [$7cb3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7cb5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7cb8: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7cba: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7cbd: jra $706c]
l_7cc0:
	move.b	#0x11,d0                        	| [$7cc0: lda #$11]
	or.b	#0x80,d0                          	| [$7cc2: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7cc4: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7cc7: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7cc9: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ccc: jra $706c]
l_7ccf:
	move.b	#0x13,d0                        	| [$7ccf: lda #$13]
	or.b	#0x80,d0                          	| [$7cd1: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7cd3: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7cd6: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7cd8: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7cdb: jra $706c]
l_7cde:
	move.b	#0x14,d0                        	| [$7cde: lda #$14]
	or.b	#0x80,d0                          	| [$7ce0: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ce2: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7ce5: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7ce7: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7cea: jra $706c]
	move.b	#0x04,d0                        	| [$7ced: lda #$04]
	or.b	#0x80,d0                          	| [$7cef: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7cf1: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7cf4: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7cf6: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7cf9: jra $706c]
l_7cfc:
	clr.b	d0                               	| [$7cfc: lda #$00]
	or.b	#0x80,d0                          	| [$7cfe: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7d00: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7d03: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7d05: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7d08: jra $706c]
l_7d0b:
	GET_ADDRESS	0x03b8                     	| [$7d0b: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x07,d0                         	| [$7d0e: cmp #$07]
	beq	l_7d1e                             	| [$7d10: beq $7d1e]
	clr.b	d0                               	| [$7d12: lda #$00]
	or.b	#0x80,d0                          	| [$7d14: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7d16: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x07,d0                        	| [$7d19: lda #$07]
	GET_ADDRESS	0x03b8                     	| [$7d1b: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7d1e:
	jra	l_706c                             	| [$7d1e: jra $706c]
l_7d21:
	GET_ADDRESS	0x03eb                     	| [$7d21: lda $03eb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$7d24: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ea                     	| [$7d27: lda $03ea]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$7d2a: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ed                     	| [$7d2d: lda $03ed]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x038c                     	| [$7d30: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ec                     	| [$7d33: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$7d36: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7d39: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7d3c: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7d3f: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7d42: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7d45:
	jbsr	l_8429                            	| [$7d45: jsr $8429]
	jcc	l_7cfc                             	| [$7d48: bcc $7cfc]
	GET_ADDRESS	0x03b8                     	| [$7d4a: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x08,d0                         	| [$7d4d: cmp #$08]
	beq	l_7d1e                             	| [$7d4f: beq $7d1e]
	move.b	#0x09,d0                        	| [$7d51: lda #$09]
	or.b	#0x80,d0                          	| [$7d53: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7d55: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x08,d0                        	| [$7d58: lda #$08]
	GET_ADDRESS	0x03b8                     	| [$7d5a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7d5d: jra $706c]
l_7d60:
	jbsr	l_90b0                            	| [$7d60: jsr $90b0]
	jcc	l_7d68                             	| [$7d63: bcc $7d68]
	jra	l_7dc2                             	| [$7d65: jra $7dc2]
l_7d68:
	GET_ADDRESS	0x0316                     	| [$7d68: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7d77                             	| [$7d6b: bpl $7d77]
	GET_ADDRESS	0x03b8                     	| [$7d6d: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7d70: cmp #$ff]
	beq	l_7dc2                             	| [$7d72: beq $7dc2]
	jra	l_7d81                             	| [$7d74: jra $7d81]
l_7d77:
	or.b	#0x80,d0                          	| [$7d77: ora #$80]
	GET_ADDRESS	0x0316                     	| [$7d79: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7d7c: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7d7e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7d81:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$7d81: lda $53]
	beq	l_7db6                             	| [$7d83: beq $7db6]
	jbsr	l_8875                            	| [$7d85: jsr $8875]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7d88: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7d8a: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7d8d: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7d8f: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0407                     	| [$7d92: lda $0407]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$7d95: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7d98: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7d9a: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7d9d: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7da0: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7da3: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7da6: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_83a0                            	| [$7da9: jsr $83a0]
	jcc	l_7db6                             	| [$7dac: bcc $7db6]
	jbsr	l_8229                            	| [$7dae: jsr $8229]
	jcs	l_7ddb                             	| [$7db1: bcs $7ddb]
	jra	l_7dc5                             	| [$7db3: jra $7dc5]
l_7db6:
	move.b	#0x0e,d0                        	| [$7db6: lda #$0e]
	or.b	#0x80,d0                          	| [$7db8: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7dba: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7dbd: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7dbf: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7dc2:
	jra	l_706c                             	| [$7dc2: jra $706c]
l_7dc5:
	GET_ADDRESS	0x03b8                     	| [$7dc5: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$7dc8: cmp #$02]
	beq	l_7dc2                             	| [$7dca: beq $7dc2]
	move.b	#0x01,d0                        	| [$7dcc: lda #$01]
	or.b	#0x80,d0                          	| [$7dce: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7dd0: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7dd3: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$7dd5: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7dd8: jra $706c]
l_7ddb:
	GET_ADDRESS	0x03b8                     	| [$7ddb: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$7dde: cmp #$01]
	beq	l_7dc2                             	| [$7de0: beq $7dc2]
	move.b	#0x07,d0                        	| [$7de2: lda #$07]
	or.b	#0x80,d0                          	| [$7de4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7de6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7de9: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7deb: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7dee: jra $706c]
l_7df1:
	GET_ADDRESS	0x0316                     	| [$7df1: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7e08                             	| [$7df4: bpl $7e08]
	GET_ADDRESS	0x03b8                     	| [$7df6: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7df9: cmp #$ff]
	beq	l_7dc2                             	| [$7dfb: beq $7dc2]
	cmp.b	#0x01,d0                         	| [$7dfd: cmp #$01]
	beq	l_7e39                             	| [$7dff: beq $7e39]
	cmp.b	#0x02,d0                         	| [$7e01: cmp #$02]
	beq	l_7e48                             	| [$7e03: beq $7e48]
	jra	l_7e8a                             	| [$7e05: jra $7e8a]
l_7e08:
	or.b	#0x80,d0                          	| [$7e08: ora #$80]
	GET_ADDRESS	0x0316                     	| [$7e0a: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7e0d: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7e0f: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7e12: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7e14: sta $1b]
	jbsr	l_8bd8                            	| [$7e16: jsr $8bd8]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7e19: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7e1b: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7e1e: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7e20: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7e23: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$7e25: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7e28: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7e2a: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7e2d: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7e30: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7e33: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7e36: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7e39:
	jbsr	l_8229                            	| [$7e39: jsr $8229]
	jcs	l_7e54                             	| [$7e3c: bcs $7e54]
	move.b	d1,d0                           	| [$7e3e: txa]
	lsr.b	#1,d0                            	| [$7e3f: lsr a]
	move.b	d0,d2                           	| [$7e40: tay]
	GET_ADDRESS	0x0054                     	| [$7e41: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x0b,d0                         	| [$7e44: cmp #$0b]
	beq	l_7e92                             	| [$7e46: beq $7e92]
l_7e48:
	move.b	d1,d0                           	| [$7e48: txa]
	eor.b	#0x01,d0                         	| [$7e49: eor #$01]
	move.b	d0,d2                           	| [$7e4b: tay]
	GET_ADDRESS	0x030e                     	| [$7e4c: lda $030e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_7e63                             	| [$7e4f: bmi $7e63]
	jra	l_7eb0                             	| [$7e51: jra $7eb0]
l_7e54:
	GET_ADDRESS	0x03b8                     	| [$7e54: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_7e9e                             	| [$7e57: jne $7e9e]
	move.b	#0x06,d0                        	| [$7e59: lda #$06]
	jbsr	l_8296                            	| [$7e5b: jsr $8296]
	jcc	l_7ea1                             	| [$7e5e: bcc $7ea1]
	jra	l_7ec6                             	| [$7e60: jra $7ec6]
l_7e63:
	move.b	#0x01,d0                        	| [$7e63: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7e65: sta $1b]
	jbsr	l_8bd8                            	| [$7e67: jsr $8bd8]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7e6a: lda $1b]
	GET_ADDRESS	0x0384                     	| [$7e6c: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7e6f: lda $1c]
	GET_ADDRESS	0x0380                     	| [$7e71: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$7e74: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$7e76: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7e79: lda #$00]
	GET_ADDRESS	0x038c                     	| [$7e7b: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$7e7e: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$7e81: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$7e84: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$7e87: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7e8a:
	jbsr	l_8229                            	| [$7e8a: jsr $8229]
	jcc	l_7e92                             	| [$7e8d: bcc $7e92]
	jra	l_7ed5                             	| [$7e8f: jra $7ed5]
l_7e92:
	clr.b	d0                               	| [$7e92: lda #$00]
	or.b	#0x80,d0                          	| [$7e94: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7e96: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7e99: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7e9b: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7e9e:
	jra	l_706c                             	| [$7e9e: jra $706c]
l_7ea1:
	move.b	#0x09,d0                        	| [$7ea1: lda #$09]
	or.b	#0x80,d0                          	| [$7ea3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ea5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7ea8: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7eaa: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ead: jra $706c]
l_7eb0:
	GET_ADDRESS	0x03b8                     	| [$7eb0: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$7eb3: cmp #$02]
	beq	l_7e9e                             	| [$7eb5: beq $7e9e]
	clr.b	d0                               	| [$7eb7: lda #$00]
	or.b	#0x80,d0                          	| [$7eb9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ebb: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7ebe: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$7ec0: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ec3: jra $706c]
l_7ec6:
	move.b	#0x07,d0                        	| [$7ec6: lda #$07]
	or.b	#0x80,d0                          	| [$7ec8: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7eca: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7ecd: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7ecf: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ed2: jra $706c]
l_7ed5:
	GET_ADDRESS	0x03b8                     	| [$7ed5: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7ed8: cmp #$03]
	beq	l_7e9e                             	| [$7eda: beq $7e9e]
	move.b	#0x07,d0                        	| [$7edc: lda #$07]
	or.b	#0x80,d0                          	| [$7ede: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ee0: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7ee3: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7ee5: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ee8: jra $706c]
l_7eeb:
	GET_ADDRESS	0x0316                     	| [$7eeb: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_7efc                             	| [$7eee: bmi $7efc]
	or.b	#0x80,d0                          	| [$7ef0: ora #$80]
	                     	| [$7ef2: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x21,d0                        	| [$7ef5: lda #$21]
	or.b	#0x80,d0                          	| [$7ef7: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7ef9: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7efc:
	jra	l_706c                             	| [$7efc: jra $706c]
l_7eff:
	GET_ADDRESS	0x0316                     	| [$7eff: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_7f10                             	| [$7f02: bmi $7f10]
	or.b	#0x80,d0                          	| [$7f04: ora #$80]
	                     	| [$7f06: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x1e,d0                        	| [$7f09: lda #$1e]
	or.b	#0x80,d0                          	| [$7f0b: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7f0d: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7f10:
	jra	l_706c                             	| [$7f10: jra $706c]
l_7f13:
	GET_ADDRESS	0x0316                     	| [$7f13: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7f4c                             	| [$7f16: bpl $7f4c]
	GET_ADDRESS	0x03b8                     	| [$7f18: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7f1b: cmp #$ff]
	beq	l_7f10                             	| [$7f1d: beq $7f10]
	GET_ADDRESS	0x07fa                     	| [$7f1f: inc $07fa]
	addq.b	#1,(a0)                         	| [...]
	                     	| [$7f22: lda $07fa]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x20,d0                         	| [$7f25: cmp #$20]
	beq	l_7f5c                             	| [$7f27: beq $7f5c]
	* bcs=>bcc (cmp higher above)
	jcc	l_7f2e                             	| [$7f29: bcs $7f2e]
	jra	l_7f9d                             	| [$7f2b: jra $7f9d]
l_7f2e:
	GET_ADDRESS	0x03b8                     	| [$7f2e: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$7f31: cmp #$ff]
	beq	l_7f9d                             	| [$7f33: beq $7f9d]
	asl.b	#1,d0                            	| [$7f35: asl a]
	move.b	d0,d2                           	| [$7f36: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_7f44            	| [$7f37: lda jump_table_7f44, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$7f3a: sta $1b]
	GET_BANK_ADDRESS	0x7f45                     	| [$7f3c: lda $7f45, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$7f3f: sta $1c]
	rts |  [$7f41: jra ($001b)] [indirect_jump]
l_7f4c:
	or.b	#0x80,d0                          	| [$7f4c: ora #$80]
	NEW_ADDRESS
	GET_ADDRESS	0x0316                     	| [$7f4e: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$7f51: lda #$00]
	GET_ADDRESS	0x07fa                     	| [$7f53: sta $07fa]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8ca3                            	| [$7f56: jsr $8ca3]
	jra	l_8005                             	| [$7f59: jra $8005]
l_7f5c:
	clr.b	d0                               	| [$7f5c: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$7f5e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ac                     	| [$7f61: lda $03ac, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_7f75                             	| [$7f64: beq $7f75]
l_7f66:
	GET_ADDRESS	0x07fa                     	| [$7f66: lda $07fa]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x30,d0                         	| [$7f69: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_7fe0                             	| [$7f6b: bcc $7fe0]
	jbsr	l_83e0                            	| [$7f6d: jsr $83e0]
	jcs	l_7fe0                             	| [$7f70: bcs $7fe0]
	jra	l_7fd1                             	| [$7f72: jra $7fd1]
l_7f75:
	GET_ADDRESS	0x07fa                     	| [$7f75: lda $07fa]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x30,d0                         	| [$7f78: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_7fbb                             	| [$7f7a: bcc $7fbb]
	move.b	#0x04,d2                        	| [$7f7c: ldy #$04]
	GET_ADDRESS	0x00e3                     	| [$7f7e: lda $00e3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x70,d0                         	| [$7f81: cmp #$70]
	* bcc=>bcs (cmp above)
	jcs	l_7fbb                             	| [$7f83: bcc $7fbb]
l_7f85:
	GET_ADDRESS	0x03b8                     	| [$7f85: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7f88: cmp #$03]
	jne	l_7fa0                             	| [$7f8a: jne $7fa0]
	GET_ADDRESS	0x02af                     	| [$7f8c: lda $02af, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_7fa0                             	| [$7f8f: bpl $7fa0]
	move.b	#0x0c,d0                        	| [$7f91: lda #$0c]
	or.b	#0x80,d0                          	| [$7f93: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7f95: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7f98: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7f9a: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_7f9d:
	jra	l_706c                             	| [$7f9d: jra $706c]
l_7fa0:
	GET_ADDRESS	0x03b8                     	| [$7fa0: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$7fa3: cmp #$03]
	beq	l_7f9d                             	| [$7fa5: beq $7f9d]
	clr.b	d0                               	| [$7fa7: lda #$00]
	jbsr	l_b90e                            	| [$7fa9: jsr $b90e]
	move.b	#0x0a,d0                        	| [$7fac: lda #$0a]
	or.b	#0x80,d0                          	| [$7fae: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7fb0: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$7fb3: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$7fb5: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7fb8: jra $706c]
l_7fbb:
	GET_ADDRESS	0x03b8                     	| [$7fbb: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$7fbe: cmp #$02]
	beq	l_7f9d                             	| [$7fc0: beq $7f9d]
	move.b	#0x19,d0                        	| [$7fc2: lda #$19]
	or.b	#0x80,d0                          	| [$7fc4: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7fc6: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$7fc9: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$7fcb: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7fce: jra $706c]
l_7fd1:
	move.b	#0x1b,d0                        	| [$7fd1: lda #$1b]
	or.b	#0x80,d0                          	| [$7fd3: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7fd5: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$7fd8: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$7fda: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7fdd: jra $706c]
l_7fe0:
	GET_ADDRESS	0x03b8                     	| [$7fe0: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$7fe3: cmp #$01]
	beq	l_7f9d                             	| [$7fe5: beq $7f9d]
	move.b	#0x19,d0                        	| [$7fe7: lda #$19]
	or.b	#0x80,d0                          	| [$7fe9: ora #$80]
	GET_ADDRESS	0x0327                     	| [$7feb: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$7fee: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$7ff0: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$7ff3: jra $706c]


l_8005:
	move.b	#0x17,d0                        	| [$8005: lda #$17]
	or.b	#0x80,d0                          	| [$8007: ora #$80]
l_8009:
	GET_ADDRESS	0x0327                     	| [$8009: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$800c: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$800e: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8011: jra $706c]
l_8014:
	jbsr	l_90b0                            	| [$8014: jsr $90b0]
	jcc	l_801c                             	| [$8017: bcc $801c]
l_8019:
	jra	l_80af                             	| [$8019: jra $80af]
l_801c:
	GET_ADDRESS	0x0316                     	| [$801c: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_8049                             	| [$801f: bpl $8049]
	GET_ADDRESS	0x03b0                     	| [$8021: inc $03b0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$8024: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x10,d0                         	| [$8027: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_8019                             	| [$8029: bcc $8019]
	beq	l_8065                             	| [$802b: beq $8065]
	GET_ADDRESS	0x03b0                     	| [$802d: dec $03b0, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03b8                     	| [$8030: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$8033: cmp #$03]
	beq	l_80a4                             	| [$8035: beq $80a4]
	cmp.b	#0x04,d0                         	| [$8037: cmp #$04]
	beq	l_80af                             	| [$8039: beq $80af]
	cmp.b	#0xff,d0                         	| [$803b: cmp #$ff]
	jne	l_80b2                             	| [$803d: jne $80b2]
	GET_ADDRESS	0x030e                     	| [$803f: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$8042: and #$10]
	beq	l_8065                             	| [$8044: beq $8065]
	jra	l_80af                             	| [$8046: jra $80af]
l_8049:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$8049: lda $53]
	jne	l_8055                             	| [$804b: jne $8055]
	clr.b	d0                               	| [$804d: lda #$00]
	GET_ADDRESS	0x03b0                     	| [$804f: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_805a                             	| [$8052: jra $805a]
l_8055:
	move.b	#0x0f,d0                        	| [$8055: lda #$0f]
	GET_ADDRESS	0x03b0                     	| [$8057: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_805a:
	GET_ADDRESS	0x0316                     	| [$805a: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$805d: ora #$80]
	                     	| [$805f: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_80af                             	| [$8062: jra $80af]
l_8065:
	clr.b	d0                               	| [$8065: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$8067: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$806a: lda $56]
	and.b	#0x0f,d0                         	| [$806c: and #$0f]
	cmp.b	#0x02,d0                         	| [$806e: cmp #$02]
	jne	l_80b2                             	| [$8070: jne $80b2]
	GET_ADDRESS	0x0373                     	| [$8072: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$8075: and #$f0]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8077: sta $2a]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$8079: lda $56]
	and.b	#0x10,d0                         	| [$807b: and #$10]
	GET_ADDRESS	0x2a                       	| [$807d: eor $2a]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	jne	l_80b2                             	| [$807f: jne $80b2]
	jbsr	l_89d7                            	| [$8081: jsr $89d7]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8084: lda $1b]
	GET_ADDRESS	0x0384                     	| [$8086: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8089: lda $1c]
	GET_ADDRESS	0x0380                     	| [$808b: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$808e: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$8090: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$8093: lda #$00]
	GET_ADDRESS	0x038c                     	| [$8095: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$8098: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$809b: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$809e: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$80a1: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_80a4:
	jbsr	l_8229                            	| [$80a4: jsr $8229]
	jcc	l_80ac                             	| [$80a7: bcc $80ac]
	jra	l_8142                             	| [$80a9: jra $8142]
l_80ac:
	jra	l_8158                             	| [$80ac: jra $8158]
l_80af:
	jra	l_706c                             	| [$80af: jra $706c]
l_80b2:
	jbsr	l_8b05                            	| [$80b2: jsr $8b05]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$80b5: lda $1b]
	GET_ADDRESS	0x0384                     	| [$80b7: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$80ba: lda $1c]
	GET_ADDRESS	0x0380                     	| [$80bc: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$80bf: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x0388                     	| [$80c1: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$80c4: lda #$00]
	GET_ADDRESS	0x038c                     	| [$80c6: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$80c9: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$80cc: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03b8                     	| [$80cf: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_80da                             	| [$80d2: jne $80da]
	GET_ADDRESS	0x0378                     	| [$80d4: lda $0378, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x037c                     	| [$80d7: sta $037c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_80da:
	jbsr	compute_player_direction_9026     	| [$80da: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$80dd: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8229                            	| [$80e0: jsr $8229]
	jcc	l_8133                             	| [$80e3: bcc $8133]
	GET_ADDRESS	0x0378                     	| [$80e5: lda $0378, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x037c                     	| [$80e8: cmp $037c, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	jne	l_80fa                             	| [$80eb: jne $80fa]
	GET_ADDRESS	0x0378                     	| [$80ed: lda $0378, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$80f0: cmp $0373, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	beq	l_80fa                             	| [$80f3: beq $80fa]
	GET_ADDRESS	0x03b8                     	| [$80f5: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_80af                             	| [$80f8: jne $80af]
l_80fa:
	GET_ADDRESS	0x0378                     	| [$80fa: lda $0378, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x037c                     	| [$80fd: sta $037c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x07,d0                        	| [$8100: lda #$07]
	jbsr	l_8296                            	| [$8102: jsr $8296]
	jcc	l_811d                             	| [$8105: bcc $811d]
	GET_ADDRESS	0x03b8                     	| [$8107: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$810a: cmp #$01]
	beq	l_80af                             	| [$810c: beq $80af]
	move.b	#0x06,d0                        	| [$810e: lda #$06]
	or.b	#0x80,d0                          	| [$8110: ora #$80]
	GET_ADDRESS	0x0327                     	| [$8112: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$8115: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$8117: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_811a:
	jra	l_80af                             	| [$811a: jra $80af]
l_811d:
	GET_ADDRESS	0x03b8                     	| [$811d: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$8120: cmp #$02]
	beq	l_80af                             	| [$8122: beq $80af]
	move.b	#0x09,d0                        	| [$8124: lda #$09]
	or.b	#0x80,d0                          	| [$8126: ora #$80]
	GET_ADDRESS	0x0327                     	| [$8128: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$812b: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$812d: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8130: jra $706c]
l_8133:
	clr.b	d0                               	| [$8133: lda #$00]
	or.b	#0x80,d0                          	| [$8135: ora #$80]
	GET_ADDRESS	0x0327                     	| [$8137: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$813a: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$813c: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$813f: jra $706c]
l_8142:
	GET_ADDRESS	0x03b8                     	| [$8142: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$8145: cmp #$03]
	beq	l_811a                             	| [$8147: beq $811a]
	move.b	#0x06,d0                        	| [$8149: lda #$06]
	or.b	#0x80,d0                          	| [$814b: ora #$80]
	GET_ADDRESS	0x0327                     	| [$814d: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x03,d0                        	| [$8150: lda #$03]
	GET_ADDRESS	0x03b8                     	| [$8152: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8155: jra $706c]
l_8158:
	clr.b	d0                               	| [$8158: lda #$00]
	or.b	#0x80,d0                          	| [$815a: ora #$80]
	GET_ADDRESS	0x0327                     	| [$815c: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$815f: lda #$04]
	GET_ADDRESS	0x03b8                     	| [$8161: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8164: jra $706c]
l_8167:
	GET_ADDRESS	0x0316                     	| [$8167: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_817a                             	| [$816a: bpl $817a]
	GET_ADDRESS	0x03b8                     	| [$816c: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$816f: cmp #$01]
	beq	l_81e1                             	| [$8171: beq $81e1]
	cmp.b	#0x02,d0                         	| [$8173: cmp #$02]
	beq	l_81be                             	| [$8175: beq $81be]
	jra	l_81f9                             	| [$8177: jra $81f9]
l_817a:
	or.b	#0x80,d0                          	| [$817a: ora #$80]
	                     	| [$817c: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$817f: lda #$00]
	GET_ADDRESS	0x03b8                     	| [$8181: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8ca3                            	| [$8184: jsr $8ca3]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$8187: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$8189: and #$08]
	beq	l_8190                             	| [$818b: beq $8190]
	jra	l_81f9                             	| [$818d: jra $81f9]
l_8190:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$8190: lda $4f]
	and.b	#0x02,d0                         	| [$8192: and #$02]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8194: sta $2a]
	move.b	d1,d0                           	| [$8196: txa]
	and.b	#0x02,d0                         	| [$8197: and #$02]
	OP_R_ON_ZP_ADDRESS	cmp,0x2a,d0 |  [$8199: cmp $2a]
	jne	l_81a7                             	| [$819b: jne $81a7]
	GET_ADDRESS	0x030a                     	| [$819d: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$81a0: and #$08]
	jne	l_821a                             	| [$81a2: jne $821a]
	jra	l_820b                             	| [$81a4: jra $820b]
l_81a7:
	move.b	d1,d0                           	| [$81a7: txa]
	and.b	#0x02,d0                         	| [$81a8: and #$02]
	lsr.b	#1,d0                            	| [$81aa: lsr a]
	move.b	d0,d2                           	| [$81ab: tay]
	GET_ADDRESS	0x0047                     	| [$81ac: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_820b                             	| [$81af: bmi $820b]
	OP_R_ON_ZP_ADDRESS	move,0x5d,d0 |  [$81b1: lda $5d]
	cmp.b	#0x04,d0                         	| [$81b3: cmp #$04]
	jne	l_820b                             	| [$81b5: jne $820b]
	GET_ADDRESS	0x030a                     	| [$81b7: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$81ba: and #$08]
	jne	l_820b                             	| [$81bc: jne $820b]
l_81be:
	jbsr	l_8c4e                            	| [$81be: jsr $8c4e]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$81c1: lda $1b]
	GET_ADDRESS	0x0384                     	| [$81c3: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$81c6: lda $1c]
	GET_ADDRESS	0x0380                     	| [$81c8: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$81cb: lda base_screen_pointer_list_001d]
	GET_ADDRESS	0x038c                     	| [$81cd: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$81d0: lda $1e]
	GET_ADDRESS	0x0388                     	| [$81d2: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_903e                            	| [$81d5: jsr $903e]
	GET_ADDRESS	0x0378                     	| [$81d8: sta $0378, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	compute_player_direction_9026     	| [$81db: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$81de: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_81e1:
	jbsr	l_8229                            	| [$81e1: jsr $8229]
	jcc	l_81fc                             	| [$81e4: bcc $81fc]
	GET_ADDRESS	0x03b8                     	| [$81e6: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$81e9: cmp #$01]
	beq	l_81f9                             	| [$81eb: beq $81f9]
	move.b	#0x08,d0                        	| [$81ed: lda #$08]
	or.b	#0x80,d0                          	| [$81ef: ora #$80]
	GET_ADDRESS	0x0327                     	| [$81f1: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$81f4: lda #$01]
	GET_ADDRESS	0x03b8                     	| [$81f6: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_81f9:
	jra	l_706c                             	| [$81f9: jra $706c]
l_81fc:
	move.b	#0x04,d0                        	| [$81fc: lda #$04]
	or.b	#0x80,d0                          	| [$81fe: ora #$80]
	GET_ADDRESS	0x0327                     	| [$8200: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$8203: lda #$02]
	GET_ADDRESS	0x03b8                     	| [$8205: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8208: jra $706c]
l_820b:
	move.b	#0x04,d0                        	| [$820b: lda #$04]
	or.b	#0x80,d0                          	| [$820d: ora #$80]
	GET_ADDRESS	0x0327                     	| [$820f: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$8212: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$8214: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8217: jra $706c]
l_821a:
	move.b	#0x17,d0                        	| [$821a: lda #$17]
	or.b	#0x80,d0                          	| [$821c: ora #$80]
	GET_ADDRESS	0x0327                     	| [$821e: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	st.b	d0                        	| [$8221: lda #$ff]
	GET_ADDRESS	0x03b8                     	| [$8223: sta $03b8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_706c                             	| [$8226: jra $706c]

l_8229:
	GET_ADDRESS	0x0373                     	| [$8229: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0378                     	| [$822c: cmp $0378, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	jne	l_8240                             	| [$822f: jne $8240]
	GET_ADDRESS	0x0316                     	| [$8231: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$8234: and #$7f]
	cmp.b	#0x14,d0                         	| [$8236: cmp #$14]
	beq	l_8240                             	| [$8238: beq $8240]
* change player direction
	jbsr	compute_player_direction_9026     	| [$823a: jsr compute_player_direction_9026]
	GET_ADDRESS	player_direction_032b      	| [$823d: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_8240:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d1 |  [$8240: stx $1b]
	move.b	#0x0d,d0                        	| [$8242: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8244: sta $1c]
	move.b	d0,d2                           	| [$8246: tay]
	GET_ADDRESS	0x0384                     	| [$8247: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$824a: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0380                     	| [$824d: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8250: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x038c                     	| [$8253: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00c7                     	| [$8256: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0388                     	| [$8259: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$825c: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$825f: lda #$00]
	GET_ADDRESS	0x00f1                     	| [$8261: sta $00f1, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x00e3                     	| [$8264: lda $00e3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	compare_player_positions_6923     	| [$8267: jsr compare_player_positions_6923]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$826a: lda $1b]
	cmp.b	#0x04,d0                         	| [$826c: cmp #$04]
	* bcs=>bcc
	jcc	l_8279                             	| [$826e: bcs $8279]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8270: lda $1c]
	cmp.b	#0x04,d0                         	| [$8272: cmp #$04]
	* bcs=>bcc
	jcc	l_8279                             	| [$8274: bcs $8279]
	jra	l_827b                             	| [$8276: jra $827b]
l_8279:
	SET_XC_FLAGS                           	| [$8279: sec]
	rts                                    	| [$827a: rts]
l_827b:
	CLR_XC_FLAGS                           	| [$827b: clc]
	rts                                    	| [$827c: rts]

l_827d:
	GET_ADDRESS	0x03ee                     	| [$827d: lda $03ee]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03b4                     	| [$8280: cmp $03b4, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_8287                             	| [$8283: bcs $8287]
	SET_XC_FLAGS                           	| [$8285: sec]
	rts                                    	| [$8286: rts]
l_8287:
	CLR_XC_FLAGS                           	| [$8287: clc]
	rts                                    	| [$8288: rts]

l_8289:
	GET_ADDRESS	0x0373                     	| [$8289: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$828c: and #$0f]
	cmp.b	#0x09,d0                         	| [$828e: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_8294                             	| [$8290: bcc $8294]
	SET_XC_FLAGS                           	| [$8292: sec]
	rts                                    	| [$8293: rts]
l_8294:
	CLR_XC_FLAGS                           	| [$8294: clc]
	rts                                    	| [$8295: rts]

l_8296:
	movem.w	d0,-(sp)                       	| [$8296: pha]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d1 |  [$8297: stx $1b]
	move.b	#0x0d,d0                        	| [$8299: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$829b: sta $1c]
	move.b	d0,d2                           	| [$829d: tay]
	GET_ADDRESS	0x0384                     	| [$829e: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$82a1: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0380                     	| [$82a4: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$82a7: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x038c                     	| [$82aa: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00c7                     	| [$82ad: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0388                     	| [$82b0: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$82b3: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	clr.b	d0                               	| [$82b6: lda #$00]
	GET_ADDRESS	0x00f1                     	| [$82b8: sta $00f1, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x00e3                     	| [$82bb: sta $00e3, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	compare_player_positions_6923     	| [$82be: jsr compare_player_positions_6923]
	move.w	(sp)+,d0                        	| [$82c1: pla]
	move.b	d0,d2                           	| [$82c2: tay]
	GET_ADDRESS	0x82de                     	| [$82c3: lda $82de, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	l_d1a9                            	| [$82c6: jsr $d1a9]
	OP_R_ON_ZP_ADDRESS	move,0x1f,d0 |  [$82c9: lda $1f]
	OP_R_ON_ZP_ADDRESS	cmp,0x15,d0 |  [$82cb: cmp $15]
	beq	l_82d4                             	| [$82cd: beq $82d4]
	* bcc=>bcs (cmp higher above)
	jcs	l_82da                             	| [$82cf: bcc $82da]
	jra	l_82dc                             	| [$82d1: jra $82dc]
l_82d4:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$82d4: lda $1e]
	OP_R_ON_ZP_ADDRESS	cmp,multipurpose_14,d0 |  [$82d6: cmp multipurpose_14]
	* bcs=>bcc
	jcc	l_82dc                             	| [$82d8: bcs $82dc]
l_82da:
	SET_XC_FLAGS                           	| [$82da: sec]
	rts                                    	| [$82db: rts]
l_82dc:
	CLR_XC_FLAGS                           	| [$82dc: clc]
	rts                                    	| [$82dd: rts]

l_82ea:
	GET_ADDRESS	0x03b0                     	| [$82ea: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$82ed: clc]
	add.b	#0x03,d0                        	| [$82ee: adc #$03]
	GET_ADDRESS	0x0406                     	| [$82f0: cmp $0406]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_82f7                             	| [$82f3: bcc $82f7]
	CLR_XC_FLAGS                           	| [$82f5: clc]
	rts                                    	| [$82f6: rts]
l_82f7:
	SET_XC_FLAGS                           	| [$82f7: sec]
	rts                                    	| [$82f8: rts]

l_82f9:
	cmp.b	#0x03,d0                         	| [$82f9: cmp #$03]
	jne	l_830a                             	| [$82fb: jne $830a]
	GET_ADDRESS	0x03b0                     	| [$82fd: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8300: clc]
	add.b	#0x0d,d0                        	| [$8301: adc #$0d]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$8303: cmp $1b]
	* bcs=>bcc
	jcc	l_8314                             	| [$8305: bcs $8314]
	jra	l_8312                             	| [$8307: jra $8312]
l_830a:
	move.b	d0,d2                           	| [$830a: tay]
	GET_ADDRESS	0x8316                     	| [$830b: lda $8316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$830e: cmp $1b]
	* bcs=>bcc
	jcc	l_8314                             	| [$8310: bcs $8314]
l_8312:
	SET_XC_FLAGS                           	| [$8312: sec]
	rts                                    	| [$8313: rts]
l_8314:
	CLR_XC_FLAGS                           	| [$8314: clc]
	rts                                    	| [$8315: rts]

l_8323:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$8323: lda $56]
	and.b	#0x0f,d0                         	| [$8325: and #$0f]
	cmp.b	#0x02,d0                         	| [$8327: cmp #$02]
	beq	l_832d                             	| [$8329: beq $832d]
	SET_XC_FLAGS                           	| [$832b: sec]
	rts                                    	| [$832c: rts]
l_832d:
	CLR_XC_FLAGS                           	| [$832d: clc]
	rts                                    	| [$832e: rts]

l_832f:
	GET_ADDRESS	0x03b4                     	| [$832f: lda $03b4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	CLR_XC_FLAGS                           	| [$8332: clc]
	GET_ADDRESS	0x03b0                     	| [$8333: adc $03b0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	move.b	#0x0c,d4	| [$8336: adc #$0c]
	addx.b	d4,d0                        	| [$8336: adc #$0c]
	GET_ADDRESS	0x03ff                     	| [$8338: cmp $03ff]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	jcc	l_833f                             	| [$833b: bcs $833f]
	SET_XC_FLAGS                           	| [$833d: sec]
	rts                                    	| [$833e: rts]
l_833f:
	CLR_XC_FLAGS                           	| [$833f: clc]
	rts                                    	| [$8340: rts]

	GET_ADDRESS	0x03b0                     	| [$8341: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8344: clc]
	add.b	#0x0e,d0                        	| [$8345: adc #$0e]
	GET_ADDRESS	0x03ff                     	| [$8347: cmp $03ff]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	jcc	l_834e                             	| [$834a: bcs $834e]
	SET_XC_FLAGS                           	| [$834c: sec]
	rts                                    	| [$834d: rts]
l_834e:
	CLR_XC_FLAGS                           	| [$834e: clc]
	rts                                    	| [$834f: rts]
l_8350:
	GET_ADDRESS	0x039c                     	| [$8350: lda $039c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_835a                             	| [$8353: jne $835a]
	GET_ADDRESS	0x0398                     	| [$8355: lda $0398, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_835c                             	| [$8358: jne $835c]
l_835a:
	CLR_XC_FLAGS                           	| [$835a: clc]
	rts                                    	| [$835b: rts]
l_835c:
	SET_XC_FLAGS                           	| [$835c: sec]
	rts                                    	| [$835d: rts]
l_835e:
	GET_ADDRESS	0x03f4                     	| [$835e: lda $03f4]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$8361: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_8367                             	| [$8363: bcc $8367]
	SET_XC_FLAGS                           	| [$8365: sec]
	rts                                    	| [$8366: rts]
l_8367:
	CLR_XC_FLAGS                           	| [$8367: clc]
	rts                                    	| [$8368: rts]

l_8369:
	GET_ADDRESS	0x03b4                     	| [$8369: lda $03b4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$836c: clc]
	add.b	#0x04,d0                        	| [$836d: adc #$04]
	GET_ADDRESS	0x03f4                     	| [$836f: cmp $03f4]
	cmp.b	(a0),d0                          	| [...]
	bmi	l_8376                             	| [$8372: bmi $8376]
	SET_XC_FLAGS                           	| [$8374: sec]
	rts                                    	| [$8375: rts]
l_8376:
	CLR_XC_FLAGS                           	| [$8376: clc]
	rts                                    	| [$8377: rts]

l_8378:
	GET_ADDRESS	player_direction_032b      	| [$8378: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x50,d0                         	| [$837b: cmp #$50]
	* bcc=>bcs (cmp above)
	jcs	l_838a                             	| [$837d: bcc $838a]
	cmp.b	#0xb0,d0                         	| [$837f: cmp #$b0]
	* bcc=>bcs (cmp above)
	jcs	l_8396                             	| [$8381: bcc $8396]
	cmp.b	#0xd0,d0                         	| [$8383: cmp #$d0]
	* bcc=>bcs (cmp above)
	jcs	l_8391                             	| [$8385: bcc $8391]
	jra	l_839b                             	| [$8387: jra $839b]
l_838a:
	cmp.b	#0x30,d0                         	| [$838a: cmp #$30]
	* bcs=>bcc
	jcc	l_8391                             	| [$838c: bcs $8391]
	jra	l_839b                             	| [$838e: jra $839b]
l_8391:
	clr.b	d0                               	| [$8391: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8393: sta $1b]
	rts                                    	| [$8395: rts]
l_8396:
	move.b	#0x01,d0                        	| [$8396: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8398: sta $1b]
	rts                                    	| [$839a: rts]
l_839b:
	move.b	#0x02,d0                        	| [$839b: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$839d: sta $1b]
	rts                                    	| [$839f: rts]
l_83a0:
	GET_ADDRESS	0x03bc                     	| [$83a0: lda $03bc, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_83c5                             	| [$83a3: beq $83c5]
	cmp.b	#0x01,d0                         	| [$83a5: cmp #$01]
	beq	l_83ac                             	| [$83a7: beq $83ac]
	jra	l_83c5                             	| [$83a9: jra $83c5]
l_83ac:
	move.b	#0x04,d2                        	| [$83ac: ldy #$04]
	GET_ADDRESS	0x00f1                     	| [$83ae: lda $00f1, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_83dc                             	| [$83b1: jne $83dc]
	GET_ADDRESS	0x00e3                     	| [$83b3: lda $00e3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xa0,d0                         	| [$83b6: cmp #$a0]
	* bcc=>bcs (cmp above)
	jcs	l_83bd                             	| [$83b8: bcc $83bd]
	jra	l_83dc                             	| [$83ba: jra $83dc]
l_83bd:
	GET_ADDRESS	0x02af                     	| [$83bd: lda $02af, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_83dc                             	| [$83c0: bpl $83dc]
	jra	l_83de                             	| [$83c2: jra $83de]
l_83c5:
	move.b	d1,d0                           	| [$83c5: txa]
	and.b	#0x02,d0                         	| [$83c6: and #$02]
	lsr.b	#1,d0                            	| [$83c8: lsr a]
	eor.b	#0x01,d0                         	| [$83c9: eor #$01]
	move.b	d0,d2                           	| [$83cb: tay]
	GET_ADDRESS	0x0051                     	| [$83cc: lda $0051, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$83cf: tay]
	GET_ADDRESS	0x030e                     	| [$83d0: lda $030e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_83dc                             	| [$83d3: bpl $83dc]
	GET_ADDRESS	0x00e3                     	| [$83d5: lda $00e3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x24,d0                         	| [$83d8: cmp #$24]
	* bcs=>bcc
	jcc	l_83de                             	| [$83da: bcs $83de]
l_83dc:
	SET_XC_FLAGS                           	| [$83dc: sec]
	rts                                    	| [$83dd: rts]
l_83de:
	CLR_XC_FLAGS                           	| [$83de: clc]
	rts                                    	| [$83df: rts]
l_83e0:
	move.b	#0x04,d2                        	| [$83e0: ldy #$04]
	GET_ADDRESS	0x00f1                     	| [$83e2: lda $00f1, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_83f8                             	| [$83e5: jne $83f8]
* checks if ball if in height range for proper serve
	GET_ADDRESS	0x00e3                     	| [$83e7: lda $00e3, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x64,d0                         	| [$83ea: cmp #$64]
	* bcc=>bcs (cmp above)
	jcs	l_83f1                             	| [$83ec: bcc $83f1]
	jra	l_83f8                             	| [$83ee: jra $83f8]
* ball is now high enough to be served (maybe too high!)
l_83f1:
	GET_ADDRESS	0x02af                     	| [$83f1: lda $02af, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_83f8                             	| [$83f4: bpl $83f8]
	CLR_XC_FLAGS                           	| [$83f6: clc]
	rts                                    	| [$83f7: rts]
l_83f8:
	SET_XC_FLAGS                           	| [$83f8: sec]
	rts                                    	| [$83f9: rts]
l_83fa:
	GET_ADDRESS	0x0388                     	| [$83fa: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x60,d0                         	| [$83fd: cmp #$60]
	beq	l_8408                             	| [$83ff: beq $8408]
	move.b	#0x30,d0                        	| [$8401: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8403: sta $1e]
	jra	l_840c                             	| [$8405: jra $840c]
l_8408:
	move.b	#0x60,d0                        	| [$8408: lda #$60]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$840a: sta $1e]
l_840c:
	GET_ADDRESS	objects_logical_y_array_b9 	| [$840c: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1e,d0 |  [$840e: cmp $1e]
	* bcs=>bcc
	jcc	l_841e                             	| [$8410: bcs $841e]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8412: lda $1e]
	SET_XC_FLAGS                           	| [$8414: sec]
	SBC_X	objects_logical_y_array_b9       	| [$8415: sbc objects_logical_y_array_b9, x]
	cmp.b	#0x03,d0                         	| [$8417: cmp #$03]
	* bcs=>bcc
	jcc	l_8427                             	| [$8419: bcs $8427]
	jra	l_8425                             	| [$841b: jra $8425]
l_841e:
	SET_XC_FLAGS                           	| [$841e: sec]
	SBC	0x1e                               	| [$841f: sbc $1e]
	cmp.b	#0x03,d0                         	| [$8421: cmp #$03]
	* bcs=>bcc
	jcc	l_8427                             	| [$8423: bcs $8427]
l_8425:
	CLR_XC_FLAGS                           	| [$8425: clc]
	rts                                    	| [$8426: rts]
l_8427:
	SET_XC_FLAGS                           	| [$8427: sec]
	rts                                    	| [$8428: rts]

l_8429:
	CLR_XC_FLAGS                           	| [$8429: clc]
	GET_ADDRESS	0x03b8                     	| [$842a: lda $03b8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_8436                             	| [$842d: beq $8436]
	GET_ADDRESS	0x030a                     	| [$842f: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x01,d0                         	| [$8432: and #$01]
	jne	l_8437                             	| [$8434: jne $8437]
l_8436:
	SET_XC_FLAGS                           	| [$8436: sec]
l_8437:
	rts                                    	| [$8437: rts]

l_843e:
	jne	l_8457                             	| [$843e: jne $8457]
	GET_ADDRESS	0x03f0                     	| [$8440: lda $03f0]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8443: sta $1b]
	GET_ADDRESS	0x03ef                     	| [$8445: lda $03ef]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8448: sta $1c]
	GET_ADDRESS	0x03f2                     	| [$844a: lda $03f2]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$844d: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x03f1                     	| [$844f: lda $03f1]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8452: sta $1e]
	jra	l_846b                             	| [$8454: jra $846b]
l_8457:
	GET_ADDRESS	0x03eb                     	| [$8457: lda $03eb]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$845a: sta $1b]
	GET_ADDRESS	0x03ea                     	| [$845c: lda $03ea]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$845f: sta $1c]
	GET_ADDRESS	0x03ed                     	| [$8461: lda $03ed]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8464: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x03ec                     	| [$8466: lda $03ec]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8469: sta $1e]
l_846b:
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$846b: lda base_screen_pointer_list_001d]
	jne	l_8491                             	| [$846d: jne $8491]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$846f: lda $1e]
	cmp.b	#0x90,d0                         	| [$8471: cmp #$90]
	* bcs=>bcc
	jcc	l_8491                             	| [$8473: bcs $8491]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8475: lda $1b]
	cmp.b	#0x01,d0                         	| [$8477: cmp #$01]
	beq	l_8480                             	| [$8479: beq $8480]
	* bcs=>bcc (cmp higher above)
	jcc	l_8491                             	| [$847b: bcs $8491]
	jra	l_8489                             	| [$847d: jra $8489]
l_8480:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8480: lda $1c]
	cmp.b	#0xe8,d0                         	| [$8482: cmp #$e8]
	* bcs=>bcc
	jcc	l_8491                             	| [$8484: bcs $8491]
	jra	l_848f                             	| [$8486: jra $848f]
l_8489:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8489: lda $1c]
	cmp.b	#0x18,d0                         	| [$848b: cmp #$18]
	* bcc=>bcs (cmp above)
	jcs	l_8491                             	| [$848d: bcc $8491]
l_848f:
	SET_XC_FLAGS                           	| [$848f: sec]
	rts                                    	| [$8490: rts]
l_8491:
	CLR_XC_FLAGS                           	| [$8491: clc]
	rts                                    	| [$8492: rts]
l_8493:
	GET_ADDRESS	0x03f0                     	| [$8493: lda $03f0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$8496: cmp #$01]
	beq	l_849f                             	| [$8498: beq $849f]
	* bcs=>bcc (cmp higher above)
	jcc	l_84be                             	| [$849a: bcs $84be]
	jra	l_84a9                             	| [$849c: jra $84a9]
l_849f:
	GET_ADDRESS	0x03ef                     	| [$849f: lda $03ef]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xb4,d0                         	| [$84a2: cmp #$b4]
	* bcs=>bcc
	jcc	l_84be                             	| [$84a4: bcs $84be]
	jra	l_84b0                             	| [$84a6: jra $84b0]
l_84a9:
	GET_ADDRESS	0x03ef                     	| [$84a9: lda $03ef]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x4d,d0                         	| [$84ac: cmp #$4d]
	* bcc=>bcs (cmp above)
	jcs	l_84b5                             	| [$84ae: bcc $84b5]
l_84b0:
	clr.b	d0                               	| [$84b0: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$84b2: sta $1b]
	rts                                    	| [$84b4: rts]
l_84b5:
	st.b	d0                        	| [$84b5: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$84b7: sta $1b]
	clr.b	d0                               	| [$84b9: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$84bb: sta $1c]
	rts                                    	| [$84bd: rts]
l_84be:
	st.b	d0                        	| [$84be: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$84c0: sta $1b]
	move.b	#0x01,d0                        	| [$84c2: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$84c4: sta $1c]
	rts                                    	| [$84c6: rts]
l_84c7:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d1 |  [$84c7: stx $1b]
	move.b	#0x0d,d0                        	| [$84c9: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$84cb: sta $1c]
	move.b	d0,d2                           	| [$84cd: tay]
	clr.b	d0                               	| [$84ce: lda #$00]
	GET_ADDRESS	0x00f1                     	| [$84d0: sta $00f1, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x00e3                     	| [$84d3: sta $00e3, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0384                     	| [$84d6: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$84d9: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0380                     	| [$84dc: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$84df: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x038c                     	| [$84e2: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00c7                     	| [$84e5: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0388                     	| [$84e8: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$84eb: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	compare_player_positions_6923     	| [$84ee: jsr compare_player_positions_6923]
	GET_ADDRESS	player_direction_032b      	| [$84f1: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$84f4: clc]
	add.b	#0x10,d0                        	| [$84f5: adc #$10]
	and.b	#0xe0,d0                         	| [$84f7: and #$e0]
                                         | [$84f9: lsr a]
                                         | [$84fa: lsr a]
                                         | [$84fb: lsr a]
	lsr.b	#4,d0                            	| [$84fc: lsr a]
	move.b	d0,d2                           	| [$84fd: tay]
	GET_ADDRESS	0x9392                     	| [$84fe: lda $9392, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$8501: sta $01]
	GET_ADDRESS	player_direction_032b      	| [$8503: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$8506: sta $00]
	jbsr	l_b67c                            	| [$8508: jsr $b67c]
	jbsr	l_905e                            	| [$850b: jsr $905e]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$850e: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$8510: sta screen_attribute_dest_address_16]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$8512: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$8514: sta $17]
	move.b	#0x08,d2                        	| [$8516: ldy #$08]
	GET_ADDRESS	0x94e5                     	| [$8518: lda $94e5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$851b: sta screen_source_pointer_0010]
	GET_ADDRESS	0x94e6                     	| [$851d: lda $94e6, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$8520: sta $11]
	GET_ADDRESS	0x03b0                     	| [$8522: lda $03b0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$8525: sta multipurpose_12]
	clr.b	d0                               	| [$8527: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$8529: sta multipurpose_13]
	jbsr	l_d129                            	| [$852b: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$852e: lda $1b]
	SET_XC_FLAGS                           	| [$8530: sec]
	SBC	0x15                               	| [$8531: sbc $15]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$8533: sta $11]
	clr.b	d0                               	| [$8535: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$8537: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$8539: lda screen_attribute_dest_address_16]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$853b: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,0x17,d0 |  [$853d: lda $17]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$853f: sta multipurpose_13]
	jbsr	l_d02e                            	| [$8541: jsr $d02e]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$8544: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8546: sta $1b]
	rts                                    	| [$8548: rts]
l_8549:
	OP_W_ON_ZP_ADDRESS	move,0x23,d0 |  [$8549: sta $23]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d1 |  [$854b: stx $1b]
	move.b	#0x0d,d0                        	| [$854d: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$854f: sta $1c]
	move.b	d0,d2                           	| [$8551: tay]
	clr.b	d0                               	| [$8552: lda #$00]
	GET_ADDRESS	0x00f1                     	| [$8554: sta $00f1, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x00e3                     	| [$8557: sta $00e3, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0384                     	| [$855a: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$855d: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0380                     	| [$8560: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8563: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x038c                     	| [$8566: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00c7                     	| [$8569: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0388                     	| [$856c: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$856f: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	compare_player_positions_6923     	| [$8572: jsr compare_player_positions_6923]
	OP_R_ON_ZP_ADDRESS	move,0x23,d0 |  [$8575: lda $23]
	jne	l_858d                             	| [$8577: jne $858d]
	GET_ADDRESS	player_direction_032b      	| [$8579: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$857c: clc]
	add.b	#0x10,d0                        	| [$857d: adc #$10]
	and.b	#0xe0,d0                         	| [$857f: and #$e0]
                                         | [$8581: lsr a]
                                         | [$8582: lsr a]
                                         | [$8583: lsr a]
                                         | [$8584: lsr a]
	lsr.b	#5,d0                            	| [$8585: lsr a]
	move.b	d0,d2                           	| [$8586: tay]
	GET_ADDRESS	0x92e2                     	| [$8587: lda $92e2, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jra	l_859d                             	| [$858a: jra $859d]
l_858d:
	GET_ADDRESS	player_direction_032b      	| [$858d: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8590: clc]
	add.b	#0x10,d0                        	| [$8591: adc #$10]
	and.b	#0xe0,d0                         	| [$8593: and #$e0]
                                         | [$8595: lsr a]
                                         | [$8596: lsr a]
                                         | [$8597: lsr a]
	lsr.b	#4,d0                            	| [$8598: lsr a]
	move.b	d0,d2                           	| [$8599: tay]
	GET_ADDRESS	0x9392                     	| [$859a: lda $9392, y]
	move.b	(a0,d2.w),d0                    	| [...]
l_859d:
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$859d: sta $01]
	GET_ADDRESS	player_direction_032b      	| [$859f: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$85a2: sta $00]
	jbsr	l_b67c                            	| [$85a4: jsr $b67c]
	jbsr	l_905e                            	| [$85a7: jsr $905e]
	GET_ADDRESS	player_direction_032b      	| [$85aa: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x20,d0                         	| [$85ad: cmp #$20]
	* bcc=>bcs (cmp above)
	jcs	l_85bd                             	| [$85af: bcc $85bd]
	cmp.b	#0x60,d0                         	| [$85b1: cmp #$60]
	* bcc=>bcs (cmp above)
	jcs	l_85c8                             	| [$85b3: bcc $85c8]
	cmp.b	#0xa0,d0                         	| [$85b5: cmp #$a0]
	* bcc=>bcs (cmp above)
	jcs	l_85bd                             	| [$85b7: bcc $85bd]
	cmp.b	#0xe0,d0                         	| [$85b9: cmp #$e0]
	* bcc=>bcs (cmp above)
	jcs	l_85c8                             	| [$85bb: bcc $85c8]
l_85bd:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$85bd: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$85bf: sta $11]
	clr.b	d0                               	| [$85c1: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$85c3: sta screen_source_pointer_0010]
	jra	l_85d8                             	| [$85c5: jra $85d8]
l_85c8:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$85c8: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$85ca: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$85cc: lda $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$85ce: sta multipurpose_13]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$85d0: lda $1b]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$85d2: sta $11]
	clr.b	d0                               	| [$85d4: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$85d6: sta screen_source_pointer_0010]
l_85d8:
	jbsr	l_d02e                            	| [$85d8: jsr $d02e]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$85db: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$85dd: sta $1b]
	rts                                    	| [$85df: rts]
l_85e0:
	move.b	d1,d0                           	| [$85e0: txa]
	eor.b	#0x01,d0                         	| [$85e1: eor #$01]
	move.b	d0,d2                           	| [$85e3: tay]
	GET_ADDRESS	0x0316                     	| [$85e4: lda $0316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$85e7: and #$7f]
	cmp.b	#0x02,d0                         	| [$85e9: cmp #$02]
	jne	l_8613                             	| [$85eb: jne $8613]
	GET_ADDRESS	0x03e9                     	| [$85ed: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$85f0: and #$0f]
	cmp.b	#0x01,d0                         	| [$85f2: cmp #$01]
	jne	l_85f9                             	| [$85f4: jne $85f9]
	jra	l_866d                             	| [$85f6: jra $866d]
l_85f9:
	GET_ADDRESS	0x0316                     	| [$85f9: lda $0316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_8613                             	| [$85fc: bpl $8613]
	GET_ADDRESS	0x0388                     	| [$85fe: lda $0388, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x60,d0                         	| [$8601: cmp #$60]
	beq	l_860c                             	| [$8603: beq $860c]
	move.b	#0x60,d0                        	| [$8605: lda #$60]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8607: sta base_screen_pointer_list_001d]
	jra	l_8625                             	| [$8609: jra $8625]
l_860c:
	move.b	#0x30,d0                        	| [$860c: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$860e: sta base_screen_pointer_list_001d]
	jra	l_8625                             	| [$8610: jra $8625]
l_8613:
	GET_ADDRESS	0x00b9                     	| [$8613: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$8616: cmp #$48]
	* bcs=>bcc
	jcc	l_8621                             	| [$8618: bcs $8621]
	move.b	#0x60,d0                        	| [$861a: lda #$60]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$861c: sta base_screen_pointer_list_001d]
	jra	l_8625                             	| [$861e: jra $8625]
l_8621:
	move.b	#0x30,d0                        	| [$8621: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8623: sta base_screen_pointer_list_001d]
l_8625:
	GET_ADDRESS	0x03e9                     	| [$8625: lda $03e9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8628: sta $1e]
	GET_ADDRESS	0x0373                     	| [$862a: eor $0373, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	and.b	#0xf0,d0                         	| [$862d: and #$f0]
	jne	l_8636                             	| [$862f: jne $8636]
	move.b	#0x20,d2                        	| [$8631: ldy #$20]
	jra	l_8646                             	| [$8633: jra $8646]
l_8636:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8636: lda $1e]
	and.b	#0x0f,d0                         	| [$8638: and #$0f]
	cmp.b	#0x09,d0                         	| [$863a: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_8643                             	| [$863c: bcc $8643]
	move.b	#0x1c,d2                        	| [$863e: ldy #$1c]
	jra	l_8646                             	| [$8640: jra $8646]
l_8643:
                                         | [$8643: asl a]
	asl.b	#2,d0                            	| [$8644: asl a]
	move.b	d0,d2                           	| [$8645: tay]
l_8646:
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8646: lda base_screen_pointer_list_001d]
	cmp.b	#0x60,d0                         	| [$8648: cmp #$60]
	beq	l_864e                             	| [$864a: beq $864e]
                                         | [$864c: iny]
	addq.b	#2,d2                           	| [$864d: iny]
l_864e:
	GET_ADDRESS	0x0373                     	| [$864e: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$8651: and #$f0]
	jne	l_8662                             	| [$8653: jne $8662]
	GET_ADDRESS	0x86ac                     	| [$8655: lda $86ac, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8658: sta $1b]
	GET_ADDRESS	0x86ad                     	| [$865a: lda $86ad, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$865d: sta $1c]
	jra	l_866c                             	| [$865f: jra $866c]
l_8662:
	GET_ADDRESS	0x8680                     	| [$8662: lda $8680, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8665: sta $1b]
	GET_ADDRESS	0x8681                     	| [$8667: lda $8681, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$866a: sta $1c]
l_866c:
	rts                                    	| [$866c: rts]
l_866d:
	move.b	#0x48,d0                        	| [$866d: lda #$48]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$866f: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x0316                     	| [$8671: lda $0316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_867b                             	| [$8674: bpl $867b]
	move.b	#0x06,d2                        	| [$8676: ldy #$06]
	jra	l_864e                             	| [$8678: jra $864e]
l_867b:
	move.b	#0x04,d2                        	| [$867b: ldy #$04]
	jra	l_864e                             	| [$867d: jra $864e]

	move.b	d0,d2                           	| [$86d7: tay]
l_86d8:
	clr.b	d2                               	| [$86d8: ldy #$00]
	move.b	d1,d0                           	| [$86da: txa]
	and.b	#0x02,d0                         	| [$86db: and #$02]
	beq	l_86e0                             	| [$86dd: beq $86e0]
	addq.b	#1,d2                           	| [$86df: iny]
l_86e0:
	GET_ADDRESS	0x0054                     	| [$86e0: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$86e3: tay]
	GET_ADDRESS	0x8802                     	| [$86e4: lda $8802, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$86e7: cmp #$ff]
l_86e9:
	beq	l_86e9                             	| [$86e9: beq $86e9]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$86eb: sta $1e]
	move.b	#0x0d,d2                        	| [$86ed: ldy #$0d]
	GET_ADDRESS	0x03eb                     	| [$86ef: lda $03eb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$86f2: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03ea                     	| [$86f5: lda $03ea]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$86f8: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03ed                     	| [$86fb: lda $03ed]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x00c7                     	| [$86fe: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x03ec                     	| [$8701: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x00b9                     	| [$8704: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	#0x0d,d0                        	| [$8707: lda #$0d]
	jbsr	l_b71f                            	| [$8709: jsr $b71f]
	and.b	#0x0f,d0                         	| [$870c: and #$0f]
	asl.b	#1,d0                            	| [$870e: asl a]
	move.b	d0,d2                           	| [$870f: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_871d            	| [$8710: lda jump_table_871d, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8713: sta $1b]
	GET_ADDRESS	0x871e                     	| [$8715: lda $871e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8718: sta $1c]
	rts |  [$871a: jra ($001b)] [indirect_jump]

l_873d:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$873d: lda $1e]
	asl.b	#1,d0                            	| [$873f: asl a]
	GET_ADDRESS	0x1e                       	| [$8740: adc $1e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$8742: tay]
	move.b	d1,d0                           	| [$8743: txa]
	and.b	#0x02,d0                         	| [$8744: and #$02]
	beq	l_875a                             	| [$8746: beq $875a]
	GET_ADDRESS	0x881b                     	| [$8748: lda $881b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$874b: sta $1b]
	GET_ADDRESS	0x881c                     	| [$874d: lda $881c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8750: sta $1c]
	GET_ADDRESS	0x881d                     	| [$8752: lda $881d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8755: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$8757: jra $8801]
l_875a:
	GET_ADDRESS	0x8824                     	| [$875a: lda $8824, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$875d: sta $1b]
	GET_ADDRESS	0x8825                     	| [$875f: lda $8825, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8762: sta $1c]
	GET_ADDRESS	0x8826                     	| [$8764: lda $8826, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8767: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$8769: jra $8801]
l_876c:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$876c: lda $1e]
	asl.b	#1,d0                            	| [$876e: asl a]
	GET_ADDRESS	0x1e                       	| [$876f: adc $1e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$8771: tay]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8772: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$8774: cmp #$48]
	* bcs=>bcc
	jcc	l_877d                             	| [$8776: bcs $877d]
	move.b	d2,d0                           	| [$8778: tya]
	                           	| [$8779: clc]
	add.b	#0x09,d0                        	| [$877a: adc #$09]
	move.b	d0,d2                           	| [$877c: tay]
l_877d:
	move.b	d1,d0                           	| [$877d: txa]
	and.b	#0x02,d0                         	| [$877e: and #$02]
	beq	l_8794                             	| [$8780: beq $8794]
	GET_ADDRESS	0x882d                     	| [$8782: lda $882d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8785: sta $1b]
	GET_ADDRESS	0x882e                     	| [$8787: lda $882e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$878a: sta $1c]
	GET_ADDRESS	0x882f                     	| [$878c: lda $882f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$878f: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$8791: jra $8801]
l_8794:
	GET_ADDRESS	0x883f                     	| [$8794: lda $883f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8797: sta $1b]
	GET_ADDRESS	0x8840                     	| [$8799: lda $8840, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$879c: sta $1c]
	GET_ADDRESS	0x8841                     	| [$879e: lda $8841, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$87a1: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$87a3: jra $8801]
l_87a6:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$87a6: lda $1e]
	asl.b	#1,d0                            	| [$87a8: asl a]
	GET_ADDRESS	0x1e                       	| [$87a9: adc $1e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$87ab: tay]
	move.b	d1,d0                           	| [$87ac: txa]
	and.b	#0x02,d0                         	| [$87ad: and #$02]
	beq	l_87c3                             	| [$87af: beq $87c3]
	GET_ADDRESS	0x8851                     	| [$87b1: lda $8851, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$87b4: sta $1b]
	GET_ADDRESS	0x8852                     	| [$87b6: lda $8852, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$87b9: sta $1c]
	GET_ADDRESS	0x8853                     	| [$87bb: lda $8853, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$87be: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$87c0: jra $8801]
l_87c3:
	GET_ADDRESS	0x885a                     	| [$87c3: lda $885a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$87c6: sta $1b]
	GET_ADDRESS	0x885b                     	| [$87c8: lda $885b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$87cb: sta $1c]
	GET_ADDRESS	0x885c                     	| [$87cd: lda $885c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$87d0: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$87d2: jra $8801]
l_87d5:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$87d5: lda $1e]
	asl.b	#1,d0                            	| [$87d7: asl a]
	GET_ADDRESS	0x1e                       	| [$87d8: adc $1e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$87da: tay]
	move.b	d1,d0                           	| [$87db: txa]
	and.b	#0x02,d0                         	| [$87dc: and #$02]
	beq	l_87f2                             	| [$87de: beq $87f2]
	GET_ADDRESS	0x8863                     	| [$87e0: lda $8863, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$87e3: sta $1b]
	GET_ADDRESS	0x8864                     	| [$87e5: lda $8864, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$87e8: sta $1c]
	GET_ADDRESS	0x8865                     	| [$87ea: lda $8865, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$87ed: sta base_screen_pointer_list_001d]
	jra	l_8801                             	| [$87ef: jra $8801]
l_87f2:
	GET_ADDRESS	0x886c                     	| [$87f2: lda $886c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$87f5: sta $1b]
	GET_ADDRESS	0x886d                     	| [$87f7: lda $886d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$87fa: sta $1c]
	GET_ADDRESS	0x886e                     	| [$87fc: lda $886e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$87ff: sta base_screen_pointer_list_001d]
l_8801:
	rts                                    	| [$8801: rts]

l_8875:
	move.b	d1,d0                           	| [$8875: txa]
	and.b	#0x02,d0                         	| [$8876: and #$02]
	lsr.b	#1,d0                            	| [$8878: lsr a]
	eor.b	#0x01,d0                         	| [$8879: eor #$01]
	move.b	d0,d2                           	| [$887b: tay]
	GET_ADDRESS	0x0051                     	| [$887c: lda $0051, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$887f: tay]
	GET_ADDRESS	0x00b9                     	| [$8880: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0407                     	| [$8883: sta $0407]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x78,d0                        	| [$8886: lda #$78]
	SET_XC_FLAGS                           	| [$8888: sec]
	SBC	0x0407                             	| [$8889: sbc $0407]
                                         | [$888c: lsr a]
                                         | [$888d: lsr a]
                                         | [$888e: lsr a]
	lsr.b	#4,d0                            	| [$888f: lsr a]
	asl.b	#1,d0                            	| [$8890: asl a]
	move.b	d0,d2                           	| [$8891: tay]
	move.b	d1,d0                           	| [$8892: txa]
	and.b	#0x02,d0                         	| [$8893: and #$02]
	beq	l_88a9                             	| [$8895: beq $88a9]
	GET_ADDRESS	0x88b9                     	| [$8897: lda $88b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$889a: clc]
	add.b	#0x14,d0                        	| [$889b: adc #$14]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$889d: sta $1c]
	GET_ADDRESS	0x88ba                     	| [$889f: lda $88ba, y]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$88a2: adc #$00]
	addx.b	d4,d0                        	| [$88a2: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$88a4: sta $1b]
	jra	l_88b8                             	| [$88a6: jra $88b8]
l_88a9:
	GET_ADDRESS	0x88b9                     	| [$88a9: lda $88b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS |  [$88ac: sec]
	SBC_IMM	0x14	| [$88ad: sbc #$14] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$88af: sta $1c]
	GET_ADDRESS	0x88ba                     	| [$88b1: lda $88ba, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_IMM	0x00                           	| [$88b4: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$88b6: sta $1b]
l_88b8:
	rts                                    	| [$88b8: rts]

l_88c5:
	                           	| [$88c5: sec]
	sub.b	#0x48,d0	| [$88c6: sbc #$48]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$88c8: sta $1c]
	move.b	#0x04,d2                        	| [$88ca: ldy #$04]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$88cc: lda $2a]
	beq	l_88d5                             	| [$88ce: beq $88d5]
	move.b	d2,d0                           	| [$88d0: tya]
	                           	| [$88d1: clc]
	add.b	#0x08,d0                        	| [$88d2: adc #$08]
	move.b	d0,d2                           	| [$88d4: tay]
l_88d5:
	GET_ADDRESS	0x94e5                     	| [$88d5: lda $94e5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$88d8: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$88da: sta multipurpose_12]
	GET_ADDRESS	0x94e6                     	| [$88dc: lda $94e6, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$88df: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$88e1: sta multipurpose_13]
                                         | [$88e3: iny]
	addq.b	#2,d2                           	| [$88e4: iny]
	GET_ADDRESS	0x94e5                     	| [$88e5: lda $94e5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$88e8: sta multipurpose_14]
	GET_ADDRESS	0x94e6                     	| [$88ea: lda $94e6, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$88ed: sta $15]
	clr.b	d0                               	| [$88ef: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$88f1: sta $1b]
l_88f3:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$88f3: inc $1b]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$88f5: lda $11]
	OP_R_ON_ZP_ADDRESS	cmp,0x1c,d0 |  [$88f7: cmp $1c]
	* bcs=>bcc
	jcc	l_8918                             	| [$88f9: bcs $8918]
	SET_XC_FLAGS                           	| [$88fb: sec]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$88fc: lda multipurpose_12]
	SBC	multipurpose_14                    	| [$88fe: sbc multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$8900: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$8902: lda multipurpose_13]
	SBC	0x15                               	| [$8904: sbc $15]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$8906: sta multipurpose_13]
	                           	| [$8908: clc]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$8909: lda screen_source_pointer_0010]
	GET_ADDRESS	multipurpose_12            	| [$890b: adc multipurpose_12]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$890d: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$890f: lda $11]
	GET_ADDRESS	multipurpose_13            	| [$8911: adc multipurpose_13]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$8913: sta $11]
	jra	l_88f3                             	| [$8915: jra $88f3]
l_8918:
	rts                                    	| [$8918: rts]
l_8919:
	move.b	d1,d0                           	| [$8919: txa]
	eor.b	#0x01,d0                         	| [$891a: eor #$01]
	move.b	d0,d2                           	| [$891c: tay]
	GET_ADDRESS	0x0373                     	| [$891d: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf0,d0                         	| [$8920: and #$f0]
	jne	l_892e                             	| [$8922: jne $892e]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8924: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	 	| [$8926: cmp objects_logical_x_array_8f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_8942                             	| [$8929: bcc $8942]
	jra	l_8935                             	| [$892b: jra $8935]
l_892e:
	GET_ADDRESS	objects_logical_x_array_8f 	| [$892e: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	 	| [$8930: cmp objects_logical_x_array_8f, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_8942                             	| [$8933: bcs $8942]
l_8935:
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8935: sta $1c]
	GET_ADDRESS	objects_side_array_9d      	| [$8937: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8939: sta $1b]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$893b: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$893d: sta base_screen_pointer_list_001d]
	jra	l_8978                             	| [$893f: jra $8978]
l_8942:
	GET_ADDRESS	objects_side_array_9d      	| [$8942: lda objects_side_array_9d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8945: sta $1b]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8947: lda objects_logical_x_array_8f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$894a: sta $1c]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$894c: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$894e: cmp $00b9, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_8966                             	| [$8951: bcs $8966]
	                     	| [$8953: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$8956: sec]
	sub.b	#0x18,d0	| [$8957: sbc #$18]
	cmp.b	#0x18,d0                         	| [$8959: cmp #$18]
	* bcs=>bcc
	jcc	l_8976                             	| [$895b: bcs $8976]
	                     	| [$895d: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$8960: clc]
	add.b	#0x18,d0                        	| [$8961: adc #$18]
	jra	l_8976                             	| [$8963: jra $8976]
l_8966:
	GET_ADDRESS	0x00b9                     	| [$8966: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$8969: clc]
	add.b	#0x18,d0                        	| [$896a: adc #$18]
	cmp.b	#0x78,d0                         	| [$896c: cmp #$78]
	* bcc=>bcs (cmp above)
	jcs	l_8976                             	| [$896e: bcc $8976]
	GET_ADDRESS	0x00b9                     	| [$8970: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$8973: sec]
	sub.b	#0x18,d0	| [$8974: sbc #$18]
l_8976:
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8976: sta base_screen_pointer_list_001d]
l_8978:
	move.b	#0x80,d0                        	| [$8978: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$897a: sta $1e]
	rts                                    	| [$897c: rts]
l_897d:
	GET_ADDRESS	0x0373                     	| [$897d: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8980: and #$0f]
	cmp.b	#0x09,d0                         	| [$8982: cmp #$09]
	* bcs=>bcc
	jcc	l_89a5                             	| [$8984: bcs $89a5]
	move.b	d0,d2                           	| [$8986: tay]
	GET_ADDRESS	0x89c2                     	| [$8987: lda $89c2, y]
	move.b	(a0,d2.w),d0                    	| [...]
                                         | [$898a: asl a]
	asl.b	#2,d0                            	| [$898b: asl a]
	move.b	d0,d2                           	| [$898c: tay]
	move.b	d1,d0                           	| [$898d: txa]
	and.b	#0x02,d0                         	| [$898e: and #$02]
	beq	l_8994                             	| [$8990: beq $8994]
                                         | [$8992: iny]
	addq.b	#2,d2                           	| [$8993: iny]
l_8994:
	GET_ADDRESS	0x89cb                     	| [$8994: lda $89cb, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8997: sta $1b]
	GET_ADDRESS	0x89cc                     	| [$8999: lda $89cc, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$899c: sta $1c]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$899e: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$89a0: sta base_screen_pointer_list_001d]
	jra	l_89c1                             	| [$89a2: jra $89c1]
l_89a5:
	move.b	d1,d0                           	| [$89a5: txa]
	and.b	#0x02,d0                         	| [$89a6: and #$02]
	beq	l_89b5                             	| [$89a8: beq $89b5]
	move.b	#0x01,d0                        	| [$89aa: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$89ac: sta $1b]
	move.b	#0x90,d0                        	| [$89ae: lda #$90]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$89b0: sta $1c]
	jra	l_89bd                             	| [$89b2: jra $89bd]
l_89b5:
	clr.b	d0                               	| [$89b5: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$89b7: sta $1b]
	move.b	#0x70,d0                        	| [$89b9: lda #$70]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$89bb: sta $1c]
l_89bd:
	move.b	#0x48,d0                        	| [$89bd: lda #$48]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$89bf: sta base_screen_pointer_list_001d]
l_89c1:
	rts                                    	| [$89c1: rts]

l_89d7:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d1 |  [$89d7: stx $1b]
	move.b	d1,d0                           	| [$89d9: txa]
	movem.w	d0,-(sp)                       	| [$89da: pha]
	move.b	#0x0d,d0                        	| [$89db: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$89dd: sta $1c]
	move.b	d0,d1                           	| [$89df: tax]
	GET_ADDRESS	0x03eb                     	| [$89e0: lda $03eb]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$89e3: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ea                     	| [$89e5: lda $03ea]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$89e8: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ed                     	| [$89ea: lda $03ed]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xc7                       	| [$89ed: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ec                     	| [$89ef: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$89f2: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$89f4: pla]
	move.b	d0,d1                           	| [$89f5: tax]
	jbsr	compare_player_positions_6923     	| [$89f6: jsr compare_player_positions_6923]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$89f9: lda $1c]
	cmp.b	#0x18,d0                         	| [$89fb: cmp #$18]
	* bcs=>bcc
	jcc	l_8a2f                             	| [$89fd: bcs $8a2f]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$89ff: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x38,d0                         	| [$8a01: cmp #$38]
	* bcc=>bcs (cmp above)
	jcs	l_8a11                             	| [$8a03: bcc $8a11]
	cmp.b	#0x58,d0                         	| [$8a05: cmp #$58]
	* bcc=>bcs (cmp above)
	jcs	l_8a19                             	| [$8a07: bcc $8a19]
	                           	| [$8a09: sec]
	sub.b	#0x30,d0	| [$8a0a: sbc #$30]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8a0c: sta base_screen_pointer_list_001d]
	jra	l_8a33                             	| [$8a0e: jra $8a33]
l_8a11:
	                           	| [$8a11: clc]
	add.b	#0x30,d0                        	| [$8a12: adc #$30]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8a14: sta base_screen_pointer_list_001d]
	jra	l_8a33                             	| [$8a16: jra $8a33]
l_8a19:
	GET_ADDRESS	0x03ec                     	| [$8a19: cmp $03ec]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	jcc	l_8a25                             	| [$8a1c: bcs $8a25]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8a1e: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8a20: sec]
	sub.b	#0x10,d0	| [$8a21: sbc #$10]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8a23: sta base_screen_pointer_list_001d]
l_8a25:
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8a25: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8a27: clc]
	add.b	#0x10,d0                        	| [$8a28: adc #$10]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8a2a: sta base_screen_pointer_list_001d]
	jra	l_8a33                             	| [$8a2c: jra $8a33]
l_8a2f:
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8a2f: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8a31: sta base_screen_pointer_list_001d]
l_8a33:
	GET_ADDRESS	0x0373                     	| [$8a33: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8a36: and #$0f]
	cmp.b	#0x04,d0                         	| [$8a38: cmp #$04]
	* bcs=>bcc
	jcc	l_8a57                             	| [$8a3a: bcs $8a57]
	move.b	d1,d0                           	| [$8a3c: txa]
	and.b	#0x02,d0                         	| [$8a3d: and #$02]
	beq	l_8a4b                             	| [$8a3f: beq $8a4b]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8a41: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8a43: clc]
	add.b	#0x18,d0                        	| [$8a44: adc #$18]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8a46: sta $1c]
	jra	l_8a52                             	| [$8a48: jra $8a52]
l_8a4b:
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8a4b: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8a4d: sec]
	sub.b	#0x18,d0	| [$8a4e: sbc #$18]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8a50: sta $1c]
l_8a52:
	GET_ADDRESS	objects_side_array_9d      	| [$8a52: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8a54: sta $1b]
	rts                                    	| [$8a56: rts]
l_8a57:
	move.b	d1,d0                           	| [$8a57: txa]
	and.b	#0x02,d0                         	| [$8a58: and #$02]
	beq	l_8a63                             	| [$8a5a: beq $8a63]
	move.b	#0x40,d0                        	| [$8a5c: lda #$40]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8a5e: sta $1c]
	jra	l_8a52                             	| [$8a60: jra $8a52]
l_8a63:
	move.b	#0xc0,d0                        	| [$8a63: lda #$c0]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8a65: sta $1c]
	jra	l_8a52                             	| [$8a67: jra $8a52]
l_8a6a:
	move.b	#0x10,d0                        	| [$8a6a: lda #$10]
	OP_W_ON_ZP_ADDRESS	move,0x23,d0 |  [$8a6c: sta $23]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$8a6e: lda current_level_38]
	and.b	#0x0f,d0                         	| [$8a70: and #$0f]
	jne	l_8a86                             	| [$8a72: jne $8a86]
	GET_ADDRESS	0x03e0                     	| [$8a74: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$8a77: cmp #$0a]
	beq	l_8a82                             	| [$8a79: beq $8a82]
	cmp.b	#0x0b,d0                         	| [$8a7b: cmp #$0b]
	beq	l_8a82                             	| [$8a7d: beq $8a82]
	jra	l_8a86                             	| [$8a7f: jra $8a86]
l_8a82:
	move.b	#0x20,d0                        	| [$8a82: lda #$20]
	OP_W_ON_ZP_ADDRESS	move,0x23,d0 |  [$8a84: sta $23]
l_8a86:
	clr.b	d0                               	| [$8a86: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8a88: sta $2a]
	GET_ADDRESS	0x039c                     	| [$8a8a: lda $039c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_8af0                             	| [$8a8d: jne $8af0]
	GET_ADDRESS	0x0398                     	| [$8a8f: lda $0398, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x50,d0                         	| [$8a92: cmp #$50]
	* bcs=>bcc
	jcc	l_8af0                             	| [$8a94: bcs $8af0]
	cmp.b	#0x30,d0                         	| [$8a96: cmp #$30]
	* bcs=>bcc
	jcc	l_8a9c                             	| [$8a98: bcs $8a9c]
	OP_W_ON_ZP_ADDRESS	addq,0x2a,#1 |  [$8a9a: inc $2a]
l_8a9c:
	GET_ADDRESS	0x0394                     	| [$8a9c: lda $0394, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_8af0                             	| [$8a9f: jne $8af0]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8aa1: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0390                     	| [$8aa3: cmp $0390, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_8ab9                             	| [$8aa6: bcs $8ab9]
	                    	| [$8aa8: lda $0390, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$8aab: sec]
	SBC_X	objects_logical_y_array_b9       	| [$8aac: sbc objects_logical_y_array_b9, x]
	cmp.b	#0x06,d0                         	| [$8aae: cmp #$06]
	* bcc=>bcs (cmp above)
	jcs	l_8ad3                             	| [$8ab0: bcc $8ad3]
	OP_R_ON_ZP_ADDRESS	cmp,0x23,d0 |  [$8ab2: cmp $23]
	* bcs=>bcc
	jcc	l_8af0                             	| [$8ab4: bcs $8af0]
	jra	l_8ac8                             	| [$8ab6: jra $8ac8]
l_8ab9:
	SET_XC_FLAGS                           	| [$8ab9: sec]
	SBC_X	0x0390                           	| [$8aba: sbc $0390, x]
	cmp.b	#0x06,d0                         	| [$8abd: cmp #$06]
	* bcc=>bcs (cmp above)
	jcs	l_8ad3                             	| [$8abf: bcc $8ad3]
	OP_R_ON_ZP_ADDRESS	cmp,0x23,d0 |  [$8ac1: cmp $23]
	* bcs=>bcc
	jcc	l_8af0                             	| [$8ac3: bcs $8af0]
	jra	l_8ae5                             	| [$8ac5: jra $8ae5]
l_8ac8:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8ac8: lda $2a]
	beq	l_8ade                             	| [$8aca: beq $8ade]
	move.b	#0x03,d0                        	| [$8acc: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8ace: sta $1b]
	jra	l_8af4                             	| [$8ad0: jra $8af4]
l_8ad3:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8ad3: lda $2a]
	beq	l_8ade                             	| [$8ad5: beq $8ade]
	clr.b	d0                               	| [$8ad7: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8ad9: sta $1b]
	jra	l_8af4                             	| [$8adb: jra $8af4]
l_8ade:
	move.b	#0x01,d0                        	| [$8ade: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8ae0: sta $1b]
	jra	l_8af4                             	| [$8ae2: jra $8af4]
l_8ae5:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8ae5: lda $2a]
	beq	l_8ade                             	| [$8ae7: beq $8ade]
	move.b	#0x02,d0                        	| [$8ae9: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8aeb: sta $1b]
	jra	l_8af4                             	| [$8aed: jra $8af4]
l_8af0:
	move.b	#0x04,d0                        	| [$8af0: lda #$04]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8af2: sta $1b]
l_8af4:
	move.b	d1,d0                           	| [$8af4: txa]
	and.b	#0x02,d0                         	| [$8af5: and #$02]
	beq	l_8aff                             	| [$8af7: beq $8aff]
	move.b	#0xc0,d0                        	| [$8af9: lda #$c0]
	GET_ADDRESS	player_direction_032b      	| [$8afb: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8afe: rts]
l_8aff:
	move.b	#0x40,d0                        	| [$8aff: lda #$40]
	GET_ADDRESS	player_direction_032b      	| [$8b01: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8b04: rts]
l_8b05:
	move.b	d1,d0                           	| [$8b05: txa]
	movem.w	d0,-(sp)                       	| [$8b06: pha]
	lsr.b	#1,d0                            	| [$8b07: lsr a]
	move.b	d0,d2                           	| [$8b08: tay]
	GET_ADDRESS	0x004d                     	| [$8b09: lda $004d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$8b0c: tay]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$8b0d: lda $4f]
	bmi	l_8b3f                             	| [$8b0f: bmi $8b3f]
	and.b	#0x02,d0                         	| [$8b11: and #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8b13: sta $1b]
	move.b	d1,d0                           	| [$8b15: txa]
	and.b	#0x02,d0                         	| [$8b16: and #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8b18: sta $1c]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$8b1a: cmp $1b]
	jne	l_8b3f                             	| [$8b1c: jne $8b3f]
	clr.b	d0                               	| [$8b1e: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8b20: sta $1b]
	GET_ADDRESS	0x00b9                     	| [$8b22: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x58,d0                         	| [$8b25: cmp #$58]
	* bcs=>bcc
	jcc	l_8b31                             	| [$8b27: bcs $8b31]
	cmp.b	#0x38,d0                         	| [$8b29: cmp #$38]
	* bcs=>bcc
	jcc	l_8b2f                             	| [$8b2b: bcs $8b2f]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$8b2d: inc $1b]
l_8b2f:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$8b2f: inc $1b]
l_8b31:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8b31: lda $1c]
	beq	l_8b37                             	| [$8b33: beq $8b37]
	move.b	#0x03,d0                        	| [$8b35: lda #$03]
l_8b37:
	                           	| [$8b37: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$8b38: adc $1b]
	move.b	#0x16,d4	| [$8b3a: adc #$16]
	add.b	d4,d0                        	| [$8b3a: adc #$16]
	jra	l_8b5e                             	| [$8b3c: jra $8b5e]
l_8b3f:
	GET_ADDRESS	0x0373                     	| [$8b3f: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8b42: and #$0f]
	cmp.b	#0x04,d0                         	| [$8b44: cmp #$04]
	beq	l_8b76                             	| [$8b46: beq $8b76]
	* bcc=>bcs (cmp higher above)
	jcs	l_8b52                             	| [$8b48: bcc $8b52]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	moveq	#0x00,d4	| [$8b4a: adc #$00]
	addx.b	d4,d0                        	| [$8b4a: adc #$00]
	cmp.b	#0x0a,d0                         	| [$8b4c: cmp #$0a]
	* bcc=>bcs (cmp above)
	jcs	l_8b52                             	| [$8b4e: bcc $8b52]
	move.b	#0x0a,d0                        	| [$8b50: lda #$0a]
l_8b52:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8b52: sta $1b]
	move.b	d1,d0                           	| [$8b54: txa]
	and.b	#0x02,d0                         	| [$8b55: and #$02]
	beq	l_8b5b                             	| [$8b57: beq $8b5b]
	move.b	#0x0b,d0                        	| [$8b59: lda #$0b]
l_8b5b:
	                           	| [$8b5b: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$8b5c: adc $1b]
l_8b5e:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8b5e: sta $1b]
	asl.b	#1,d0                            	| [$8b60: asl a]
	GET_ADDRESS	0x1b                       	| [$8b61: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$8b63: tay]
	GET_ADDRESS	0x8b84                     	| [$8b64: lda $8b84, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8b67: sta $1b]
	GET_ADDRESS	0x8b85                     	| [$8b69: lda $8b85, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8b6c: sta $1c]
	GET_ADDRESS	0x8b86                     	| [$8b6e: lda $8b86, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8b71: sta base_screen_pointer_list_001d]
	move.w	(sp)+,d0                        	| [$8b73: pla]
	move.b	d0,d1                           	| [$8b74: tax]
	rts                                    	| [$8b75: rts]
l_8b76:
	GET_ADDRESS	0x00b9                     	| [$8b76: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$8b79: cmp #$48]
	SET_X_FROM_CLEARED_C  | store flag for later
	move.b	#0x04,d0                        	| [$8b7b: lda #$04]
	SET_C_FROM_X
	jcs	l_8b52                             	| [$8b7d: bcs $8b52]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	move.b	#0x01,d4	| [$8b7f: adc #$01]
	addx.b	d4,d0                        	| [$8b7f: adc #$01]
	jra	l_8b52                             	| [$8b81: jra $8b52]

l_8bd8:
	clr.b	d0                               	| [$8bd8: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8bda: sta $2a]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8bdc: lda $1b]
	jne	l_8bfe                             	| [$8bde: jne $8bfe]
	move.b	d1,d0                           	| [$8be0: txa]
	lsr.b	#1,d0                            	| [$8be1: lsr a]
	move.b	d0,d2                           	| [$8be2: tay]
	GET_ADDRESS	0x0054                     	| [$8be3: lda $0054, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x0b,d0                         	| [$8be6: cmp #$0b]
	beq	l_8bf1                             	| [$8be8: beq $8bf1]
	OP_W_ON_ZP_ADDRESS	addq,0x2a,#1 |  [$8bea: inc $2a]
	clr.b	d2                               	| [$8bec: ldy #$00]
	jra	l_8bf3                             	| [$8bee: jra $8bf3]
l_8bf1:
	move.b	#0x12,d2                        	| [$8bf1: ldy #$12]
l_8bf3:
	move.b	d1,d0                           	| [$8bf3: txa]
	and.b	#0x02,d0                         	| [$8bf4: and #$02]
	beq	l_8bfb                             	| [$8bf6: beq $8bfb]
                                         | [$8bf8: iny]
                                         | [$8bf9: iny]
	addq.b	#3,d2                           	| [$8bfa: iny]
l_8bfb:
	jra	l_8c1b                             	| [$8bfb: jra $8c1b]
l_8bfe:
	move.b	#0x06,d2                        	| [$8bfe: ldy #$06]
	move.b	d1,d0                           	| [$8c00: txa]
	and.b	#0x02,d0                         	| [$8c01: and #$02]
	beq	l_8c0a                             	| [$8c03: beq $8c0a]
	move.b	d2,d0                           	| [$8c05: tya]
	                           	| [$8c06: clc]
	add.b	#0x06,d0                        	| [$8c07: adc #$06]
	move.b	d0,d2                           	| [$8c09: tay]
l_8c0a:
	OP_W_ON_ZP_ADDRESS	move,0x29,d1 |  [$8c0a: stx $29]
	move.b	d1,d0                           	| [$8c0c: txa]
	eor.b	#0x01,d0                         	| [$8c0d: eor #$01]
	move.b	d0,d1                           	| [$8c0f: tax]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8c10: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x29,d1 |  [$8c12: ldx $29]
	cmp.b	#0x48,d0                         	| [$8c14: cmp #$48]
	* bcs=>bcc
	jcc	l_8c1b                             	| [$8c16: bcs $8c1b]
                                         | [$8c18: iny]
                                         | [$8c19: iny]
	addq.b	#3,d2                           	| [$8c1a: iny]
l_8c1b:
	GET_ADDRESS	0x8c36                     	| [$8c1b: lda $8c36, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8c1e: sta $1b]
	GET_ADDRESS	0x8c37                     	| [$8c20: lda $8c37, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8c23: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8c25: lda $2a]
	beq	l_8c30                             	| [$8c27: beq $8c30]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8c29: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8c2b: sta base_screen_pointer_list_001d]
	jra	l_8c35                             	| [$8c2d: jra $8c35]
l_8c30:
	GET_ADDRESS	0x8c38                     	| [$8c30: lda $8c38, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8c33: sta base_screen_pointer_list_001d]
l_8c35:
	rts                                    	| [$8c35: rts]

	movem.w	d0,-(sp)                       	| [$8c4d: pha]
l_8c4e:
	move.b	d1,d0                           	| [$8c4e: txa]
	and.b	#0x02,d0                         	| [$8c4f: and #$02]
	lsr.b	#1,d0                            	| [$8c51: lsr a]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8c52: sta $2a]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d2 |  [$8c54: ldy $4f]
	GET_ADDRESS	0x00b9                     	| [$8c56: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x38,d0                         	| [$8c59: cmp #$38]
	* bcc=>bcs (cmp above)
	jcs	l_8c6b                             	| [$8c5b: bcc $8c6b]
	cmp.b	#0x58,d0                         	| [$8c5d: cmp #$58]
	* bcc=>bcs (cmp above)
	jcs	l_8c66                             	| [$8c5f: bcc $8c66]
	clr.b	d2                               	| [$8c61: ldy #$00]
	jra	l_8c6d                             	| [$8c63: jra $8c6d]
l_8c66:
	move.b	#0x08,d2                        	| [$8c66: ldy #$08]
	jra	l_8c6d                             	| [$8c68: jra $8c6d]
l_8c6b:
	move.b	#0x10,d2                        	| [$8c6b: ldy #$10]
l_8c6d:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8c6d: lda $2a]
	beq	l_8c76                             	| [$8c6f: beq $8c76]
	move.b	d2,d0                           	| [$8c71: tya]
	                           	| [$8c72: clc]
	add.b	#0x04,d0                        	| [$8c73: adc #$04]
	move.b	d0,d2                           	| [$8c75: tay]
l_8c76:
	GET_ADDRESS	0x8c8b                     	| [$8c76: lda $8c8b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8c79: sta $1b]
	GET_ADDRESS	0x8c8c                     	| [$8c7b: lda $8c8c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8c7e: sta $1c]
	GET_ADDRESS	0x8c8d                     	| [$8c80: lda $8c8d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8c83: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x8c8e                     	| [$8c85: lda $8c8e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8c88: sta $1e]
	rts                                    	| [$8c8a: rts]

l_8ca3:
	move.b	d1,d0                           	| [$8ca3: txa]
	and.b	#0x02,d0                         	| [$8ca4: and #$02]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8ca6: sta $1b]
	lsr.b	#1,d0                            	| [$8ca8: lsr a]
	move.b	d0,d2                           	| [$8ca9: tay]
	clr.b	d0                               	| [$8caa: lda #$00]
	GET_ADDRESS	0xf1                       	| [$8cac: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$8cae: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$8cb0: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x07f9                     	| [$8cb2: lda $07f9]
	move.b	(a0),d0                         	| [...]
	beq	l_8cba                             	| [$8cb5: beq $8cba]
	jra	l_8dc0                             	| [$8cb7: jra $8dc0]
l_8cba:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$8cba: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$8cbc: and #$08]
	beq	l_8cc3                             	| [$8cbe: beq $8cc3]
	jra	l_8da6                             	| [$8cc0: jra $8da6]
l_8cc3:
	GET_ADDRESS	0x0047                     	| [$8cc3: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_8d40                             	| [$8cc6: bmi $8d40]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$8cc8: lda $4f]
	and.b	#0x02,d0                         	| [$8cca: and #$02]
	GET_ADDRESS	0x1b                       	| [$8ccc: eor $1b]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	beq	initialize_logical_xy_players_8cff 	| [$8cce: beq initialize_logical_xy_players_8cff]
	                           	| [$8cd0: clc]
	GET_ADDRESS	0x030a                     	| [$8cd1: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$8cd4: and #$08]
	beq	l_8cda                             	| [$8cd6: beq $8cda]
	move.b	#0x05,d0                        	| [$8cd8: lda #$05]
l_8cda:
	GET_ADDRESS	0x5d                       	| [$8cda: adc $5d]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8cdc: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8cde: lda $1b]
	beq	l_8ce4                             	| [$8ce0: beq $8ce4]
	move.b	#0x0a,d0                        	| [$8ce2: lda #$0a]
l_8ce4:
	GET_ADDRESS	0x1c                       	| [$8ce4: adc $1c]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
                                         | [$8ce6: asl a]
	asl.b	#2,d0                            	| [$8ce7: asl a]
	move.b	d0,d2                           	| [$8ce8: tay]
	GET_ADDRESS	0x8dda                     	| [$8ce9: lda $8dda, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8cec: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8ddb                     	| [$8cee: lda $8ddb, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8cf1: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8ddc                     	| [$8cf3: lda $8ddc, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8cf6: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8ddd                     	| [$8cf8: lda $8ddd, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8cfb: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8cfe: rts]

initialize_logical_xy_players_8cff:
	move.b	d1,d0                           	| [$8cff: txa]
	OP_R_ON_ZP_ADDRESS	cmp,0x4f,d0 |  [$8d00: cmp $4f]
	jne	initialize_logical_xy_players_8d26 	| [$8d02: jne initialize_logical_xy_players_8d26]
	jbsr	pseudo_random_d00a                	| [$8d04: jsr pseudo_random_d00a]
	and.b	#0x03,d0                         	| [$8d07: and #$03]
	GET_ADDRESS	0x1b                       	| [$8d09: asl $1b]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	                       	| [$8d0b: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
                                         | [$8d0d: asl a]
	asl.b	#2,d0                            	| [$8d0e: asl a]
	move.b	d0,d2                           	| [$8d0f: tay]
	GET_ADDRESS	0x8e2a                     	| [$8d10: lda $8e2a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8d13: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e2b                     	| [$8d15: lda $8e2b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8d18: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e2c                     	| [$8d1a: lda $8e2c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8d1d: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e2d                     	| [$8d1f: lda $8e2d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8d22: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8d25: rts]
* initialize start players X/Y from ROM locations
initialize_logical_xy_players_8d26:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8d26: lda $1b]
	asl.b	#1,d0                            	| [$8d28: asl a]
	move.b	d0,d2                           	| [$8d29: tay]
	GET_ADDRESS	0x8e4a                     	| [$8d2a: lda $8e4a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8d2d: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e4b                     	| [$8d2f: lda $8e4b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8d32: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e4c                     	| [$8d34: lda $8e4c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8d37: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e4d                     	| [$8d39: lda $8e4d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8d3c: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8d3f: rts]

l_8d40:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$8d40: lda $4f]
	and.b	#0x02,d0                         	| [$8d42: and #$02]
	GET_ADDRESS	0x1b                       	| [$8d44: eor $1b]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	beq	l_8d6d                             	| [$8d46: beq $8d6d]
	                           	| [$8d48: clc]
	GET_ADDRESS	0x030a                     	| [$8d49: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$8d4c: and #$08]
                                         | [$8d4e: lsr a]
                                         | [$8d4f: lsr a]
                                         | [$8d50: lsr a]
	lsr.b	#4,d0                            	| [$8d51: lsr a]
	GET_ADDRESS	0x1b                       	| [$8d52: adc $1b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
                                         | [$8d54: asl a]
	asl.b	#2,d0                            	| [$8d55: asl a]
	move.b	d0,d2                           	| [$8d56: tay]
	GET_ADDRESS	0x8e52                     	| [$8d57: lda $8e52, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8d5a: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e53                     	| [$8d5c: lda $8e53, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8d5f: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e54                     	| [$8d61: lda $8e54, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8d64: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e55                     	| [$8d66: lda $8e55, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8d69: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8d6c: rts]
l_8d6d:
	move.b	d1,d0                           	| [$8d6d: txa]
	OP_R_ON_ZP_ADDRESS	cmp,0x4f,d0 |  [$8d6e: cmp $4f]
	jne	l_8d8c                             	| [$8d70: jne $8d8c]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8d72: lda $1b]
	asl.b	#1,d0                            	| [$8d74: asl a]
	move.b	d0,d2                           	| [$8d75: tay]
	GET_ADDRESS	0x8e62                     	| [$8d76: lda $8e62, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8d79: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e63                     	| [$8d7b: lda $8e63, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8d7e: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e64                     	| [$8d80: lda $8e64, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8d83: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e65                     	| [$8d85: lda $8e65, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8d88: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8d8b: rts]
l_8d8c:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8d8c: lda $1b]
	asl.b	#1,d0                            	| [$8d8e: asl a]
	move.b	d0,d2                           	| [$8d8f: tay]
	GET_ADDRESS	0x8e6a                     	| [$8d90: lda $8e6a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8d93: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e6b                     	| [$8d95: lda $8e6b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8d98: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e6c                     	| [$8d9a: lda $8e6c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8d9d: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e6d                     	| [$8d9f: lda $8e6d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8da2: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8da5: rts]
l_8da6:
	move.b	d1,d0                           	| [$8da6: txa]
                                         | [$8da7: asl a]
	asl.b	#2,d0                            	| [$8da8: asl a]
	move.b	d0,d2                           	| [$8da9: tay]
	GET_ADDRESS	0x8e72                     	| [$8daa: lda $8e72, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8dad: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e73                     	| [$8daf: lda $8e73, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8db2: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e74                     	| [$8db4: lda $8e74, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8db7: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e75                     	| [$8db9: lda $8e75, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8dbc: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8dbf: rts]
l_8dc0:
	move.b	d1,d0                           	| [$8dc0: txa]
                                         | [$8dc1: asl a]
	asl.b	#2,d0                            	| [$8dc2: asl a]
	move.b	d0,d2                           	| [$8dc3: tay]
	GET_ADDRESS	0x8e82                     	| [$8dc4: lda $8e82, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$8dc7: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e83                     	| [$8dc9: lda $8e83, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$8dcc: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e84                     	| [$8dce: lda $8e84, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8dd1: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x8e85                     	| [$8dd3: lda $8e85, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0373                     	| [$8dd6: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$8dd9: rts]

l_8e92:
	move.b	d1,d0                           	| [$8e92: txa]
	eor.b	#0x01,d0                         	| [$8e93: eor #$01]
	move.b	d0,d2                           	| [$8e95: tay]
	GET_ADDRESS	0x0316                     	| [$8e96: lda $0316, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$8e99: and #$7f]
	cmp.b	#0x0f,d0                         	| [$8e9b: cmp #$0f]
	beq	l_8ec0                             	| [$8e9d: beq $8ec0]
	move.b	d1,d0                           	| [$8e9f: txa]
	and.b	#0x02,d0                         	| [$8ea0: and #$02]
	lsr.b	#1,d0                            	| [$8ea2: lsr a]
	beq	l_8ea8                             	| [$8ea3: beq $8ea8]
	                           	| [$8ea5: clc]
	add.b	#0x03,d0                        	| [$8ea6: adc #$03]
l_8ea8:
	move.b	d0,d2                           	| [$8ea8: tay]
	GET_ADDRESS	0x8ef7                     	| [$8ea9: lda $8ef7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8eac: sta $1b]
	GET_ADDRESS	0x8ef8                     	| [$8eae: lda $8ef8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8eb1: sta $1c]
	GET_ADDRESS	0x8ef9                     	| [$8eb3: lda $8ef9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8eb6: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x8efa                     	| [$8eb8: lda $8efa, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8ebb: sta $1e]
	jra	l_8ef6                             	| [$8ebd: jra $8ef6]
l_8ec0:
	GET_ADDRESS	0x00b9                     	| [$8ec0: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$8ec3: cmp #$48]
	* bcs=>bcc
	jcc	l_8ed6                             	| [$8ec5: bcs $8ed6]
	move.b	d1,d0                           	| [$8ec7: txa]
	and.b	#0x02,d0                         	| [$8ec8: and #$02]
	beq	l_8ed1                             	| [$8eca: beq $8ed1]
	move.b	#0x08,d2                        	| [$8ecc: ldy #$08]
	jra	l_8ee2                             	| [$8ece: jra $8ee2]
l_8ed1:
	clr.b	d2                               	| [$8ed1: ldy #$00]
	jra	l_8ee2                             	| [$8ed3: jra $8ee2]
l_8ed6:
	move.b	d1,d0                           	| [$8ed6: txa]
	and.b	#0x02,d0                         	| [$8ed7: and #$02]
	beq	l_8ee0                             	| [$8ed9: beq $8ee0]
	move.b	#0x0c,d2                        	| [$8edb: ldy #$0c]
	jra	l_8ee2                             	| [$8edd: jra $8ee2]
l_8ee0:
	move.b	#0x04,d2                        	| [$8ee0: ldy #$04]
l_8ee2:
	GET_ADDRESS	0x8eff                     	| [$8ee2: lda $8eff, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8ee5: sta $1b]
	GET_ADDRESS	0x8f00                     	| [$8ee7: lda $8f00, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8eea: sta $1c]
	GET_ADDRESS	0x8f01                     	| [$8eec: lda $8f01, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8eef: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x8f02                     	| [$8ef1: lda $8f02, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$8ef4: sta $1e]
l_8ef6:
	rts                                    	| [$8ef6: rts]

	SET_XC_FLAGS                           	| [$8f0e: sec]
l_8f0f:
	GET_ADDRESS	0x03f0                     	| [$8f0f: lda $03f0]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0384                     	| [$8f12: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03ef                     	| [$8f15: lda $03ef]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0380                     	| [$8f18: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03f2                     	| [$8f1b: lda $03f2]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x038c                     	| [$8f1e: sta $038c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03f1                     	| [$8f21: lda $03f1]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0388                     	| [$8f24: sta $0388, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_8493                            	| [$8f27: jsr $8493]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8f2a: lda $1b]
	beq	l_8f35                             	| [$8f2c: beq $8f35]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8f2e: lda $1c]
	beq	l_8f3a                             	| [$8f30: beq $8f3a]
	jra	l_8f4e                             	| [$8f32: jra $8f4e]
l_8f35:
	move.b	d1,d0                           	| [$8f35: txa]
	and.b	#0x02,d0                         	| [$8f36: and #$02]
	beq	l_8f4e                             	| [$8f38: beq $8f4e]
l_8f3a:
	GET_ADDRESS	0x0380                     	| [$8f3a: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$8f3d: clc]
	add.b	#0x0c,d0                        	| [$8f3e: adc #$0c]
	                     	| [$8f40: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0384                     	| [$8f43: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$8f46: adc #$00]
	addx.b	d4,d0                        	| [$8f46: adc #$00]
	                     	| [$8f48: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_8f5f                             	| [$8f4b: jra $8f5f]
l_8f4e:
	GET_ADDRESS	0x0380                     	| [$8f4e: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS |  [$8f51: sec]
	SBC_IMM	0x0c	| [$8f52: sbc #$0c] [do not optimize sub!]
	GET_ADDRESS	0x0380                     	| [$8f54: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0384                     	| [$8f57: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_IMM	0x00                           	| [$8f5a: sbc #$00]
	GET_ADDRESS	0x0384                     	| [$8f5c: sta $0384, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_8f5f:
	rts                                    	| [$8f5f: rts]
l_8f60:
	move.b	d1,d0                           	| [$8f60: txa]
	eor.b	#0x01,d0                         	| [$8f61: eor #$01]
	move.b	d0,d2                           	| [$8f63: tay]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$8f64: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x58,d0                         	| [$8f66: cmp #$58]
	* bcc=>bcs (cmp above)
	jcs	l_8f76                             	| [$8f68: bcc $8f76]
	GET_ADDRESS	0x0373                     	| [$8f6a: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8f6d: and #$0f]
	 |  [$8f6f: cmp #$00]
	beq	l_8fa0                             	| [$8f71: beq $8fa0]
	jra	l_8f99                             	| [$8f73: jra $8f99]
l_8f76:
	cmp.b	#0x38,d0                         	| [$8f76: cmp #$38]
	* bcc=>bcs (cmp above)
	jcs	l_8f8d                             	| [$8f78: bcc $8f8d]
	GET_ADDRESS	0x0373                     	| [$8f7a: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8f7d: and #$0f]
	cmp.b	#0x01,d0                         	| [$8f7f: cmp #$01]
	jne	l_8fa0                             	| [$8f81: jne $8fa0]
	GET_ADDRESS	0x00b9                     	| [$8f83: lda $00b9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$8f86: cmp #$48]
	* bcs=>bcc
	jcc	l_8fa7                             	| [$8f88: bcs $8fa7]
	jra	l_8f99                             	| [$8f8a: jra $8f99]
l_8f8d:
	GET_ADDRESS	0x0373                     	| [$8f8d: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$8f90: and #$0f]
	cmp.b	#0x02,d0                         	| [$8f92: cmp #$02]
	jne	l_8fa7                             	| [$8f94: jne $8fa7]
	jra	l_8fa0                             	| [$8f96: jra $8fa0]
l_8f99:
	move.b	#0x68,d0                        	| [$8f99: lda #$68]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8f9b: sta base_screen_pointer_list_001d]
	jra	l_8fab                             	| [$8f9d: jra $8fab]
l_8fa0:
	move.b	#0x48,d0                        	| [$8fa0: lda #$48]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8fa2: sta base_screen_pointer_list_001d]
	jra	l_8fab                             	| [$8fa4: jra $8fab]
l_8fa7:
	move.b	#0x28,d0                        	| [$8fa7: lda #$28]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$8fa9: sta base_screen_pointer_list_001d]
l_8fab:
	move.b	d1,d0                           	| [$8fab: txa]
	and.b	#0x02,d0                         	| [$8fac: and #$02]
	beq	l_8fbb                             	| [$8fae: beq $8fbb]
	move.b	#0x01,d0                        	| [$8fb0: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8fb2: sta $1b]
	move.b	#0x20,d0                        	| [$8fb4: lda #$20]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8fb6: sta $1c]
	jra	l_8fc3                             	| [$8fb8: jra $8fc3]
l_8fbb:
	clr.b	d0                               	| [$8fbb: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$8fbd: sta $1b]
	move.b	#0xe0,d0                        	| [$8fbf: lda #$e0]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$8fc1: sta $1c]
l_8fc3:
	rts                                    	| [$8fc3: rts]
l_8fc4:
	GET_ADDRESS	0x0388                     	| [$8fc4: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x78,d0                         	| [$8fc7: cmp #$78]
	* bcc=>bcs (cmp above)
	jcs	l_8fd3                             	| [$8fc9: bcc $8fd3]
	move.b	#0x01,d0                        	| [$8fcb: lda #$01]
	GET_ADDRESS	0x03b0                     	| [$8fcd: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9025                             	| [$8fd0: jra $9025]
l_8fd3:
	cmp.b	#0x0e,d0                         	| [$8fd3: cmp #$0e]
	* bcs=>bcc
	jcc	l_8fdf                             	| [$8fd5: bcs $8fdf]
	move.b	#0x02,d0                        	| [$8fd7: lda #$02]
	GET_ADDRESS	0x03b0                     	| [$8fd9: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9025                             	| [$8fdc: jra $9025]
l_8fdf:
	clr.b	d2                               	| [$8fdf: ldy #$00]
	GET_ADDRESS	0x0388                     	| [$8fe1: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x58,d0                         	| [$8fe4: cmp #$58]
	* bcs=>bcc
	jcc	l_8ff3                             	| [$8fe6: bcs $8ff3]
	cmp.b	#0x38,d0                         	| [$8fe8: cmp #$38]
	* bcs=>bcc
	jcc	l_8ff1                             	| [$8fea: bcs $8ff1]
	move.b	#0x04,d2                        	| [$8fec: ldy #$04]
	jra	l_8ff3                             	| [$8fee: jra $8ff3]
l_8ff1:
	move.b	#0x02,d2                        	| [$8ff1: ldy #$02]
l_8ff3:
	move.b	d1,d0                           	| [$8ff3: txa]
	lsr.b	#1,d0                            	| [$8ff4: lsr a]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8ff5: sta $2a]
	move.b	d2,d0                           	| [$8ff7: tya]
	                           	| [$8ff8: clc]
	OP_R_ON_ZP_ADDRESS	add,0x2a,d0 |  [$8ff9: adc $2a]
	move.b	d0,d2                           	| [$8ffb: tay]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$8ffc: lda $2a]
	beq	l_9010                             	| [$8ffe: beq $9010]
	GET_ADDRESS	0x8438                     	| [$9000: lda $8438, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0380                     	| [$9003: cmp $0380, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_9020                             	| [$9006: bcs $9020]
	move.b	#0x03,d0                        	| [$9008: lda #$03]
	GET_ADDRESS	0x03b0                     	| [$900a: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9025                             	| [$900d: jra $9025]
l_9010:
	GET_ADDRESS	0x8438                     	| [$9010: lda $8438, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0380                     	| [$9013: cmp $0380, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_9020                             	| [$9016: bcc $9020]
	move.b	#0x04,d0                        	| [$9018: lda #$04]
	GET_ADDRESS	0x03b0                     	| [$901a: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9025                             	| [$901d: jra $9025]
l_9020:
	clr.b	d0                               	| [$9020: lda #$00]
	GET_ADDRESS	0x03b0                     	| [$9022: sta $03b0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9025:
	rts                                    	| [$9025: rts]

compute_player_direction_9026:
	GET_ADDRESS	0x0384                     	| [$9026: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$9029: sta $11]
	GET_ADDRESS	0x0380                     	| [$902b: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$902e: sta screen_source_pointer_0010]
	GET_ADDRESS	0x0388                     	| [$9030: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$9033: sta multipurpose_12]
	GET_ADDRESS	0x038c                     	| [$9035: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$9038: sta multipurpose_13]
	jbsr	l_b46a                            	| [$903a: jsr $b46a]
	rts                                    	| [$903d: rts]

l_903e:
	move.b	#0x0d,d2                        	| [$903e: ldy #$0d]
	GET_ADDRESS	0x0384                     	| [$9040: lda $0384, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$9043: sta objects_side_array_9d, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0380                     	| [$9046: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$9049: sta objects_logical_x_array_8f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0388                     	| [$904c: lda $0388, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00b9                     	| [$904f: sta $00b9, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x038c                     	| [$9052: lda $038c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x00c7                     	| [$9055: sta $00c7, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	#0x0d,d0                        	| [$9058: lda #$0d]
	jbsr	l_b71f                            	| [$905a: jsr $b71f]
	rts                                    	| [$905d: rts]
l_905e:
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$905e: lda $11]
	bpl	l_9079                             	| [$9060: bpl $9079]
	not.b	d0                               	| [$9062: eor #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$9064: sta $11]
	 |  [$9066: lda screen_source_pointer_0010]
	                               	| [$9068: eor #$ff]
	OP_NOT_ON_ZP_ADDRESS	not,screen_source_pointer_0010 |  [$906a: sta screen_source_pointer_0010]
	                           	| [$906c: clc]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$906d: lda screen_source_pointer_0010]
	move.b	#0x01,d4	| [$906f: adc #$01]
	add.b	d4,d0                        	| [$906f: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$9071: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$9073: lda $11]
	moveq	#0x00,d4	| [$9075: adc #$00]
	addx.b	d4,d0                        	| [$9075: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$9077: sta $11]
l_9079:
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$9079: lda multipurpose_13]
	bpl	l_9094                             	| [$907b: bpl $9094]
	not.b	d0                               	| [$907d: eor #$ff]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$907f: sta multipurpose_13]
	 |  [$9081: lda multipurpose_12]
	                            	| [$9083: eor #$ff]
	OP_NOT_ON_ZP_ADDRESS	not,multipurpose_12 |  [$9085: sta multipurpose_12]
	                           	| [$9087: clc]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$9088: lda multipurpose_12]
	move.b	#0x01,d4	| [$908a: adc #$01]
	add.b	d4,d0                        	| [$908a: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$908c: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$908e: lda multipurpose_13]
	moveq	#0x00,d4	| [$9090: adc #$00]
	addx.b	d4,d0                        	| [$9090: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$9092: sta multipurpose_13]
l_9094:
	rts                                    	| [$9094: rts]
l_9095:
	move.b	d1,d0                           	| [$9095: txa]
	and.b	#0x02,d0                         	| [$9096: and #$02]
	beq	l_90a6                             	| [$9098: beq $90a6]
	GET_ADDRESS	0x0380                     	| [$909a: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$909d: clc]
	add.b	#0x0a,d0                        	| [$909e: adc #$0a]
	                     	| [$90a0: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_90af                             	| [$90a3: jra $90af]
l_90a6:
	GET_ADDRESS	0x0380                     	| [$90a6: lda $0380, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$90a9: sec]
	sub.b	#0x0a,d0	| [$90aa: sbc #$0a]
	                     	| [$90ac: sta $0380, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_90af:
	rts                                    	| [$90af: rts]
l_90b0:
	GET_ADDRESS	0x031a                     	| [$90b0: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$90b3: and #$7f]
	cmp.b	#0x10,d0                         	| [$90b5: cmp #$10]
	beq	l_90c7                             	| [$90b7: beq $90c7]
	cmp.b	#0x11,d0                         	| [$90b9: cmp #$11]
	beq	l_90c7                             	| [$90bb: beq $90c7]
	cmp.b	#0x13,d0                         	| [$90bd: cmp #$13]
	beq	l_90c7                             	| [$90bf: beq $90c7]
	cmp.b	#0x14,d0                         	| [$90c1: cmp #$14]
	beq	l_90c7                             	| [$90c3: beq $90c7]
	CLR_XC_FLAGS                           	| [$90c5: clc]
	rts                                    	| [$90c6: rts]
l_90c7:
	SET_XC_FLAGS                           	| [$90c7: sec]
	rts                                    	| [$90c8: rts]
l_90c9:
	GET_ADDRESS	0x0316                     	| [$90c9: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$90cc: and #$7f]
	cmp.b	#0x09,d0                         	| [$90ce: cmp #$09]
	beq	l_90e5                             	| [$90d0: beq $90e5]
	cmp.b	#0x08,d0                         	| [$90d2: cmp #$08]
	beq	l_90e5                             	| [$90d4: beq $90e5]
	clr.b	d0                               	| [$90d6: lda #$00]
	jbsr	l_8549                            	| [$90d8: jsr $8549]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$90db: lda $1b]
	GET_ADDRESS	0x03f9                     	| [$90dd: cmp $03f9]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_90f1                             	| [$90e0: bcc $90f1]
	jra	l_90ea                             	| [$90e2: jra $90ea]
l_90e5:
	jbsr	l_832f                            	| [$90e5: jsr $832f]
	jcs	l_90f1                             	| [$90e8: bcs $90f1]
l_90ea:
	move.b	#0x0e,d0                        	| [$90ea: lda #$0e]
	GET_ADDRESS	0x0316                     	| [$90ec: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	CLR_XC_FLAGS                           	| [$90ef: clc]
	rts                                    	| [$90f0: rts]
l_90f1:
	SET_XC_FLAGS                           	| [$90f1: sec]
	rts                                    	| [$90f2: rts]
l_90f3:
	GET_ADDRESS	0x031a                     	| [$90f3: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$90f6: and #$7f]
	cmp.b	#0x0f,d0                         	| [$90f8: cmp #$0f]
	* bcs=>bcc
	jcc	l_90ff                             	| [$90fa: bcs $90ff]
	jra	l_9105                             	| [$90fc: jra $9105]
l_90ff:
	cmp.b	#0x17,d0                         	| [$90ff: cmp #$17]
	* bcs=>bcc
	jcc	l_9105                             	| [$9101: bcs $9105]
	CLR_XC_FLAGS                           	| [$9103: clc]
	rts                                    	| [$9104: rts]
l_9105:
	SET_XC_FLAGS                           	| [$9105: sec]
	rts                                    	| [$9106: rts]
l_9107:
	move.b	d1,d0                           	| [$9107: txa]
	and.b	#0x02,d0                         	| [$9108: and #$02]
	lsr.b	#1,d0                            	| [$910a: lsr a]
	move.b	d0,d2                           	| [$910b: tay]
	GET_ADDRESS	0x0047                     	| [$910c: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_912f                             	| [$910f: bmi $912f]
	GET_ADDRESS	0x0316                     	| [$9111: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9114: and #$7f]
	cmp.b	#0x0a,d0                         	| [$9116: cmp #$0a]
	jne	l_912f                             	| [$9118: jne $912f]
	move.b	d1,d0                           	| [$911a: txa]
	eor.b	#0x01,d0                         	| [$911b: eor #$01]
	move.b	d0,d2                           	| [$911d: tay]
	GET_ADDRESS	0x03b8                     	| [$911e: lda $03b8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$9121: cmp #$03]
	beq	l_912f                             	| [$9123: beq $912f]
	move.b	#0x8b,d0                        	| [$9125: lda #$8b]
	GET_ADDRESS	0x0316                     	| [$9127: sta $0316, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x09,d0                        	| [$912a: lda #$09]
	                     	| [$912c: sta $0316, y]
    move.b	d0,(a0,d2.w)                 	| [...]
l_912f:
	rts                                    	| [$912f: rts]

l_9130:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$9130: ldx current_object_index_4c]
	jbsr	l_a2ac                            	| [$9132: jsr $a2ac]
	GET_ADDRESS	0x030e                     	| [$9135: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x44,d0                         	| [$9138: and #$44]
	jne	l_915f                             	| [$913a: jne $915f]
	GET_ADDRESS	0x0327                     	| [$913c: lda $0327, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_915f                             	| [$913f: bpl $915f]
	jbsr	l_91d8                            	| [$9141: jsr $91d8]
	jcs	l_915f                             	| [$9144: bcs $915f]
	GET_ADDRESS	0x0327                     	| [$9146: lda $0327, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9149: and #$7f]
	                     	| [$914b: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$914e: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9151: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9153: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0327                     	| [$9156: lda $0327, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x031a                     	| [$9159: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_91f3                            	| [$915c: jsr $91f3]
l_915f:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$915f: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9162: and #$7f]
	cmp.b	#0x0a,d0                         	| [$9164: cmp #$0a]
	* bcs=>bcc
	jcc	l_9175                             	| [$9166: bcs $9175]
	move.b	#0x01,d0                        	| [$9168: lda #$01]
	jbsr	set_bank_d8df                     	| [$916a: jsr set_bank_d8df]
* this is not the 7FF3 in this asm file, there's a bankswitch!
	jbsr	b1_7ff3                            	| [$916d: jsr $7ff3]
	clr.b	d0                               	| [$9170: lda #$00]
	jbsr	set_bank_d8df                     	| [$9172: jsr set_bank_d8df]
l_9175:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$9175: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9178: and #$7f]
	asl.b	#1,d0                            	| [$917a: asl a]
	move.b	d0,d2                           	| [$917b: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_918a            	| [$917c: lda jump_table_918a, y]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$917f: sta screen_source_pointer_0010]
	GET_ADDRESS	0x918b                     	| [$9181: lda $918b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$9184: sta $11]
	rts |  [$9186: jra ($0010)] [indirect_jump]
l_9189:
	rts                                    	| [$9189: rts]

l_91d8:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$91d8: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$91db: and #$7f]
	cmp.b	#0x0a,d0                         	| [$91dd: cmp #$0a]
	beq	l_91e5                             	| [$91df: beq $91e5]
	cmp.b	#0x0b,d0                         	| [$91e1: cmp #$0b]
	jne	l_91ee                             	| [$91e3: jne $91ee]
l_91e5:
	GET_ADDRESS	0x0327                     	| [$91e5: lda $0327, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$91e8: and #$7f]
	cmp.b	#0x0c,d0                         	| [$91ea: cmp #$0c]
	jne	l_91f1                             	| [$91ec: jne $91f1]
l_91ee:
* clc+bcc => bra
	CLR_XC_FLAGS   | needed when returning
	bra.b	l_91f2                             	| [$91ef: bcc $91f2]
l_91f1:
	SET_XC_FLAGS                           	| [$91f1: sec]
l_91f2:
	rts                                    	| [$91f2: rts]

l_91f3:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$91f3: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x17,d0                         	| [$91f6: cmp #$17]
	* bcs=>bcc
	jcc	l_920f                             	| [$91f8: bcs $920f]
	cmp.b	#0x0f,d0                         	| [$91fa: cmp #$0f]
	* bcc=>bcs (cmp above)
	jcs	l_920f                             	| [$91fc: bcc $920f]
	GET_ADDRESS	player_direction_032b      	| [$91fe: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$9201: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03c4                     	| [$9204: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$9207: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$920a: ora #$04]
	                     	| [$920c: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_920f:
	rts                                    	| [$920f: rts]
l_9210:
	GET_ADDRESS	0x031a                     	| [$9210: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9218                             	| [$9213: bmi $9218]
	jbsr	l_a195                            	| [$9215: jsr $a195]
l_9218:
	jbsr	l_a0fd                            	| [$9218: jsr $a0fd]
	GET_ADDRESS	0x031a                     	| [$921b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$921e: and #$7f]
	asl.b	#1,d0                            	| [$9220: asl a]
	move.b	d0,d2                           	| [$9221: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_92ea            	| [$9222: lda jump_table_92ea, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9225: sta $1b]
	GET_ADDRESS	0x92eb                     	| [$9227: lda $92eb, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$922a: sta $1c]
	move.b	#0x37,d0                        	| [$922c: lda #$37]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$922e: sta $00]
	move.b	#0x92,d0                        	| [$9230: lda #$92]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9232: sta $01] [zero_callback] 9237
	rts |  [$9234: jra ($001b)] [indirect_jump]
callback_9237:
	GET_ADDRESS	0x0343                     	| [$9237: lda $0343, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x80,d0                         	| [$923a: cmp #$80]
	* bcc=>bcs (cmp above)
	jcs	l_9248                             	| [$923c: bcc $9248]
	GET_ADDRESS	0x03c0                     	| [$923e: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$9241: ora #$80]
	                     	| [$9243: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jne	l_9250                             	| [$9246: jne $9250]
l_9248:
	GET_ADDRESS	0x03c0                     	| [$9248: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$924b: and #$7f]
	                     	| [$924d: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9250:
	jbsr	l_9d8d                            	| [$9250: jsr $9d8d]
	jra	l_9189                             	| [$9253: jra $9189]
l_9256:
	GET_ADDRESS	0x031a                     	| [$9256: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_925e                             	| [$9259: bmi $925e]
	jbsr	l_a195                            	| [$925b: jsr $a195]
l_925e:
	jbsr	l_a0fd                            	| [$925e: jsr $a0fd]
	GET_ADDRESS	0x031a                     	| [$9261: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9264: and #$7f]
	                           	| [$9266: sec]
	sub.b	#0x03,d0	| [$9267: sbc #$03]
	asl.b	#1,d0                            	| [$9269: asl a]
	move.b	d0,d2                           	| [$926a: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_92ea            	| [$926b: lda jump_table_92ea, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$926e: sta $1b]
	GET_ADDRESS	0x92eb                     	| [$9270: lda $92eb, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$9273: sta $1c]
	move.b	#0x80,d0                        	| [$9275: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9277: sta $00]
	move.b	#0x92,d0                        	| [$9279: lda #$92]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$927b: sta $01] [zero_callback] 9280
	rts |  [$927d: jra ($001b)] [indirect_jump]
callback_9280:
	jbsr	l_9d8d                            	| [$9280: jsr $9d8d]
	jra	l_9189                             	| [$9283: jra $9189]
l_9286:
	GET_ADDRESS	0x031a                     	| [$9286: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9296                             	| [$9289: bmi $9296]
	jbsr	l_a195                            	| [$928b: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$928e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$9291: and #$ef]
	                     	| [$9293: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9296:
	GET_ADDRESS	0x030e                     	| [$9296: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9299: and #$10]
	beq	l_929d                             	| [$929b: beq $929d]
l_929d:
	GET_ADDRESS	player_direction_032b      	| [$929d: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$92a0: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$92a3: clc]
	add.b	#0x10,d0                        	| [$92a4: adc #$10]
                                         | [$92a6: lsr a]
                                         | [$92a7: lsr a]
                                         | [$92a8: lsr a]
                                         | [$92a9: lsr a]
	lsr.b	#5,d0                            	| [$92aa: lsr a]
	move.b	d0,d2                           	| [$92ab: tay]
	GET_ADDRESS	0x92e2                     	| [$92ac: lda $92e2, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$92af: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$92b2: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$92b5: and #$7f]
	                           	| [$92b7: sec]
	sub.b	#0x06,d0	| [$92b8: sbc #$06]
	asl.b	#1,d0                            	| [$92ba: asl a]
	move.b	d0,d2                           	| [$92bb: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_92ea            	| [$92bc: lda jump_table_92ea, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$92bf: sta $1b]
	GET_ADDRESS	0x92eb                     	| [$92c1: lda $92eb, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$92c4: sta $1c]
	move.b	#0xd1,d0                        	| [$92c6: lda #$d1] callback/jump in
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$92c8: sta $00]
	move.b	#0x92,d0                        	| [$92ca: lda #$92]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$92cc: sta $01] [zero_callback] 92d1
	rts |  [$92ce: jra ($001b)] [indirect_jump]
callback_92d1:
	jbsr	player_walks_a215                 	| [$92d1: jsr player_walks_a215]
	jcs	l_92d9                             	| [$92d4: bcs $92d9]
	jbsr	l_b5c2                            	| [$92d6: jsr $b5c2]
l_92d9:
	jbsr	l_9d8d                            	| [$92d9: jsr $9d8d]
	jbsr	l_9c1c                            	| [$92dc: jsr $9c1c]
	jra	l_9189                             	| [$92df: jra $9189]

l_92f0:
	move.b	#0x20,d2                        	| [$92f0: ldy #$20]
	GET_ADDRESS	0x0337                     	| [$92f2: lda $0337, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$92f5: and #$40]
	beq	l_92fb                             	| [$92f7: beq $92fb]
	move.b	#0x60,d2                        	| [$92f9: ldy #$60]
l_92fb:
	                     	| [$92fb: lda $0337, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9307                             	| [$92fe: bmi $9307]
	move.b	d2,d0                           	| [$9300: tya]
	not.b	d0                               	| [$9301: eor #$ff]
	                           	| [$9303: clc]
	add.b	#0x01,d0                        	| [$9304: adc #$01]
	move.b	d0,d2                           	| [$9306: tay]
l_9307:
	move.b	d2,d0                           	| [$9307: tya]
	GET_ADDRESS	0x03c4                     	| [$9308: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	callback_0000 |   [$930b: jra ($0000)] [jump_to_callback]        ; [indirect_jump]

l_930e:
	move.b	#0x20,d2                        	| [$930e: ldy #$20]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$9310: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$9312: cmp #$48]
	* bcc=>bcs (cmp above)
	jcs	l_9318                             	| [$9314: bcc $9318]
	move.b	#0x60,d2                        	| [$9316: ldy #$60]
l_9318:
	cmp.b	#0x02,d1                         	| [$9318: cpx #$02]
	* bcc=>bcs (cmp above)
	jcs	l_9327                             	| [$931a: bcc $9327]
	move.b	#0xe0,d2                        	| [$931c: ldy #$e0]
	 	| [$931e: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x48,d0                         	| [$9320: cmp #$48]
	* bcc=>bcs (cmp above)
	jcs	l_9327                             	| [$9322: bcc $9327]
	move.b	#0xa0,d0                        	| [$9324: lda #$a0]
	move.b	d0,d2                           	| [$9326: tay]
l_9327:
	move.b	d2,d0                           	| [$9327: tya]
	GET_ADDRESS	0x03c4                     	| [$9328: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	callback_0000 |   [$932b: jra ($0000)] [jump_to_callback]        ; [indirect_jump]
l_932e:
	GET_ADDRESS	player_direction_copy_0254 	| [$932e: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x03c4                     	| [$9331: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	callback_0000 |   [$9334: jra ($0000)] [jump_to_callback]        ; [indirect_jump]
l_9337:
	GET_ADDRESS	0x031a                     	| [$9337: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9347                             	| [$933a: bmi $9347]
	jbsr	l_a195                            	| [$933c: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$933f: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$9342: and #$ef]
	                     	| [$9344: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9347:
	GET_ADDRESS	player_direction_032b      	| [$9347: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x03c4                     	| [$934a: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$934d: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$9350: clc]
	add.b	#0x10,d0                        	| [$9351: adc #$10]
	and.b	#0xe0,d0                         	| [$9353: and #$e0]
                                         | [$9355: lsr a]
                                         | [$9356: lsr a]
                                         | [$9357: lsr a]
	lsr.b	#4,d0                            	| [$9358: lsr a]
	move.b	d0,d2                           	| [$9359: tay]
	GET_ADDRESS	0x03dc                     	| [$935a: lda $03dc, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_9360                             	| [$935d: beq $9360]
	addq.b	#1,d2                           	| [$935f: iny]
l_9360:
	GET_ADDRESS	0x9392                     	| [$9360: lda $9392, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$9363: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
* reaches here only when a player is moving to position himself
* (for instance second player positions himself for pass)
	jbsr	player_walks_a215                 	| [$9366: jsr player_walks_a215]
	jcs	l_9378                             	| [$9369: bcs $9378]
	jbsr	l_b5c2                            	| [$936b: jsr $b5c2]
	GET_ADDRESS	0x03dc                     	| [$936e: dec $03dc, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
	bpl	l_9378                             	| [$9371: bpl $9378]
	clr.b	d0                               	| [$9373: lda #$00]
	                     	| [$9375: sta $03dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9378:
	jbsr	l_9d8d                            	| [$9378: jsr $9d8d]
	jbsr	l_9c1c                            	| [$937b: jsr $9c1c]
	GET_ADDRESS	0x02d6                     	| [$937e: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_938f                             	| [$9381: jne $938f]
	GET_ADDRESS	0x02f0                     	| [$9383: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x01,d0                         	| [$9386: and #$01]
	jne	l_938f                             	| [$9388: jne $938f]
* walk sound?
	move.b	#0x21,d0                        	| [$938a: lda #$21]
	jbsr	queue_sound_d7b8                  	| [$938c: jsr queue_sound_d7b8]
l_938f:
	jra	l_9189                             	| [$938f: jra $9189]

l_93a2:
	GET_ADDRESS	0x031a                     	| [$93a2: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_93ef                             	| [$93a5: bmi $93ef]
	jbsr	l_a195                            	| [$93a7: jsr $a195]
	GET_ADDRESS	player_direction_032b      	| [$93aa: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$93ad: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x40,d0                        	| [$93b0: lda #$40]
	GET_ADDRESS	0x03c0                     	| [$93b2: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$93b5: ldy #$00]
	GET_ADDRESS	0x031a                     	| [$93b7: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$93ba: and #$7f]
	cmp.b	#0x0a,d0                         	| [$93bc: cmp #$0a]
	beq	l_93c2                             	| [$93be: beq $93c2]
	move.b	#0x08,d2                        	| [$93c0: ldy #$08]
l_93c2:
	clr.b	d0                               	| [$93c2: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$93c4: sta $00]
l_93c6:
	GET_ADDRESS	0x94e5                     	| [$93c6: lda $94e5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x026e                     	| [$93c9: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$93cc: iny]
	move.b	d1,d0                           	| [$93cd: txa]
	                           	| [$93ce: clc]
	add.b	#0x0d,d0                        	| [$93cf: adc #$0d]
	move.b	d0,d1                           	| [$93d1: tax]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$93d2: inc $00]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$93d4: lda $00]
	cmp.b	#0x08,d0                         	| [$93d6: cmp #$08]
	* bcc=>bcs (cmp above)
	jcs	l_93c6                             	| [$93d8: bcc $93c6]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$93da: ldx current_object_index_4c]
	move.b	#0xe7,d0                        	| [$93dc: lda #$e7]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$93de: sta $00]
	move.b	#0x93,d0                        	| [$93e0: lda #$93]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$93e2: sta $01]
	jra	l_930e                             	| [$93e4: jra $930e]
callback_93e7:
	GET_ADDRESS	player_direction_copy_0254 	| [$93e7: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_93ef                             	| [$93ea: bpl $93ef]
	jbsr	l_a169                            	| [$93ec: jsr $a169]
l_93ef:
	GET_ADDRESS	0x030e                     	| [$93ef: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$93f2: and #$10]
	beq	l_9419                             	| [$93f4: beq $9419]
	GET_ADDRESS	0x026e                     	| [$93f6: lda $026e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$93f9: pha]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$93fa: lda objects_x_speed_array_027b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$93fd: pha]
	GET_ADDRESS	0x0288                     	| [$93fe: lda $0288, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$9401: pha]
	GET_ADDRESS	0x0295                     	| [$9402: lda $0295, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$9405: pha]
	jbsr	l_a0fd                            	| [$9406: jsr $a0fd]
	move.w	(sp)+,d0                        	| [$9409: pla]
	GET_ADDRESS	0x0295                     	| [$940a: sta $0295, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$940d: pla]
	GET_ADDRESS	0x0288                     	| [$940e: sta $0288, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$9411: pla]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$9412: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$9415: pla]
	GET_ADDRESS	0x026e                     	| [$9416: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9419:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$9419: ldx current_object_index_4c]
	GET_ADDRESS	0x03c0                     	| [$941b: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$941e: and #$40]
	jne	l_942b                             	| [$9420: jne $942b]
	jbsr	player_walks_a215                 	| [$9422: jsr player_walks_a215]
	jbsr	parabolic_movement_b612           	| [$9425: jsr parabolic_movement_b612]
	jbsr	l_948b                            	| [$9428: jsr $948b]
l_942b:
	jbsr	l_9c1c                            	| [$942b: jsr $9c1c]
	GET_ADDRESS	0x02f0                     	| [$942e: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_9473                             	| [$9431: beq $9473]
	GET_ADDRESS	0x03c0                     	| [$9433: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$9436: and #$40]
	beq	l_9473                             	| [$9438: beq $9473]
	                     	| [$943a: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xbf,d0                         	| [$943d: and #$bf]
	                     	| [$943f: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$9442: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9444: clc]
	add.b	#0x10,d0                        	| [$9445: adc #$10]
	 	| [$9447: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x25,d0                        	| [$9449: lda #$25]
	jbsr	queue_sound_d7b8                  	| [$944b: jsr queue_sound_d7b8]
	GET_ADDRESS	0x030e                     	| [$944e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$9451: ora #$80]
	                     	| [$9453: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$9456: txa]
	                           	| [$9457: clc]
	add.b	#0x07,d0                        	| [$9458: adc #$07]
	move.b	d0,d2                           	| [$945a: tay]
	move.b	#0x80,d0                        	| [$945b: lda #$80]
	GET_ADDRESS	0x031a                     	| [$945d: sta $031a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	#0x30,d0                        	| [$9460: lda #$30]
	GET_ADDRESS	0x0065                     	| [$9462: sta $0065, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$9465: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9468: and #$7f]
	cmp.b	#0x0a,d0                         	| [$946a: cmp #$0a]
	jne	l_9473                             	| [$946c: jne $9473]
	move.b	#0x02,d0                        	| [$946e: lda #$02]
	jbsr	l_a2b5                            	| [$9470: jsr $a2b5]
l_9473:
	jbsr	l_9d8d                            	| [$9473: jsr $9d8d]
	jbsr	l_a0e4                            	| [$9476: jsr $a0e4]
	jcc	l_9488                             	| [$9479: bcc $9488]
	GET_ADDRESS	0x031a                     	| [$947b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$947e: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9480: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x20,d0                        	| [$9483: lda #$20]
	GET_ADDRESS	0x031a                     	| [$9485: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9488:
	jra	l_9189                             	| [$9488: jra $9189]
l_948b:
	GET_ADDRESS	0x03e0                     	| [$948b: lda $03e0]
	move.b	(a0),d0                         	| [...]
	beq	l_94e4                             	| [$948e: beq $94e4]
	cmp.b	#0x05,d0                         	| [$9490: cmp #$05]
	* bcs=>bcc
	jcc	l_94e4                             	| [$9492: bcs $94e4]
	GET_ADDRESS	0x033f                     	| [$9494: lda $033f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$9497: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_94e4                             	| [$9499: bcc $94e4]
	clr.b	d2                               	| [$949b: ldy #$00]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$949d: lda ball_logical_y_bd]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$949f: cmp objects_logical_y_array_b9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_94a5                             	| [$94a1: bcs $94a5]
	move.b	#0x01,d2                        	| [$94a3: ldy #$01]
l_94a5:
	OP_W_ON_ZP_ADDRESS	move,0x00,d2 |  [$94a5: sty $00]
	clr.b	d0                               	| [$94a7: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$94a9: sta $1b]
	move.b	#0x01,d0                        	| [$94ab: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$94ad: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$94af: lda $00]
	beq	l_94ca                             	| [$94b1: beq $94ca]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$94b3: lda $1b]
	not.b	d0                               	| [$94b5: eor #$ff]
	                           	| [$94b7: clc]
	add.b	#0x01,d0                        	| [$94b8: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$94ba: sta $1b]
	PUSH_SR                                	| [$94bc: php]
	 |  [$94bd: lda $1c]
	         	| [$94bf: eor #$ff]
	OP_NOT_ON_ZP_ADDRESS	not,0x1c |  [$94c1: sta $1c]
	POP_SR                                 	| [$94c3: plp]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$94c4: lda $1c]
	moveq	#0x00,d4	| [$94c6: adc #$00]
	addx.b	d4,d0                        	| [$94c6: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$94c8: sta $1c]
l_94ca:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$94ca: lda $1b]
	                           	| [$94cc: clc]
	GET_ADDRESS	0xab                       	| [$94cd: adc $ab, x]
	add.b	(a0,d1.w),d0                    	| [...]
	                       	| [$94cf: sta $ab, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$94d1: lda $1c]
	PUSH_SR                                	| [$94d3: php]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$94d4: adc objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$94d6: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$94d8: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$94da: adc #$00]
	addx.b	d4,d0                        	| [$94da: adc #$00]
	POP_SR                                 	| [$94dc: plp]
	bpl	l_94e2                             	| [$94dd: bpl $94e2]
	                           	| [$94df: clc]
	add.b	#0xff,d0                        	| [$94e0: adc #$ff]
l_94e2:
	GET_ADDRESS	0xc7                       	| [$94e2: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_94e4:
	rts                                    	| [$94e4: rts]

l_94f5:
	GET_ADDRESS	0x031a                     	| [$94f5: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_9515                      	| [$94f8: bmi callback_9515]
	jbsr	l_a195                            	| [$94fa: jsr $a195]
	move.b	#0x2f,d0                        	| [$94fd: lda #$2f]
	jbsr	queue_sound_d7b8                  	| [$94ff: jsr queue_sound_d7b8]
	GET_ADDRESS	0x030e                     	| [$9502: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$9505: ora #$04]
	                     	| [$9507: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x15,d0                        	| [$950a: lda #$15]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$950c: sta $00]
	move.b	#0x95,d0                        	| [$950e: lda #$95]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9510: sta $01]
	jra	l_930e                             	| [$9512: jra $930e]
callback_9515:
	jbsr	player_walks_a215                 	| [$9515: jsr player_walks_a215]
	jbsr	parabolic_movement_b612           	| [$9518: jsr parabolic_movement_b612]
	jbsr	l_948b                            	| [$951b: jsr $948b]
	jbsr	l_9d8d                            	| [$951e: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9521: jsr $9c1c]
	GET_ADDRESS	0x02f0                     	| [$9524: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$9527: cmp #$02]
	jne	l_952e                             	| [$9529: jne $952e]
* reached on start of jumped serve
	jbsr	l_bd85                            	| [$952b: jsr $bd85]
l_952e:
	jbsr	l_a0e4                            	| [$952e: jsr $a0e4]
	jcc	l_9538                             	| [$9531: bcc $9538]
	move.b	#0x20,d0                        	| [$9533: lda #$20]
	GET_ADDRESS	0x031a                     	| [$9535: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9538:
	jra	l_9189                             	| [$9538: jra $9189]
l_953b:
	GET_ADDRESS	0x031a                     	| [$953b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_954b                             	| [$953e: bmi $954b]
	jbsr	l_a195                            	| [$9540: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9543: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$9546: ora #$04]
	                     	| [$9548: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_954b:
	jbsr	l_9d8d                            	| [$954b: jsr $9d8d]
	jbsr	l_9c1c                            	| [$954e: jsr $9c1c]
	jbsr	l_bd85                            	| [$9551: jsr $bd85]
	jbsr	l_a187                            	| [$9554: jsr $a187]
	jra	l_9189                             	| [$9557: jra $9189]
l_955a:
	GET_ADDRESS	0x031a                     	| [$955a: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_958e                      	| [$955d: bmi callback_958e]
	jbsr	l_a195                            	| [$955f: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9562: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$9565: ora #$04]
	                     	| [$9567: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x40,d0                        	| [$956a: lda #$40]
	GET_ADDRESS	0x03c0                     	| [$956c: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$956f: ldy #$00]
l_9571:
	GET_ADDRESS	0x94e5                     	| [$9571: lda $94e5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x026e                     	| [$9574: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$9577: iny]
	move.b	d1,d0                           	| [$9578: txa]
	                           	| [$9579: clc]
	add.b	#0x0d,d0                        	| [$957a: adc #$0d]
	move.b	d0,d1                           	| [$957c: tax]
	cmp.b	#0x08,d2                         	| [$957d: cpy #$08]
	* bcc=>bcs (cmp above)
	jcs	l_9571                             	| [$957f: bcc $9571]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$9581: ldx current_object_index_4c]
	move.b	#0x8e,d0                        	| [$9583: lda #$8e]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9585: sta $00]
	move.b	#0x95,d0                        	| [$9587: lda #$95]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9589: sta $01]
	jra	l_930e                             	| [$958b: jra $930e]
callback_958e:
	jbsr	l_9d8d                            	| [$958e: jsr $9d8d]
	GET_ADDRESS	0x030e                     	| [$9591: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9594: and #$10]
	beq	l_95bb                             	| [$9596: beq $95bb]
	GET_ADDRESS	0x026e                     	| [$9598: lda $026e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$959b: pha]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$959c: lda objects_x_speed_array_027b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$959f: pha]
	GET_ADDRESS	0x0288                     	| [$95a0: lda $0288, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$95a3: pha]
	GET_ADDRESS	0x0295                     	| [$95a4: lda $0295, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$95a7: pha]
	jbsr	l_a0fd                            	| [$95a8: jsr $a0fd]
	move.w	(sp)+,d0                        	| [$95ab: pla]
	GET_ADDRESS	0x0295                     	| [$95ac: sta $0295, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$95af: pla]
	GET_ADDRESS	0x0288                     	| [$95b0: sta $0288, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$95b3: pla]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$95b4: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$95b7: pla]
	GET_ADDRESS	0x026e                     	| [$95b8: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_95bb:
	GET_ADDRESS	0x03c0                     	| [$95bb: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$95be: and #$40]
	jne	l_95c5                             	| [$95c0: jne $95c5]
	jbsr	parabolic_movement_b612           	| [$95c2: jsr parabolic_movement_b612]
l_95c5:
	jbsr	l_9c1c                            	| [$95c5: jsr $9c1c]
	GET_ADDRESS	0x02f0                     	| [$95c8: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$95cb: cmp #$02]
	jne	l_95d2                             	| [$95cd: jne $95d2]
	jbsr	l_bd85                            	| [$95cf: jsr $bd85]
l_95d2:
	GET_ADDRESS	0x02f0                     	| [$95d2: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_95fa                             	| [$95d5: beq $95fa]
	GET_ADDRESS	0x03c0                     	| [$95d7: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$95da: and #$40]
	beq	l_95fa                             	| [$95dc: beq $95fa]
	                     	| [$95de: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xbf,d0                         	| [$95e1: and #$bf]
	                     	| [$95e3: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$95e6: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$95e8: clc]
	add.b	#0x10,d0                        	| [$95e9: adc #$10]
	 	| [$95eb: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$95ed: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$95f0: ora #$80]
	                     	| [$95f2: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d0                        	| [$95f5: lda #$04]
	jbsr	l_a2b5                            	| [$95f7: jsr $a2b5]
l_95fa:
	jbsr	l_a0e4                            	| [$95fa: jsr $a0e4]
	jcc	l_960c                             	| [$95fd: bcc $960c]
	GET_ADDRESS	0x031a                     	| [$95ff: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9602: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9604: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x20,d0                        	| [$9607: lda #$20]
	GET_ADDRESS	0x031a                     	| [$9609: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_960c:
	jra	l_9189                             	| [$960c: jra $9189]
l_960f:
	GET_ADDRESS	0x031a                     	| [$960f: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_961d                             	| [$9612: bmi $961d]
	jbsr	l_a195                            	| [$9614: jsr $a195]
	GET_ADDRESS	player_direction_032b      	| [$9617: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x03c4                     	| [$961a: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_961d:
	GET_ADDRESS	0x03c0                     	| [$961d: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x01,d0                         	| [$9620: and #$01]
	beq	l_962e                             	| [$9622: beq $962e]
	move.b	#0x03,d0                        	| [$9624: lda #$03]
	GET_ADDRESS	0x02fd                     	| [$9626: sta $02fd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$9629: lda #$02]
	GET_ADDRESS	0x02f0                     	| [$962b: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_962e:
	jbsr	l_a0fd                            	| [$962e: jsr $a0fd]
	jbsr	l_9d8d                            	| [$9631: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9634: jsr $9c1c]
	jbsr	l_a187                            	| [$9637: jsr $a187]
	GET_ADDRESS	0x02f0                     	| [$963a: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$963d: cmp #$01]
	jne	l_9647                             	| [$963f: jne $9647]
	jbsr	l_9d8d                            	| [$9641: jsr $9d8d]
	jbsr	l_bd85                            	| [$9644: jsr $bd85]
l_9647:
	jra	l_9189                             	| [$9647: jra $9189]
l_964a:
	GET_ADDRESS	0x031a                     	| [$964a: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9658                             	| [$964d: bmi $9658]
	jbsr	l_a195                            	| [$964f: jsr $a195]
	GET_ADDRESS	player_direction_032b      	| [$9652: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$9655: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9658:
	GET_ADDRESS	0x02f0                     	| [$9658: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$965b: cmp #$03]
	jne	l_96b7                             	| [$965d: jne $96b7]
	jbsr	player_walks_a215                 	| [$965f: jsr player_walks_a215]
	jcs	l_9667                             	| [$9662: bcs $9667]
	jbsr	l_b5c2                            	| [$9664: jsr $b5c2]
l_9667:
	GET_ADDRESS	0x03c0                     	| [$9667: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$966a: and #$20]
	jne	l_9680                             	| [$966c: jne $9680]
	move.b	#0x09,d0                        	| [$966e: lda #$09]
	jbsr	l_a2b5                            	| [$9670: jsr $a2b5]
	move.b	#0x22,d0                        	| [$9673: lda #$22]
	jbsr	queue_sound_d7b8                  	| [$9675: jsr queue_sound_d7b8]
	GET_ADDRESS	0x03c0                     	| [$9678: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x20,d0                          	| [$967b: ora #$20]
	                     	| [$967d: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9680:
	GET_ADDRESS	0x0261                     	| [$9680: lda $0261, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9683: sec]
	sub.b	#0x08,d0	| [$9684: sbc #$08]
	                     	| [$9686: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	SET_C_FROM_X
	jcs	l_9698                             	| [$9689: bcs $9698]
	clr.b	d0                               	| [$968b: lda #$00]
	GET_ADDRESS	0x0261                     	| [$968d: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$9690: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$9693: and #$ef]
	                     	| [$9695: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9698:
	GET_ADDRESS	0x030e                     	| [$9698: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$969b: and #$10]
	jne	l_96ba                             	| [$969d: jne $96ba]
	GET_ADDRESS	0x031a                     	| [$969f: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$96a2: and #$7f]
	GET_ADDRESS	0x032f                     	| [$96a4: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x24,d0                        	| [$96a7: lda #$24]
	GET_ADDRESS	0x031a                     	| [$96a9: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$96ac: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xbf,d0                         	| [$96af: and #$bf]
	                     	| [$96b1: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_96e6                             	| [$96b4: jra $96e6]
l_96b7:
	jbsr	l_a0fd                            	| [$96b7: jsr $a0fd]
l_96ba:
	jbsr	l_9d8d                            	| [$96ba: jsr $9d8d]
	jbsr	l_9c1c                            	| [$96bd: jsr $9c1c]
	GET_ADDRESS	0x02f0                     	| [$96c0: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_96cb                             	| [$96c3: beq $96cb]
	jbsr	l_9d8d                            	| [$96c5: jsr $9d8d]
	jbsr	l_bd85                            	| [$96c8: jsr $bd85]
l_96cb:
	GET_ADDRESS	0x02f0                     	| [$96cb: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$96ce: cmp #$03]
	jne	l_96e6                             	| [$96d0: jne $96e6]
	GET_ADDRESS	0x030e                     	| [$96d2: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$96d5: and #$10]
	jne	l_96e6                             	| [$96d7: jne $96e6]
	move.b	#0x30,d0                        	| [$96d9: lda #$30]
	GET_ADDRESS	0x0261                     	| [$96db: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$96de: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$96e1: ora #$10]
	                     	| [$96e3: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_96e6:
	jra	l_9189                             	| [$96e6: jra $9189]
l_96e9:
	GET_ADDRESS	0x031a                     	| [$96e9: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_972d                             	| [$96ec: bmi $972d]
	jbsr	l_a195                            	| [$96ee: jsr $a195]
	jbsr	l_97e6                            	| [$96f1: jsr $97e6]
	GET_ADDRESS	player_direction_032b      	| [$96f4: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$96f7: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$96fa: clc]
	add.b	#0x10,d0                        	| [$96fb: adc #$10]
	and.b	#0xe0,d0                         	| [$96fd: and #$e0]
                                         | [$96ff: lsr a]
                                         | [$9700: lsr a]
                                         | [$9701: lsr a]
                                         | [$9702: lsr a]
	lsr.b	#5,d0                            	| [$9703: lsr a]
	move.b	d0,d2                           	| [$9704: tay]
	GET_ADDRESS	0x030e                     	| [$9705: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9708: and #$10]
	jne	l_9714                             	| [$970a: jne $9714]
	GET_INDIRECT_ADDRESS	0x1b              	| [$970c: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$970e: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9719                             	| [$9711: jra $9719]
l_9714:
	GET_INDIRECT_ADDRESS	0x1b              	| [$9714: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02e3                     	| [$9716: sta $02e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9719:
	clr.b	d2                               	| [$9719: ldy #$00]
l_971b:
	GET_ADDRESS	0x984a                     	| [$971b: lda $984a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02a2                     	| [$971e: sta $02a2, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$9721: txa]
	                           	| [$9722: clc]
	add.b	#0x0d,d0                        	| [$9723: adc #$0d]
	move.b	d0,d1                           	| [$9725: tax]
	addq.b	#1,d2                           	| [$9726: iny]
	cmp.b	#0x04,d2                         	| [$9727: cpy #$04]
	* bcc=>bcs (cmp above)
	jcs	l_971b                             	| [$9729: bcc $971b]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$972b: ldx current_object_index_4c]
l_972d:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$972d: ldx current_object_index_4c]
	GET_ADDRESS	0x02f0                     	| [$972f: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$9732: cmp #$03]
	jne	l_97a8                             	| [$9734: jne $97a8]
	GET_ADDRESS	0x030e                     	| [$9736: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9739: and #$10]
	beq	l_9786                             	| [$973b: beq $9786]
	GET_ADDRESS	0x03c0                     	| [$973d: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$9740: and #$20]
	jne	l_9756                             	| [$9742: jne $9756]
	move.b	#0x09,d0                        	| [$9744: lda #$09]
	jbsr	l_a2b5                            	| [$9746: jsr $a2b5]
	move.b	#0x22,d0                        	| [$9749: lda #$22]
	jbsr	queue_sound_d7b8                  	| [$974b: jsr queue_sound_d7b8]
	GET_ADDRESS	0x03c0                     	| [$974e: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x20,d0                          	| [$9751: ora #$20]
	                     	| [$9753: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9756:
	jbsr	player_walks_a215                 	| [$9756: jsr player_walks_a215]
	jcs	l_975e                             	| [$9759: bcs $975e]
	jbsr	l_b5c2                            	| [$975b: jsr $b5c2]
l_975e:
	GET_ADDRESS	0x0261                     	| [$975e: lda $0261, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9761: sec]
	sub.b	#0x08,d0	| [$9762: sbc #$08]
	                     	| [$9764: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	SET_C_FROM_X
	jcs	l_97e0                             	| [$9767: bcs $97e0]
	clr.b	d0                               	| [$9769: lda #$00]
	                     	| [$976b: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$976e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$9771: and #$ef]
	                     	| [$9773: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$9776: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9779: and #$7f]
	GET_ADDRESS	0x032f                     	| [$977b: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x24,d0                        	| [$977e: lda #$24]
	GET_ADDRESS	0x031a                     	| [$9780: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_97e3                             	| [$9783: jra $97e3]
l_9786:
	jbsr	player_walks_a215                 	| [$9786: jsr player_walks_a215]
	jcs	l_978e                             	| [$9789: bcs $978e]
	jbsr	l_b5c2                            	| [$978b: jsr $b5c2]
l_978e:
	jbsr	l_a139                            	| [$978e: jsr $a139]
	jbsr	l_a0e4                            	| [$9791: jsr $a0e4]
	jcc	l_97e0                             	| [$9794: bcc $97e0]
	GET_ADDRESS	0x030e                     	| [$9796: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9799: and #$7f]
	or.b	#0x10,d0                          	| [$979b: ora #$10]
	                     	| [$979d: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x40,d0                        	| [$97a0: lda #$40]
	GET_ADDRESS	0x0261                     	| [$97a2: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_97e0                             	| [$97a5: jra $97e0]
l_97a8:
	GET_ADDRESS	0x030e                     	| [$97a8: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$97ab: and #$10]
	beq	l_97bf                             	| [$97ad: beq $97bf]
	jbsr	l_a0fd                            	| [$97af: jsr $a0fd]
	GET_ADDRESS	0x030e                     	| [$97b2: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$97b5: and #$10]
	jne	l_97bf                             	| [$97b7: jne $97bf]
	GET_ADDRESS	0x02e3                     	| [$97b9: lda $02e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$97bc: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_97bf:
	jbsr	l_9c1c                            	| [$97bf: jsr $9c1c]
	GET_ADDRESS	0x02f0                     	| [$97c2: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_97cd                             	| [$97c5: beq $97cd]
	jbsr	l_9d8d                            	| [$97c7: jsr $9d8d]
	jbsr	l_bd85                            	| [$97ca: jsr $bd85]
l_97cd:
	GET_ADDRESS	0x02f0                     	| [$97cd: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$97d0: cmp #$03]
	jne	l_97e0                             	| [$97d2: jne $97e0]
	GET_ADDRESS	0x02d6                     	| [$97d4: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_97e0                             	| [$97d7: jne $97e0]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$97d9: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$97db: clc]
	add.b	#0x10,d0                        	| [$97dc: adc #$10]
	 	| [$97de: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_97e0:
	jbsr	l_9d8d                            	| [$97e0: jsr $9d8d]
l_97e3:
	jra	l_9189                             	| [$97e3: jra $9189]
l_97e6:
	move.b	#0x01,d2                        	| [$97e6: ldy #$01]
	cmp.b	#0x02,d1                         	| [$97e8: cpx #$02]
	* bcs=>bcc
	jcc	l_97ed                             	| [$97ea: bcs $97ed]
	subq.b	#1,d2                           	| [$97ec: dey]
l_97ed:
	GET_ADDRESS	0x0047                     	| [$97ed: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_97f9                             	| [$97f0: bpl $97f9]
	move.b	#0x03,d0                        	| [$97f2: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$97f4: sta $1b]
	jra	l_9809                             	| [$97f6: jra $9809]
l_97f9:
	move.b	#0x03,d2                        	| [$97f9: ldy #$03]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$97fb: lda current_level_38]
	and.b	#0xf0,d0                         	| [$97fd: and #$f0]
	jne	l_9806                             	| [$97ff: jne $9806]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$9801: lda current_level_38]
	and.b	#0x0f,d0                         	| [$9803: and #$0f]
	move.b	d0,d2                           	| [$9805: tay]
l_9806:
	move.b	d2,d0                           	| [$9806: tya]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9807: sta $1b]
l_9809:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9809: lda $1b]
	asl.b	#1,d0                            	| [$980b: asl a]
	move.b	d0,d2                           	| [$980c: tay]
	GET_ADDRESS	0x9818                     	| [$980d: lda $9818, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9810: sta $1b]
	GET_ADDRESS	0x9819                     	| [$9812: lda $9819, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$9815: sta $1c]
	rts                                    	| [$9817: rts]

l_984e:
	GET_ADDRESS	0x031a                     	| [$984e: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9856                             	| [$9851: bmi $9856]
	jbsr	l_a195                            	| [$9853: jsr $a195]
l_9856:
	jbsr	l_a0fd                            	| [$9856: jsr $a0fd]
	jbsr	l_9d8d                            	| [$9859: jsr $9d8d]
	jbsr	l_9c1c                            	| [$985c: jsr $9c1c]
	jbsr	l_a187                            	| [$985f: jsr $a187]
	GET_ADDRESS	0x02f0                     	| [$9862: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$9865: cmp #$02]
	beq	l_986f                             	| [$9867: beq $986f]
	jbsr	l_9d8d                            	| [$9869: jsr $9d8d]
	jbsr	l_bd85                            	| [$986c: jsr $bd85]
l_986f:
	jra	l_9189                             	| [$986f: jra $9189]
l_9872:
	GET_ADDRESS	0x031a                     	| [$9872: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_98bc                             	| [$9875: bmi $98bc]
	jbsr	l_a195                            	| [$9877: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$987a: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$987d: and #$ef]
	                     	| [$987f: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_97e6                            	| [$9882: jsr $97e6]
	GET_ADDRESS	player_direction_032b      	| [$9885: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$9888: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$988b: clc]
	add.b	#0x10,d0                        	| [$988c: adc #$10]
	and.b	#0xe0,d0                         	| [$988e: and #$e0]
                                         | [$9890: lsr a]
                                         | [$9891: lsr a]
                                         | [$9892: lsr a]
                                         | [$9893: lsr a]
	lsr.b	#5,d0                            	| [$9894: lsr a]
	move.b	d0,d2                           	| [$9895: tay]
	GET_ADDRESS	0x030e                     	| [$9896: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9899: and #$10]
	jne	l_98a5                             	| [$989b: jne $98a5]
	GET_INDIRECT_ADDRESS	0x1b              	| [$989d: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$989f: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_98aa                             	| [$98a2: jra $98aa]
l_98a5:
	GET_INDIRECT_ADDRESS	0x1b              	| [$98a5: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02e3                     	| [$98a7: sta $02e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_98aa:
	clr.b	d2                               	| [$98aa: ldy #$00]
l_98ac:
	GET_ADDRESS	0x996c                     	| [$98ac: lda $996c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02a2                     	| [$98af: sta $02a2, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$98b2: txa]
	                           	| [$98b3: clc]
	add.b	#0x0d,d0                        	| [$98b4: adc #$0d]
	move.b	d0,d1                           	| [$98b6: tax]
	addq.b	#1,d2                           	| [$98b7: iny]
	cmp.b	#0x04,d2                         	| [$98b8: cpy #$04]
	* bcc=>bcs (cmp above)
	jcs	l_98ac                             	| [$98ba: bcc $98ac]
l_98bc:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$98bc: ldx current_object_index_4c]
	jbsr	l_9d8d                            	| [$98be: jsr $9d8d]
	jbsr	l_bd85                            	| [$98c1: jsr $bd85]
	GET_ADDRESS	0x02f0                     	| [$98c4: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$98c7: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_9944                             	| [$98c9: bcc $9944]
	GET_ADDRESS	0x030e                     	| [$98cb: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$98ce: and #$10]
	beq	l_9922                             	| [$98d0: beq $9922]
	GET_ADDRESS	0x03c0                     	| [$98d2: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$98d5: and #$20]
	jne	l_98f2                             	| [$98d7: jne $98f2]
	GET_ADDRESS	0x031a                     	| [$98d9: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$98dc: sec]
	sub.b	#0x13,d0	| [$98dd: sbc #$13]
	                           	| [$98df: clc]
	add.b	#0x07,d0                        	| [$98e0: adc #$07]
	jbsr	l_a2b5                            	| [$98e2: jsr $a2b5]
	move.b	#0x22,d0                        	| [$98e5: lda #$22]
	jbsr	queue_sound_d7b8                  	| [$98e7: jsr queue_sound_d7b8]
	GET_ADDRESS	0x03c0                     	| [$98ea: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x20,d0                          	| [$98ed: ora #$20]
	                     	| [$98ef: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_98f2:
	jbsr	player_walks_a215                 	| [$98f2: jsr player_walks_a215]
	jcs	l_98fa                             	| [$98f5: bcs $98fa]
	jbsr	l_b5c2                            	| [$98f7: jsr $b5c2]
l_98fa:
	GET_ADDRESS	0x0261                     	| [$98fa: lda $0261, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$98fd: sec]
	sub.b	#0x04,d0	| [$98fe: sbc #$04]
	                     	| [$9900: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	SET_C_FROM_X
	jcs	l_995e                             	| [$9903: bcs $995e]
	clr.b	d0                               	| [$9905: lda #$00]
	GET_ADDRESS	0x0261                     	| [$9907: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$990a: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$990d: and #$ef]
	                     	| [$990f: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$9912: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9915: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9917: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x24,d0                        	| [$991a: lda #$24]
	GET_ADDRESS	0x031a                     	| [$991c: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9961                             	| [$991f: jra $9961]
l_9922:
	jbsr	player_walks_a215                 	| [$9922: jsr player_walks_a215]
	jcs	l_992a                             	| [$9925: bcs $992a]
	jbsr	l_b5c2                            	| [$9927: jsr $b5c2]
l_992a:
	jbsr	l_a139                            	| [$992a: jsr $a139]
	jbsr	l_a0e4                            	| [$992d: jsr $a0e4]
	jcc	l_995b                             	| [$9930: bcc $995b]
	GET_ADDRESS	0x030e                     	| [$9932: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9935: and #$7f]
	or.b	#0x10,d0                          	| [$9937: ora #$10]
	                     	| [$9939: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x20,d0                        	| [$993c: lda #$20]
	GET_ADDRESS	0x0261                     	| [$993e: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_995e                             	| [$9941: jra $995e]
l_9944:
	GET_ADDRESS	0x030e                     	| [$9944: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9947: and #$10]
	beq	l_995b                             	| [$9949: beq $995b]
	jbsr	l_a0fd                            	| [$994b: jsr $a0fd]
	GET_ADDRESS	0x030e                     	| [$994e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$9951: and #$10]
	jne	l_995b                             	| [$9953: jne $995b]
	GET_ADDRESS	0x02e3                     	| [$9955: lda $02e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$9958: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_995b:
	jbsr	l_9c1c                            	| [$995b: jsr $9c1c]
l_995e:
	jbsr	l_9d8d                            	| [$995e: jsr $9d8d]
l_9961:
	jra	l_9189                             	| [$9961: jra $9189]

l_9970:
	GET_ADDRESS	0x031a                     	| [$9970: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9978                             	| [$9973: bmi $9978]
	jbsr	l_a195                            	| [$9975: jsr $a195]
l_9978:
	jbsr	l_9d8d                            	| [$9978: jsr $9d8d]
	jbsr	l_9c1c                            	| [$997b: jsr $9c1c]
	jbsr	l_a187                            	| [$997e: jsr $a187]
	jbsr	l_9d8d                            	| [$9981: jsr $9d8d]
	jbsr	l_bd85                            	| [$9984: jsr $bd85]
	jra	l_9189                             	| [$9987: jra $9189]
l_998a:
	GET_ADDRESS	0x031a                     	| [$998a: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_999d                             	| [$998d: bmi $999d]
	jbsr	l_a195                            	| [$998f: jsr $a195]
	move.b	#0x9d,d0                        	| [$9992: lda #$9d]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9994: sta $00]
	move.b	#0x99,d0                        	| [$9996: lda #$99]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9998: sta $01]
	jra	l_930e                             	| [$999a: jra $930e]
callback_999d:
l_999d:
	jbsr	l_9d8d                            	| [$999d: jsr $9d8d]
	NEW_ADDRESS
	GET_ADDRESS	0x023a                     	| [$99a0: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$99a3: ora #$80]
	                     	| [$99a5: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9189                             	| [$99a8: jra $9189]
l_99ab:
	GET_ADDRESS	0x031a                     	| [$99ab: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_99be                      	| [$99ae: bmi callback_99be]
	jbsr	l_a195                            	| [$99b0: jsr $a195]
	move.b	#0xbe,d0                        	| [$99b3: lda #$be]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$99b5: sta $00]
	move.b	#0x99,d0                        	| [$99b7: lda #$99]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$99b9: sta $01]
	jra	l_930e                             	| [$99bb: jra $930e]
callback_99be:
	GET_ADDRESS	player_direction_032b      	| [$99be: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$99c1: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x10,d0                        	| [$99c4: lda #$10]
	GET_ADDRESS	0x0261                     	| [$99c6: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	player_walks_a215                 	| [$99c9: jsr player_walks_a215]
	jcs	l_99d1                             	| [$99cc: bcs $99d1]
	jbsr	l_b5c2                            	| [$99ce: jsr $b5c2]
l_99d1:
	jbsr	l_9d8d                            	| [$99d1: jsr $9d8d]
	GET_ADDRESS	0x023a                     	| [$99d4: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$99d7: ora #$80]
	                     	| [$99d9: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9189                             	| [$99dc: jra $9189]
l_99df:
	GET_ADDRESS	0x031a                     	| [$99df: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_99f2                      	| [$99e2: bmi callback_99f2]
	jbsr	l_a195                            	| [$99e4: jsr $a195]
	move.b	#0xf2,d0                        	| [$99e7: lda #$f2]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$99e9: sta $00]
	move.b	#0x99,d0                        	| [$99eb: lda #$99]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$99ed: sta $01]
	jra	l_930e                             	| [$99ef: jra $930e]
callback_99f2:
	jbsr	l_9d8d                            	| [$99f2: jsr $9d8d]
	GET_ADDRESS	0x02f0                     	| [$99f5: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$99f8: cmp #$02]
	jne	l_9a02                             	| [$99fa: jne $9a02]
	jbsr	l_9d8d                            	| [$99fc: jsr $9d8d]
	jbsr	l_bd85                            	| [$99ff: jsr $bd85]
l_9a02:
	GET_ADDRESS	0x023a                     	| [$9a02: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$9a05: ora #$80]
	                     	| [$9a07: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$9a0a: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$9a0d: cmp #$02]
	jne	l_9a1c                             	| [$9a0f: jne $9a1c]
	GET_ADDRESS	0x030e                     	| [$9a11: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf7,d0                         	| [$9a14: and #$f7]
	                     	| [$9a16: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9a1f                             	| [$9a19: jra $9a1f]
l_9a1c:
	jbsr	l_9c1c                            	| [$9a1c: jsr $9c1c]
l_9a1f:
	jra	l_9189                             	| [$9a1f: jra $9189]
l_9a22:
	GET_ADDRESS	0x031a                     	| [$9a22: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_9a3d                      	| [$9a25: bmi callback_9a3d]
	jbsr	l_a195                            	| [$9a27: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9a2a: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$9a2d: ora #$04]
	                     	| [$9a2f: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x3d,d0                        	| [$9a32: lda #$3d]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9a34: sta $00]
	move.b	#0x9a,d0                        	| [$9a36: lda #$9a]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9a38: sta $01]
	jra	l_930e                             	| [$9a3a: jra $930e]
* normal serve sequence
callback_9a3d:
	jbsr	l_9d8d                            	| [$9a3d: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9a40: jsr $9c1c]
	jbsr	l_a187                            	| [$9a43: jsr $a187]
	GET_ADDRESS	0x02f0                     	| [$9a46: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$9a49: cmp #$02]
	jne	l_9a55                             	| [$9a4b: jne $9a55]
	GET_ADDRESS	0x02d6                     	| [$9a4d: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_9a55                             	| [$9a50: beq $9a55]
* normal non-jumped serve start
	jbsr	l_bd85                            	| [$9a52: jsr $bd85]
l_9a55:
	jra	l_9189                             	| [$9a55: jra $9189]
l_9a58:
	GET_ADDRESS	0x031a                     	| [$9a58: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9a68                             	| [$9a5b: bmi $9a68]
	jbsr	l_a195                            	| [$9a5d: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9a60: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$9a63: ora #$04]
	                     	| [$9a65: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9a68:
	GET_ADDRESS	0x02f0                     	| [$9a68: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_9a98                             	| [$9a6b: jne $9a98]
	GET_ADDRESS	0x02d6                     	| [$9a6d: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$9a70: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x10,d0                         	| [$9a73: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_9ab8                             	| [$9a75: bcc $9ab8]
	clr.b	d0                               	| [$9a77: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$9a79: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$9a7c: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x01,d0                         	| [$9a7f: eor #$01]
	                     	| [$9a81: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$9a84: ldy #$00]
l_9a86:
	GET_ADDRESS	0x9abe                     	| [$9a86: lda $9abe, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x026e                     	| [$9a89: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$9a8c: txa]
	                           	| [$9a8d: clc]
	add.b	#0x0d,d0                        	| [$9a8e: adc #$0d]
	move.b	d0,d1                           	| [$9a90: tax]
	addq.b	#1,d2                           	| [$9a91: iny]
	cmp.b	#0x08,d2                         	| [$9a92: cpy #$08]
	* bcc=>bcs (cmp above)
	jcs	l_9a86                             	| [$9a94: bcc $9a86]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$9a96: ldx current_object_index_4c]
l_9a98:
	jbsr	parabolic_movement_b612           	| [$9a98: jsr parabolic_movement_b612]
	GET_ADDRESS	0x030e                     	| [$9a9b: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$9a9e: ora #$80]
	                     	| [$9aa0: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_a0e4                            	| [$9aa3: jsr $a0e4]
	jcc	l_9ab8                             	| [$9aa6: bcc $9ab8]
	GET_ADDRESS	0x02f0                     	| [$9aa8: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x01,d0                         	| [$9aab: eor #$01]
	                     	| [$9aad: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$9ab0: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9ab3: and #$7f]
	                     	| [$9ab5: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9ab8:
	jbsr	l_9d8d                            	| [$9ab8: jsr $9d8d]
	jra	l_9189                             	| [$9abb: jra $9189]

l_9ac6:
	GET_ADDRESS	0x031a                     	| [$9ac6: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9ace                             	| [$9ac9: bmi $9ace]
	jbsr	l_a195                            	| [$9acb: jsr $a195]
l_9ace:
	jbsr	l_9d8d                            	| [$9ace: jsr $9d8d]
	jra	l_9189                             	| [$9ad1: jra $9189]
l_9ad4:
	GET_ADDRESS	0x031a                     	| [$9ad4: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9adf                             	| [$9ad7: bmi $9adf]
	jbsr	l_a195                            	| [$9ad9: jsr $a195]
	jbsr	l_aca6                            	| [$9adc: jsr $aca6]
l_9adf:
	jbsr	l_9d8d                            	| [$9adf: jsr $9d8d]
	jra	l_9189                             	| [$9ae2: jra $9189]
l_9ae5:
	GET_ADDRESS	0x031a                     	| [$9ae5: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9af2                             	| [$9ae8: bmi $9af2]
	jbsr	l_a195                            	| [$9aea: jsr $a195]
	move.b	#0x03,d0                        	| [$9aed: lda #$03]
	jbsr	l_a2b5                            	| [$9aef: jsr $a2b5]
l_9af2:
	jbsr	l_9d8d                            	| [$9af2: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9af5: jsr $9c1c]
	jbsr	l_a187                            	| [$9af8: jsr $a187]
	jra	l_9189                             	| [$9afb: jra $9189]
l_9afe:
	GET_ADDRESS	0x031a                     	| [$9afe: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9b06                             	| [$9b01: bmi $9b06]
	jbsr	l_a195                            	| [$9b03: jsr $a195]
l_9b06:
	jbsr	l_9d8d                            	| [$9b06: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9b09: jsr $9c1c]
	jra	l_9189                             	| [$9b0c: jra $9189]
l_9b0f:
	GET_ADDRESS	0x031a                     	| [$9b0f: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9b6f                             	| [$9b12: bmi $9b6f]
	jbsr	l_a195                            	| [$9b14: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9b17: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$9b1a: ora #$40]
	                     	| [$9b1c: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$9b1f: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9b22: clc]
	add.b	#0x10,d0                        	| [$9b23: adc #$10]
	and.b	#0xe0,d0                         	| [$9b25: and #$e0]
                                         | [$9b27: lsr a]
                                         | [$9b28: lsr a]
                                         | [$9b29: lsr a]
                                         | [$9b2a: lsr a]
	lsr.b	#5,d0                            	| [$9b2b: lsr a]
	move.b	d0,d2                           	| [$9b2c: tay]
	GET_ADDRESS	0x9baa                     	| [$9b2d: lda $9baa, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0261                     	| [$9b30: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$9b33: ldy #$00]
	GET_ADDRESS	0x0333                     	| [$9b35: lda $0333, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_9b3c                             	| [$9b38: beq $9b3c]
	move.b	#0x04,d2                        	| [$9b3a: ldy #$04]
l_9b3c:
	move.b	#0x03,d0                        	| [$9b3c: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9b3e: sta $00]
l_9b40:
	GET_ADDRESS	0x9ba2                     	| [$9b40: lda $9ba2, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02a2                     	| [$9b43: sta $02a2, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$9b46: iny]
	move.b	d1,d0                           	| [$9b47: txa]
	                           	| [$9b48: clc]
	add.b	#0x0d,d0                        	| [$9b49: adc #$0d]
	move.b	d0,d1                           	| [$9b4b: tax]
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$9b4c: dec $00]
	bpl	l_9b40                             	| [$9b4e: bpl $9b40]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$9b50: ldx current_object_index_4c]
	GET_ADDRESS	player_direction_copy_0254 	| [$9b52: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_9b5a                             	| [$9b55: bpl $9b5a]
	jbsr	l_a169                            	| [$9b57: jsr $a169]
l_9b5a:
	GET_ADDRESS	0x032f                     	| [$9b5a: lda $032f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x0f,d0                         	| [$9b5d: cmp #$0f]
	beq	l_9b66                             	| [$9b5f: beq $9b66]
	move.b	#0x01,d0                        	| [$9b61: lda #$01]
	GET_ADDRESS	0x02f0                     	| [$9b63: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9b66:
	GET_ADDRESS	player_direction_copy_0254 	| [$9b66: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9b69: clc]
	add.b	#0x80,d0                        	| [$9b6a: adc #$80]
	GET_ADDRESS	0x03c4                     	| [$9b6c: sta $03c4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9b6f:
	GET_ADDRESS	0x02f0                     	| [$9b6f: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_9b94                             	| [$9b72: beq $9b94]
	jbsr	player_walks_a215                 	| [$9b74: jsr player_walks_a215]
	jcs	l_9b7c                             	| [$9b77: bcs $9b7c]
	jbsr	l_b5c2                            	| [$9b79: jsr $b5c2]
l_9b7c:
	jbsr	l_a139                            	| [$9b7c: jsr $a139]
	jbsr	l_a0e4                            	| [$9b7f: jsr $a0e4]
	jcc	l_9b94                             	| [$9b82: bcc $9b94]
	GET_ADDRESS	0x031a                     	| [$9b84: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9b87: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9b89: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x23,d0                        	| [$9b8c: lda #$23]
	GET_ADDRESS	0x031a                     	| [$9b8e: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9b9f                             	| [$9b91: jra $9b9f]
l_9b94:
	jbsr	l_9d8d                            	| [$9b94: jsr $9d8d]
	GET_ADDRESS	0x02f0                     	| [$9b97: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_9b9f                             	| [$9b9a: jne $9b9f]
	jbsr	l_9c1c                            	| [$9b9c: jsr $9c1c]
l_9b9f:
	jra	l_9189                             	| [$9b9f: jra $9189]

l_9bb2:
	GET_ADDRESS	0x031a                     	| [$9bb2: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9bbf                             	| [$9bb5: bmi $9bbf]
	jbsr	l_a195                            	| [$9bb7: jsr $a195]
	move.b	#0x23,d0                        	| [$9bba: lda #$23]
	jbsr	queue_sound_d7b8                  	| [$9bbc: jsr queue_sound_d7b8]
l_9bbf:
	jbsr	l_9d8d                            	| [$9bbf: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9bc2: jsr $9c1c]
	GET_ADDRESS	0x02d6                     	| [$9bc5: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_9bd7                             	| [$9bc8: jne $9bd7]
	GET_ADDRESS	0x031a                     	| [$9bca: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9bcd: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9bcf: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x24,d0                        	| [$9bd2: lda #$24]
	GET_ADDRESS	0x031a                     	| [$9bd4: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9bd7:
	jra	l_9189                             	| [$9bd7: jra $9189]
l_9bda:
	GET_ADDRESS	0x031a                     	| [$9bda: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9be2                             	| [$9bdd: bmi $9be2]
	jbsr	l_a195                            	| [$9bdf: jsr $a195]
l_9be2:
	jbsr	l_9d8d                            	| [$9be2: jsr $9d8d]
	jbsr	l_9c1c                            	| [$9be5: jsr $9c1c]
	jbsr	l_a187                            	| [$9be8: jsr $a187]
	GET_ADDRESS	0x031a                     	| [$9beb: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_9bf8                             	| [$9bee: bmi $9bf8]
	GET_ADDRESS	0x030e                     	| [$9bf0: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xbf,d0                         	| [$9bf3: and #$bf]
	                     	| [$9bf5: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9bf8:
	jra	l_9189                             	| [$9bf8: jra $9189]

l_9bfb:
	GET_ADDRESS	0x031a                     	| [$9bfb: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	callback_9c16                      	| [$9bfe: bmi callback_9c16]
	jbsr	l_a195                            	| [$9c00: jsr $a195]
	GET_ADDRESS	0x030e                     	| [$9c03: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$9c06: and #$ef]
	                     	| [$9c08: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x16,d0                        	| [$9c0b: lda #$16]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$9c0d: sta $00]
	move.b	#0x9c,d0                        	| [$9c0f: lda #$9c]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$9c11: sta $01]
	jra	l_92f0                             	| [$9c13: jra $92f0]
callback_9c16:
	jbsr	l_9d8d                            	| [$9c16: jsr $9d8d]
	jra	l_9189                             	| [$9c19: jra $9189]
l_9c1c:
	GET_ADDRESS	0x031a                     	| [$9c1c: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9c1f: and #$7f]
                                         | [$9c21: asl a]
	asl.b	#2,d0                            	| [$9c22: asl a]
	move.b	d0,d2                           	| [$9c23: tay]
	GET_ADDRESS	0x03c0                     	| [$9c24: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_9c2b                             	| [$9c27: bpl $9c2b]
                                         | [$9c29: iny]
	addq.b	#2,d2                           	| [$9c2a: iny]
l_9c2b:
	GET_ADDRESS	0x9cab                     	| [$9c2b: lda $9cab, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9c2e: sta $1b]
	GET_ADDRESS	0x9cac                     	| [$9c30: lda $9cac, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$9c33: sta $1c]
	GET_ADDRESS	0x02f0                     	| [$9c35: ldy $02f0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_INDIRECT_ADDRESS	0x1b              	| [$9c38: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9c3a: sta $1b]
	GET_ADDRESS	0x02d6                     	| [$9c3c: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$9c3f: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$9c42: cmp $1b]
	* bcc=>bcs (cmp above)
	jcs	l_9c83                             	| [$9c44: bcc $9c83]
	clr.b	d0                               	| [$9c46: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$9c48: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$9c4b: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$9c4e: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x02fd                     	| [$9c51: cmp $02fd, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_9c83                             	| [$9c54: bcc $9c83]
	clr.b	d0                               	| [$9c56: lda #$00]
	GET_ADDRESS	0x02f0                     	| [$9c58: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$9c5b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9c5e: and #$7f]
	cmp.b	#0x21,d0                         	| [$9c60: cmp #$21]
	beq	l_9c68                             	| [$9c62: beq $9c68]
	cmp.b	#0x25,d0                         	| [$9c64: cmp #$25]
	jne	l_9c6b                             	| [$9c66: jne $9c6b]
l_9c68:
	GET_ADDRESS	0x02e3                     	| [$9c68: inc $02e3, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_9c6b:
	GET_ADDRESS	0x031a                     	| [$9c6b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9c6e: and #$7f]
	move.b	d0,d2                           	| [$9c70: tay]
	GET_ADDRESS	0x9c84                     	| [$9c71: lda $9c84, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_9c83                             	| [$9c74: jne $9c83]
	GET_ADDRESS	0x031a                     	| [$9c76: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9c79: and #$7f]
	GET_ADDRESS	0x032f                     	| [$9c7b: sta $032f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$9c7e: lda #$01]
	GET_ADDRESS	0x031a                     	| [$9c80: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9c83:
	rts                                    	| [$9c83: rts]

l_9d8d:
	GET_ADDRESS	0x031a                     	| [$9d8d: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$9d90: and #$7f]
                                         | [$9d92: asl a]
	asl.b	#2,d0                            	| [$9d93: asl a]
	move.b	d0,d2                           	| [$9d94: tay]
	GET_ADDRESS	0x03c0                     	| [$9d95: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_9d9c                             	| [$9d98: bpl $9d9c]
                                         | [$9d9a: iny]
	addq.b	#2,d2                           	| [$9d9b: iny]
l_9d9c:
	GET_ADDRESS	0x9e10                     	| [$9d9c: lda $9e10, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9d9f: sta $1b]
	GET_ADDRESS	0x9e11                     	| [$9da1: lda $9e11, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$9da4: sta $1c]
	GET_ADDRESS	0x03c4                     	| [$9da6: lda $03c4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9da9: clc]
	add.b	#0x10,d0                        	| [$9daa: adc #$10]
                                         | [$9dac: lsr a]
                                         | [$9dad: lsr a]
                                         | [$9dae: lsr a]
                                         | [$9daf: lsr a]
	lsr.b	#5,d0                            	| [$9db0: lsr a]
	beq	l_9dcc                             	| [$9db1: beq $9dcc]
	                           	| [$9db3: sec]
	sub.b	#0x01,d0	| [$9db4: sbc #$01]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$9db6: sta base_screen_pointer_list_001d]
	GET_ADDRESS	0x02fd                     	| [$9db8: lda $02fd, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$9dbb: sta $1e]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$9dbd: sta $1f]
l_9dbf:
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$9dbf: lda $1e]
	                           	| [$9dc1: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1f,d0 |  [$9dc2: adc $1f]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$9dc4: sta $1e]
	OP_W_ON_ZP_ADDRESS	subq,base_screen_pointer_list_001d,#1 |  [$9dc6: dec base_screen_pointer_list_001d]
	jne	l_9dbf                             	| [$9dc8: jne $9dbf]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$9dca: lda $1e]
l_9dcc:
	                           	| [$9dcc: clc]
	GET_ADDRESS	0x02f0                     	| [$9dcd: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d2                           	| [$9dd0: tay]
	GET_INDIRECT_ADDRESS	0x1b              	| [$9dd1: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9dd3: sta $1b]
	GET_ADDRESS	0x73                       	| [$9dd5: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$9dd7: sta $20]
	GET_ADDRESS	0x03c4                     	| [$9dd9: lda $03c4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$9ddc: clc]
	add.b	#0x10,d0                        	| [$9ddd: adc #$10]
	and.b	#0xe0,d0                         	| [$9ddf: and #$e0]
	beq	l_9de7                             	| [$9de1: beq $9de7]
	cmp.b	#0x80,d0                         	| [$9de3: cmp #$80]
	jne	l_9df2                             	| [$9de5: jne $9df2]
l_9de7:
	GET_ADDRESS	0x73                       	| [$9de7: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x80,d0                         	| [$9de9: and #$80]
	OP_R_ON_ZP_ADDRESS	or,0x1b,d0 |  [$9deb: ora $1b]
	                       	| [$9ded: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_9e01                             	| [$9def: jra $9e01]
l_9df2:
	NEW_ADDRESS
	GET_ADDRESS	0x03c4                     	| [$9df2: lda $03c4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_9dfd                             	| [$9df5: bpl $9dfd]
	 |  [$9df7: lda $1b]
	          	| [$9df9: ora #$80]
	OP_W_ON_ZP_ADDRESS	or,0x1b,#0x80 |  [$9dfb: sta $1b]
l_9dfd:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$9dfd: lda $1b]
	GET_ADDRESS	0x73                       	| [$9dff: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9e01:
	                       	| [$9e01: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x20,d0 |  [$9e03: cmp $20]
	beq	l_9e0f                             	| [$9e05: beq $9e0f]
	GET_ADDRESS	0x023a                     	| [$9e07: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$9e0a: ora #$01]
	                    	| [$9e0c: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_9e0f:
	rts                                    	| [$9e0f: rts]

l_a0e4:
	GET_ADDRESS	0xf1                       	| [$a0e4: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_a0fb                             	| [$a0e6: beq $a0fb]
	GET_ADDRESS	0x030e                     	| [$a0e8: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a0eb: and #$7f]
	                     	| [$a0ed: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a0f0: lda #$00]
	GET_ADDRESS	0xd5                       	| [$a0f2: sta $d5, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a0f4: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a0f6: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
* sec+bcs => bra
	SET_XC_FLAGS   | needed when returning
	bra.b	l_a0fc                             	| [$a0f9: bcs $a0fc]
l_a0fb:
	CLR_XC_FLAGS                           	| [$a0fb: clc]
l_a0fc:
	rts                                    	| [$a0fc: rts]
l_a0fd:
	GET_ADDRESS	0x030e                     	| [$a0fd: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$a100: and #$10]
	beq	l_a138                             	| [$a102: beq $a138]
* reached when second player is very close to the net (blocked)
	GET_ADDRESS	0x03c0                     	| [$a104: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$a107: and #$20]
	jne	l_a118                             	| [$a109: jne $a118]
	clr.b	d0                               	| [$a10b: lda #$00]
	jbsr	l_a2b5                            	| [$a10d: jsr $a2b5]
	GET_ADDRESS	0x03c0                     	| [$a110: lda $03c0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x20,d0                          	| [$a113: ora #$20]
	                     	| [$a115: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a118:
	jbsr	player_walks_a215                 	| [$a118: jsr player_walks_a215]
	jcs	l_a120                             	| [$a11b: bcs $a120]
	jbsr	l_b5c2                            	| [$a11d: jsr $b5c2]
l_a120:
	GET_ADDRESS	0x0261                     	| [$a120: lda $0261, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a123: sec]
	sub.b	#0x10,d0	| [$a124: sbc #$10]
	                     	| [$a126: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	SET_C_FROM_X
	jcs	l_a138                             	| [$a129: bcs $a138]
	clr.b	d0                               	| [$a12b: lda #$00]
	                     	| [$a12d: sta $0261, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$a130: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$a133: and #$ef]
	                     	| [$a135: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a138:
	rts                                    	| [$a138: rts]
l_a139:
	GET_ADDRESS	0x02a2                     	| [$a139: lda $02a2, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$a13c: sec]
	SBC_X	0x02bc                           	| [$a13d: sbc $02bc, x]
	GET_ADDRESS	0x02a2                     	| [$a140: sta $02a2, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02af                     	| [$a143: lda $02af, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_X	0x02c9                           	| [$a146: sbc $02c9, x]
	GET_ADDRESS	0x02af                     	| [$a149: sta $02af, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xd5                       	| [$a14c: lda $d5, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a14e: clc]
	GET_ADDRESS	0x02a2                     	| [$a14f: adc $02a2, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xd5                       	| [$a152: sta $d5, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02af                     	| [$a154: lda $02af, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR                                	| [$a157: php]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a158: adc objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$a15a: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a15c: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a15e: adc #$00]
	addx.b	d4,d0                        	| [$a15e: adc #$00]
	POP_SR                                 	| [$a160: plp]
	bpl	l_a166                             	| [$a161: bpl $a166]
	                           	| [$a163: clc]
	add.b	#0xff,d0                        	| [$a164: adc #$ff]
l_a166:
	GET_ADDRESS	0xf1                       	| [$a166: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a168: rts]
l_a169:
	GET_ADDRESS	0x026e                     	| [$a169: lda $026e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$a16c: eor #$ff]
	                           	| [$a16e: clc]
	add.b	#0x01,d0                        	| [$a16f: adc #$01]
	                     	| [$a171: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	PUSH_SR                                	| [$a174: php]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$a175: lda objects_x_speed_array_027b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$a178: eor #$ff]
	 	| [$a17a: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR                                 	| [$a17d: plp]
	 	| [$a17e: lda objects_x_speed_array_027b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a181: adc #$00]
	addx.b	d4,d0                        	| [$a181: adc #$00]
	 	| [$a183: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a186: rts]
l_a187:
	GET_ADDRESS	0x031a                     	| [$a187: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a194                             	| [$a18a: bmi $a194]
	GET_ADDRESS	0x030e                     	| [$a18c: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfb,d0                         	| [$a18f: and #$fb]
	                     	| [$a191: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a194:
	rts                                    	| [$a194: rts]
l_a195:
	move.b	d1,d0                           	| [$a195: txa]
	                           	| [$a196: clc]
	add.b	#0x07,d0                        	| [$a197: adc #$07]
	move.b	d0,d2                           	| [$a199: tay]
	GET_ADDRESS	0x0065                     	| [$a19a: lda $0065, y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0x30,d0                         	| [$a19d: cmp #$30]
	jne	l_a1a6                             	| [$a19f: jne $a1a6]
	clr.b	d0                               	| [$a1a1: lda #$00]
	GET_ADDRESS	0x031a                     	| [$a1a3: sta $031a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
l_a1a6:
	clr.b	d0                               	| [$a1a6: lda #$00]
	GET_ADDRESS	0x03c0                     	| [$a1a8: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02d6                     	| [$a1ab: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02e3                     	| [$a1ae: sta $02e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a1b1: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02fd                     	| [$a1b4: sta $02fd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x023a                     	| [$a1b7: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a1ba: ora #$01]
	                     	| [$a1bc: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$a1bf: ldy $031a, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xa1ee                     	| [$a1c2: lda $a1ee, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x02fd                     	| [$a1c5: sta $02fd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$a1c8: tya]
	or.b	#0x80,d0                          	| [$a1c9: ora #$80]
	GET_ADDRESS	0x031a                     	| [$a1cb: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030a                     	| [$a1ce: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xfd,d0                         	| [$a1d1: and #$fd]
	                     	| [$a1d3: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030e                     	| [$a1d6: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xef,d0                         	| [$a1d9: and #$ef]
	                     	| [$a1db: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x032f                     	| [$a1de: lda $032f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x09,d0                         	| [$a1e1: cmp #$09]
	jne	l_a1ed                             	| [$a1e3: jne $a1ed]
	GET_ADDRESS	0x030e                     	| [$a1e5: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x10,d0                          	| [$a1e8: ora #$10]
	                     	| [$a1ea: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a1ed:
	rts                                    	| [$a1ed: rts]

player_walks_a215:
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a215: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$a217: pha]
	GET_ADDRESS	objects_side_array_9d      	| [$a218: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$a21a: pha]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a21b: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$a21d: pha]
	GET_ADDRESS	0xc7                       	| [$a21e: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$a220: pha]
	GET_ADDRESS	player_direction_copy_0254 	| [$a221: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a224: clc]
	add.b	#0x10,d0                        	| [$a225: adc #$10]
	and.b	#0xe0,d0                         	| [$a227: and #$e0]
                                         | [$a229: lsr a]
                                         | [$a22a: lsr a]
                                         | [$a22b: lsr a]
	lsr.b	#4,d0                            	| [$a22c: lsr a]
	move.b	d0,d2                           	| [$a22d: tay]
	GET_ADDRESS	0xa29c                     	| [$a22e: lda $a29c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$a231: php]
	                           	| [$a232: clc]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a233: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$a235: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$a237: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a239: adc #$00]
	addx.b	d4,d0                        	| [$a239: adc #$00]
	POP_SR                                 	| [$a23b: plp]
	bpl	l_a241                             	| [$a23c: bpl $a241]
	                           	| [$a23e: clc]
	add.b	#0xff,d0                        	| [$a23f: adc #$ff]
l_a241:
	GET_ADDRESS	objects_side_array_9d      	| [$a241: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xa29d                     	| [$a243: lda $a29d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$a246: php]
	                           	| [$a247: clc]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a248: adc objects_logical_y_array_b9, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$a24a: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$a24c: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a24e: adc #$00]
	addx.b	d4,d0                        	| [$a24e: adc #$00]
	POP_SR                                 	| [$a250: plp]
	bpl	l_a256                             	| [$a251: bpl $a256]
	                           	| [$a253: clc]
	add.b	#0xff,d0                        	| [$a254: adc #$ff]
l_a256:
	GET_ADDRESS	0xc7                       	| [$a256: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a258: lda current_object_index_4c]
	jbsr	l_b71f                            	| [$a25a: jsr $b71f]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a25d: sta $1b]
	move.w	(sp)+,d0                        	| [$a25f: pla]
	GET_ADDRESS	0xc7                       	| [$a260: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$a262: pla]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a263: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$a265: pla]
	GET_ADDRESS	objects_side_array_9d      	| [$a266: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$a268: pla]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a269: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	cmp.b	#0x02,d1                         	| [$a26b: cpx #$02]
	* bcs=>bcc
	jcc	l_a277                             	| [$a26d: bcs $a277]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a26f: lda $1b]
	cmp.b	#0x0f,d0                         	| [$a271: cmp #$0f]
	* bcs=>bcc
	jcc	l_a281                             	| [$a273: bcs $a281]
	* bcc=>bcs (cmp higher above)
	jcs	l_a29a                             	| [$a275: bcc $a29a]
l_a277:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a277: lda $1b]
	cmp.b	#0x1f,d0                         	| [$a279: cmp #$1f]
	* bcs=>bcc
	jcc	l_a281                             	| [$a27b: bcs $a281]
	cmp.b	#0x10,d0                         	| [$a27d: cmp #$10]
	* bcs=>bcc
	jcc	l_a29a                             	| [$a27f: bcs $a29a]
l_a281:
	clr.b	d0                               	| [$a281: lda #$00]
	GET_ADDRESS	0x026e                     	| [$a283: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$a286: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0288                     	| [$a289: sta $0288, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0295                     	| [$a28c: sta $0295, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030a                     	| [$a28f: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a292: ora #$01]
	                     	| [$a294: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
* sec+bcs => bra
	SET_XC_FLAGS   | needed when returning
	bra.b	l_a29b                             	| [$a298: bcs $a29b]
l_a29a:
	CLR_XC_FLAGS                           	| [$a29a: clc]
l_a29b:
	rts                                    	| [$a29b: rts]

l_a2ac:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a2ac: lda current_object_index_4c]
	jbsr	l_b71f                            	| [$a2ae: jsr $b71f]
	GET_ADDRESS	0x0373                     	| [$a2b1: sta $0373, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a2b4: rts]

l_a2b5:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a2b5: sta $1b]
	move.b	d1,d0                           	| [$a2b7: txa]
	movem.w	d0,-(sp)                       	| [$a2b8: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a2b9: lda current_object_index_4c]
	                           	| [$a2bb: clc]
	add.b	#0x07,d0                        	| [$a2bc: adc #$07]
	move.b	d0,d1                           	| [$a2be: tax]
	GET_ADDRESS	0x031a                     	| [$a2bf: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_a2d2                             	| [$a2c2: bpl $a2d2]
	GET_ADDRESS	0x65                       	| [$a2c4: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x1c,d0                         	| [$a2c6: cmp #$1c]
	beq	l_a2dd                             	| [$a2c8: beq $a2dd]
	cmp.b	#0x27,d0                         	| [$a2ca: cmp #$27]
	beq	l_a2dd                             	| [$a2cc: beq $a2dd]
	cmp.b	#0x30,d0                         	| [$a2ce: cmp #$30]
	beq	l_a2dd                             	| [$a2d0: beq $a2dd]
l_a2d2:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a2d2: lda $1b]
	or.b	#0x80,d0                          	| [$a2d4: ora #$80]
	GET_ADDRESS	0x031a                     	| [$a2d6: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x1a,d0                        	| [$a2d9: lda #$1a]
	GET_ADDRESS	0x65                       	| [$a2db: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a2dd:
	move.w	(sp)+,d0                        	| [$a2dd: pla]
	move.b	d0,d1                           	| [$a2de: tax]
	rts                                    	| [$a2df: rts]
l_a2e0:
	move.b	#0x07,d0                        	| [$a2e0: lda #$07]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a2e2: sta current_object_index_4c]
l_a2e4:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a2e4: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$a2e6: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_a305                             	| [$a2e9: bpl $a305]
	GET_ADDRESS	0x65                       	| [$a2eb: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x1a,d0                         	| [$a2ed: cmp #$1a]
	jne	l_a305                             	| [$a2ef: jne $a305]
	GET_ADDRESS	0x031a                     	| [$a2f1: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a2f4: and #$3f]
	asl.b	#1,d0                            	| [$a2f6: asl a]
	move.b	d0,d2                           	| [$a2f7: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_a30e            	| [$a2f8: lda jump_table_a30e, y]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$a2fb: sta $00]
	GET_ADDRESS	0xa30f                     	| [$a2fd: lda $a30f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$a300: sta $01]
	rts |  [$a302: jra ($0000)] [indirect_jump]
l_a305:
	OP_W_ON_ZP_ADDRESS	addq,current_object_index_4c,#1 |  [$a305: inc current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a307: lda current_object_index_4c]
	cmp.b	#0x0c,d0                         	| [$a309: cmp #$0c]
	* bcc=>bcs (cmp above)
	jcs	l_a2e4                             	| [$a30b: bcc $a2e4]
	rts                                    	| [$a30d: rts]

l_a328:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a328: lda current_object_index_4c]
	                           	| [$a32a: sec]
	sub.b	#0x07,d0	| [$a32b: sbc #$07]
	move.b	d0,d2                           	| [$a32d: tay]
	GET_ADDRESS	0x031a                     	| [$a32e: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a331: and #$3f]
	asl.b	#1,d0                            	| [$a333: asl a]
	move.b	d0,d1                           	| [$a334: tax]
	PUSH_TABLE_X_ADDRESS	jump_table_a3d3            	| [$a335: lda jump_table_a3d3, x]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a338: sta $1b]
	GET_ADDRESS	0xa3d4                     	| [$a33a: lda $a3d4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$a33d: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a33f: ldx current_object_index_4c]
	rts |  [$a341: jra ($001b)] [indirect_jump]
l_a344:
	GET_ADDRESS	0x031a                     	| [$a344: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$a347: and #$40]
	jne	l_a351                             	| [$a349: jne $a351]
	jbsr	l_a5e6                            	| [$a34b: jsr $a5e6]
	jbsr	l_a424                            	| [$a34e: jsr $a424]
l_a351:
	GET_ADDRESS	0x031a                     	| [$a351: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a354: and #$3f]
	move.b	d0,d2                           	| [$a356: tay]
	GET_ADDRESS	0xa4a4                     	| [$a357: lda $a4a4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_a35f                             	| [$a35a: jne $a35f]
	jbsr	l_a424                            	| [$a35c: jsr $a424]
l_a35f:
	GET_ADDRESS	0x73                       	| [$a35f: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a361: sta $1b]
	move.b	#0x08,d2                        	| [$a363: ldy #$08]
	GET_ADDRESS	0x031a                     	| [$a365: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a368: and #$3f]
	cmp.b	#0x01,d0                         	| [$a36a: cmp #$01]
	jne	l_a370                             	| [$a36c: jne $a370]
	move.b	#0x04,d2                        	| [$a36e: ldy #$04]
l_a370:
	move.b	d2,d0                           	| [$a370: tya]
	                           	| [$a371: clc]
	GET_ADDRESS	0x02f0                     	| [$a372: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$a375: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a377: lda current_object_index_4c]
	                           	| [$a379: sec]
	sub.b	#0x07,d0	| [$a37a: sbc #$07]
	move.b	d0,d2                           	| [$a37c: tay]
	GET_ADDRESS	0x0073                     	| [$a37d: lda $0073, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_a388                             	| [$a380: bpl $a388]
	                       	| [$a382: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$a384: ora #$80]
	                       	| [$a386: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a388:
	                       	| [$a388: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a38a: cmp $1b]
	beq	l_a396                             	| [$a38c: beq $a396]
	GET_ADDRESS	0x023a                     	| [$a38e: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a391: ora #$01]
	                     	| [$a393: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a396:
	jbsr	l_a639                            	| [$a396: jsr $a639]
	GET_ADDRESS	0x031a                     	| [$a399: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a39c: and #$3f]
	move.b	d0,d2                           	| [$a39e: tay]
	GET_ADDRESS	0xa4ab                     	| [$a39f: lda $a4ab, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a3a2: sta $1b]
	GET_ADDRESS	0x02d6                     	| [$a3a4: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a3a7: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a3aa: cmp $1b]
	* bcc=>bcs (cmp above)
	jcs	l_a3d0                             	| [$a3ac: bcc $a3d0]
	clr.b	d0                               	| [$a3ae: lda #$00]
	                     	| [$a3b0: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a3b3: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a3b6: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$a3b9: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_a3d0                             	| [$a3bb: bcc $a3d0]
	clr.b	d0                               	| [$a3bd: lda #$00]
	GET_ADDRESS	0x02f0                     	| [$a3bf: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$a3c2: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a3c5: and #$3f]
	move.b	d0,d2                           	| [$a3c7: tay]
	GET_ADDRESS	0xa4a4                     	| [$a3c8: lda $a4a4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	beq	l_a3d0                             	| [$a3cb: beq $a3d0]
	jbsr	l_a629                            	| [$a3cd: jsr $a629]
l_a3d0:
	jra	l_a305                             	| [$a3d0: jra $a305]

l_a3e1:
	GET_ADDRESS	0x030e                     	| [$a3e1: lda $030e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x10,d0                         	| [$a3e4: and #$10]
	jne	l_a3eb                             	| [$a3e6: jne $a3eb]
	jbsr	l_a629                            	| [$a3e8: jsr $a629]
l_a3eb:
	jra	l_a344                             	| [$a3eb: jra $a344]
l_a3ee:
	GET_ADDRESS	0x031a                     	| [$a3ee: lda $031a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a3f1: and #$7f]
	cmp.b	#0x09,d0                         	| [$a3f3: cmp #$09]
	beq	l_a3fa                             	| [$a3f5: beq $a3fa]
	jbsr	l_a629                            	| [$a3f7: jsr $a629]
l_a3fa:
	jra	l_a344                             	| [$a3fa: jra $a344]
l_a3fd:
	jra	l_a344                             	| [$a3fd: jra $a344]
l_a400:
	jra	l_a344                             	| [$a400: jra $a344]
l_a403:
	jra	l_a344                             	| [$a403: jra $a344]
l_a406:
	GET_ADDRESS	0x031a                     	| [$a406: lda $031a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a409: and #$7f]
	cmp.b	#0x1d,d0                         	| [$a40b: cmp #$1d]
	beq	l_a412                             	| [$a40d: beq $a412]
	jbsr	l_a629                            	| [$a40f: jsr $a629]
l_a412:
	jra	l_a344                             	| [$a412: jra $a344]
l_a415:
	GET_ADDRESS	0x031a                     	| [$a415: lda $031a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a418: and #$7f]
	cmp.b	#0x25,d0                         	| [$a41a: cmp #$25]
	beq	l_a421                             	| [$a41c: beq $a421]
	jbsr	l_a629                            	| [$a41e: jsr $a629]
l_a421:
	jra	l_a344                             	| [$a421: jra $a344]
l_a424:
	jbsr	l_a603                            	| [$a424: jsr $a603]
	GET_ADDRESS	0x031a                     	| [$a427: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a42a: and #$3f]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a42c: sta $1b]
	asl.b	#1,d0                            	| [$a42e: asl a]
	                           	| [$a42f: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$a430: adc $1b]
	move.b	d0,d2                           	| [$a432: tay]
	GET_ADDRESS	0xa48f                     	| [$a433: lda $a48f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a436: sta $1b]
	move.b	d2,d0                           	| [$a438: tya]
	movem.w	d0,-(sp)                       	| [$a439: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a43a: lda current_object_index_4c]
	                           	| [$a43c: sec]
	sub.b	#0x07,d0	| [$a43d: sbc #$07]
	move.b	d0,d2                           	| [$a43f: tay]
	GET_ADDRESS	0x0073                     	| [$a440: lda $0073, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_a44e                             	| [$a443: bpl $a44e]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a445: lda $1b]
	not.b	d0                               	| [$a447: eor #$ff]
	                           	| [$a449: clc]
	add.b	#0x01,d0                        	| [$a44a: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a44c: sta $1b]
l_a44e:
	move.w	(sp)+,d0                        	| [$a44e: pla]
	move.b	d0,d2                           	| [$a44f: tay]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a450: lda $1b]
	PUSH_SR                                	| [$a452: php]
	                           	| [$a453: clc]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a454: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$a456: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$a458: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a45a: adc #$00]
	addx.b	d4,d0                        	| [$a45a: adc #$00]
	POP_SR                                 	| [$a45c: plp]
	bpl	l_a462                             	| [$a45d: bpl $a462]
	                           	| [$a45f: clc]
	add.b	#0xff,d0                        	| [$a460: adc #$ff]
l_a462:
	GET_ADDRESS	objects_side_array_9d      	| [$a462: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xa490                     	| [$a464: lda $a490, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$a467: php]
	                           	| [$a468: clc]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a469: adc objects_logical_y_array_b9, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$a46b: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$a46d: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a46f: adc #$00]
	addx.b	d4,d0                        	| [$a46f: adc #$00]
	POP_SR                                 	| [$a471: plp]
	bpl	l_a477                             	| [$a472: bpl $a477]
	                           	| [$a474: clc]
	add.b	#0xff,d0                        	| [$a475: adc #$ff]
l_a477:
	GET_ADDRESS	0xc7                       	| [$a477: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xa491                     	| [$a479: lda $a491, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$a47c: php]
	                           	| [$a47d: clc]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a47e: adc objects_logical_z_array_e3, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$a480: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a482: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a484: adc #$00]
	addx.b	d4,d0                        	| [$a484: adc #$00]
	POP_SR                                 	| [$a486: plp]
	bpl	l_a48c                             	| [$a487: bpl $a48c]
	                           	| [$a489: clc]
	add.b	#0xff,d0                        	| [$a48a: adc #$ff]
l_a48c:
	GET_ADDRESS	0xf1                       	| [$a48c: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a48e: rts]

l_a4b2:
	GET_ADDRESS	0x031a                     	| [$a4b2: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$a4b5: and #$40]
	jne	l_a4bc                             	| [$a4b7: jne $a4bc]
	jbsr	l_a5e6                            	| [$a4b9: jsr $a5e6]
l_a4bc:
	jbsr	l_a603                            	| [$a4bc: jsr $a603]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a4bf: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a4c1: clc]
	add.b	#0x04,d0                        	| [$a4c2: adc #$04]
	 	| [$a4c4: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$a4c6: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$a4c8: adc #$00]
	addx.b	d4,d0                        	| [$a4c8: adc #$00]
	      	| [$a4ca: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a4cc: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a4ce: clc]
	add.b	#0x01,d0                        	| [$a4cf: adc #$01]
	 	| [$a4d1: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a4d3: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a4d5: clc]
	add.b	#0x00,d0                        	| [$a4d6: adc #$00]
	 	| [$a4d8: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x73                       	| [$a4da: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a4dc: sta $1b]
	move.b	#0x13,d0                        	| [$a4de: lda #$13]
	                           	| [$a4e0: clc]
	GET_ADDRESS	0x02f0                     	| [$a4e1: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$a4e4: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a4e6: cmp $1b]
	beq	l_a4f2                             	| [$a4e8: beq $a4f2]
	GET_ADDRESS	0x023a                     	| [$a4ea: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a4ed: ora #$01]
	                     	| [$a4ef: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a4f2:
	jbsr	l_a639                            	| [$a4f2: jsr $a639]
	GET_ADDRESS	0x02d6                     	| [$a4f5: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a4f8: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a4fb: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_a511                             	| [$a4fd: bcc $a511]
	clr.b	d0                               	| [$a4ff: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a501: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a504: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a507: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$a50a: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_a511                             	| [$a50c: bcc $a511]
	jbsr	l_a629                            	| [$a50e: jsr $a629]
l_a511:
	jra	l_a305                             	| [$a511: jra $a305]
l_a514:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a514: lda current_object_index_4c]
	                           	| [$a516: sec]
	sub.b	#0x07,d0	| [$a517: sbc #$07]
	move.b	d0,d2                           	| [$a519: tay]
	GET_ADDRESS	0x031a                     	| [$a51a: lda $031a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a51d: and #$7f]
	cmp.b	#0x10,d0                         	| [$a51f: cmp #$10]
	beq	l_a52d                             	| [$a521: beq $a52d]
	cmp.b	#0x11,d0                         	| [$a523: cmp #$11]
	beq	l_a52d                             	| [$a525: beq $a52d]
	jbsr	l_a629                            	| [$a527: jsr $a629]
	jra	l_a58e                             	| [$a52a: jra $a58e]
l_a52d:
	GET_ADDRESS	0x031a                     	| [$a52d: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$a530: and #$40]
	jne	l_a537                             	| [$a532: jne $a537]
	jbsr	l_a5e6                            	| [$a534: jsr $a5e6]
l_a537:
	jbsr	l_a603                            	| [$a537: jsr $a603]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a53a: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a53c: clc]
	add.b	#0x01,d0                        	| [$a53d: adc #$01]
	 	| [$a53f: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a541: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a543: clc]
	add.b	#0x08,d0                        	| [$a544: adc #$08]
	 	| [$a546: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x73                       	| [$a548: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a54a: sta $1b]
	move.b	#0x0c,d0                        	| [$a54c: lda #$0c]
	                           	| [$a54e: clc]
	GET_ADDRESS	0x02f0                     	| [$a54f: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$a552: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03c4                     	| [$a554: lda $03c4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_a55f                             	| [$a557: bpl $a55f]
	GET_ADDRESS	0x73                       	| [$a559: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$a55b: ora #$80]
	                       	| [$a55d: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a55f:
	GET_ADDRESS	0x73                       	| [$a55f: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a561: cmp $1b]
	beq	l_a56d                             	| [$a563: beq $a56d]
	GET_ADDRESS	0x023a                     	| [$a565: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a568: ora #$01]
	                     	| [$a56a: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a56d:
	jbsr	l_a639                            	| [$a56d: jsr $a639]
	GET_ADDRESS	0x02d6                     	| [$a570: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a573: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a576: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_a58e                             	| [$a578: bcc $a58e]
	clr.b	d0                               	| [$a57a: lda #$00]
	                     	| [$a57c: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a57f: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a582: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$a585: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_a58e                             	| [$a587: bcc $a58e]
	clr.b	d0                               	| [$a589: lda #$00]
	                     	| [$a58b: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a58e:
	jra	l_a305                             	| [$a58e: jra $a305]
l_a591:
	GET_ADDRESS	0x031a                     	| [$a591: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$a594: and #$40]
	jne	l_a59e                             	| [$a596: jne $a59e]
	jbsr	l_a5e6                            	| [$a598: jsr $a5e6]
	jbsr	l_a603                            	| [$a59b: jsr $a603]
l_a59e:
	GET_ADDRESS	0x73                       	| [$a59e: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a5a0: sta $1b]
	clr.b	d2                               	| [$a5a2: ldy #$00]
	GET_ADDRESS	0x031a                     	| [$a5a4: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$a5a7: and #$3f]
	cmp.b	#0x0b,d0                         	| [$a5a9: cmp #$0b]
	jne	l_a5af                             	| [$a5ab: jne $a5af]
	move.b	#0x08,d2                        	| [$a5ad: ldy #$08]
l_a5af:
	move.b	d2,d0                           	| [$a5af: tya]
	                           	| [$a5b0: clc]
	GET_ADDRESS	0x02f0                     	| [$a5b1: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$a5b4: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a5b6: cmp $1b]
	beq	l_a5c2                             	| [$a5b8: beq $a5c2]
	GET_ADDRESS	0x023a                     	| [$a5ba: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a5bd: ora #$01]
	                     	| [$a5bf: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a5c2:
	jbsr	l_a639                            	| [$a5c2: jsr $a639]
	GET_ADDRESS	0x02d6                     	| [$a5c5: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a5c8: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a5cb: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_a5e3                             	| [$a5cd: bcc $a5e3]
	clr.b	d0                               	| [$a5cf: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a5d1: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a5d4: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a5d7: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x04,d0                         	| [$a5da: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_a5e3                             	| [$a5dc: bcc $a5e3]
	clr.b	d0                               	| [$a5de: lda #$00]
	GET_ADDRESS	0x031a                     	| [$a5e0: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a5e3:
	jra	l_a305                             	| [$a5e3: jra $a305]
l_a5e6:
	clr.b	d0                               	| [$a5e6: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a5e8: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a5eb: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$a5ee: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$a5f1: ora #$40]
	                     	| [$a5f3: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x1a,d0                        	| [$a5f6: lda #$1a]
	GET_ADDRESS	0x65                       	| [$a5f8: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x023a                     	| [$a5fa: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a5fd: ora #$01]
	                     	| [$a5ff: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a602: rts]
l_a603:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a603: lda current_object_index_4c]
	move.b	d0,d1                           	| [$a605: tax]
	                           	| [$a606: sec]
	sub.b	#0x07,d0	| [$a607: sbc #$07]
	move.b	d0,d2                           	| [$a609: tay]
	move.b	#0x08,d0                        	| [$a60a: lda #$08]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$a60c: sta $00]
l_a60e:
	GET_ADDRESS	0x0081                     	| [$a60e: lda $0081, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                       	| [$a611: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$a613: tya]
	                           	| [$a614: clc]
	add.b	#0x0e,d0                        	| [$a615: adc #$0e]
	move.b	d0,d2                           	| [$a617: tay]
	move.b	d1,d0                           	| [$a618: txa]
	                           	| [$a619: clc]
	add.b	#0x0e,d0                        	| [$a61a: adc #$0e]
	move.b	d0,d1                           	| [$a61c: tax]
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$a61d: dec $00]
	bpl	l_a60e                             	| [$a61f: bpl $a60e]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a621: lda current_object_index_4c]
	move.b	d0,d1                           	| [$a623: tax]
	                           	| [$a624: sec]
	sub.b	#0x07,d0	| [$a625: sbc #$07]
	move.b	d0,d2                           	| [$a627: tay]
	rts                                    	| [$a628: rts]
l_a629:
	clr.b	d0                               	| [$a629: lda #$00]
	GET_ADDRESS	0x031a                     	| [$a62b: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x65                       	| [$a62e: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03c0                     	| [$a630: lda $03c0, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0xdf,d0                         	| [$a633: and #$df]
	                     	| [$a635: sta $03c0, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	rts                                    	| [$a638: rts]
l_a639:
	move.b	d1,d0                           	| [$a639: txa]
	movem.w	d0,-(sp)                       	| [$a63a: pha]
	move.b	d2,d0                           	| [$a63b: tya]
	movem.w	d0,-(sp)                       	| [$a63c: pha]
	jbsr	display_sprites_e1b5              	| [$a63d: jsr display_sprites_e1b5]
	move.w	(sp)+,d0                        	| [$a640: pla]
	move.b	d0,d2                           	| [$a641: tay]
	move.w	(sp)+,d0                        	| [$a642: pla]
	move.b	d0,d1                           	| [$a643: tax]
	rts                                    	| [$a644: rts]
l_a645:
	move.b	#0x06,d1                        	| [$a645: ldx #$06]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a647: stx current_object_index_4c]
	GET_ADDRESS	0x031a                     	| [$a649: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a64c: and #$7f]
	asl.b	#1,d0                            	| [$a64e: asl a]
	move.b	d0,d2                           	| [$a64f: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_a65e            	| [$a650: lda jump_table_a65e, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a653: sta $1b]
	GET_ADDRESS	0xa65f                     	| [$a655: lda $a65f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$a658: sta $1c]
	rts |  [$a65a: jra ($001b)] [indirect_jump]
l_a65d:
	rts                                    	| [$a65d: rts]

l_a668:
	GET_ADDRESS	0x031a                     	| [$a668: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a68a                             	| [$a66b: bmi $a68a]
	jbsr	l_a71f                            	| [$a66d: jsr $a71f]
	move.b	#0x18,d0                        	| [$a670: lda #$18]
	GET_ADDRESS	0x65                       	| [$a672: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a674: lda #$00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a676: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$a678: lda #$01]
	GET_ADDRESS	objects_side_array_9d      	| [$a67a: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x58,d0                        	| [$a67c: lda #$58]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a67e: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a680: lda #$00]
	GET_ADDRESS	0xc7                       	| [$a682: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a684: lda #$00]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a686: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a688: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a68a:
	GET_ADDRESS	0x73                       	| [$a68a: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a68c: sta $1b]
	move.b	#0x80,d0                        	| [$a68e: lda #$80]
	                       	| [$a690: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a692: cmp $1b]
	beq	l_a69e                             	| [$a694: beq $a69e]
	GET_ADDRESS	0x023a                     	| [$a696: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a699: ora #$01]
	                     	| [$a69b: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a69e:
	move.b	d1,d0                           	| [$a69e: txa]
	movem.w	d0,-(sp)                       	| [$a69f: pha]
	jbsr	display_sprites_e1b5              	| [$a6a0: jsr display_sprites_e1b5]
	move.w	(sp)+,d0                        	| [$a6a3: pla]
	move.b	d0,d1                           	| [$a6a4: tax]
	jra	l_a65d                             	| [$a6a5: jra $a65d]
l_a6a8:
	GET_ADDRESS	0x031a                     	| [$a6a8: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a6b0                             	| [$a6ab: bmi $a6b0]
	jbsr	l_a71f                            	| [$a6ad: jsr $a71f]
l_a6b0:
	GET_ADDRESS	0x73                       	| [$a6b0: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$a6b2: sta $2a]
	GET_ADDRESS	0x031a                     	| [$a6b4: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a6b7: and #$7f]
	                           	| [$a6b9: sec]
	sub.b	#0x01,d0	| [$a6ba: sbc #$01]
	asl.b	#1,d0                            	| [$a6bc: asl a]
	move.b	d0,d2                           	| [$a6bd: tay]
	GET_ADDRESS	0xa703                     	| [$a6be: lda $a703, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a6c1: sta $1b]
	GET_ADDRESS	0xa704                     	| [$a6c3: lda $a704, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$a6c6: sta $1c]
	GET_ADDRESS	0x02f0                     	| [$a6c8: ldy $02f0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_INDIRECT_ADDRESS	0x1b              	| [$a6cb: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$a6cd: cmp #$ff]
	jne	l_a6d9                             	| [$a6cf: jne $a6d9]
	clr.b	d0                               	| [$a6d1: lda #$00]
	GET_ADDRESS	0x031a                     	| [$a6d3: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_a700                             	| [$a6d6: jra $a700]
l_a6d9:
	GET_ADDRESS	0x73                       	| [$a6d9: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x2a,d0 |  [$a6db: cmp $2a]
	beq	l_a6e7                             	| [$a6dd: beq $a6e7]
	GET_ADDRESS	0x023a                     	| [$a6df: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a6e2: ora #$01]
	                     	| [$a6e4: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a6e7:
	move.b	d1,d0                           	| [$a6e7: txa]
	movem.w	d0,-(sp)                       	| [$a6e8: pha]
	jbsr	display_sprites_e1b5              	| [$a6e9: jsr display_sprites_e1b5]
	move.w	(sp)+,d0                        	| [$a6ec: pla]
	move.b	d0,d1                           	| [$a6ed: tax]
	GET_ADDRESS	0x02d6                     	| [$a6ee: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$a6f1: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a6f4: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_a700                             	| [$a6f6: bcc $a700]
	clr.b	d0                               	| [$a6f8: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a6fa: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a6fd: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_a700:
	jra	l_a65d                             	| [$a700: jra $a65d]

l_a71f:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$a71f: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$a722: ora #$80]
	                     	| [$a724: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a727: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a729: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a72c: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$a72f: rts]
l_a730:
	move.b	#0x05,d1                        	| [$a730: ldx #$05]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a732: stx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$a734: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a737: and #$7f]
	asl.b	#1,d0                            	| [$a739: asl a]
	move.b	d0,d2                           	| [$a73a: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_a749            	| [$a73b: lda jump_table_a749, y]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$a73e: sta $00]
	GET_ADDRESS	0xa74a                     	| [$a740: lda $a74a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$a743: sta $01]
	rts |  [$a745: jra ($0000)] [indirect_jump]
l_a748:
	rts                                    	| [$a748: rts]

	move.b	d0,d2                           	| [$a750: tay]
l_a751:
	GET_ADDRESS	0x031a                     	| [$a751: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a75e                             	| [$a754: bmi $a75e]
	jbsr	l_a871                            	| [$a756: jsr $a871]
	clr.b	d0                               	| [$a759: lda #$00]
	GET_ADDRESS	player_direction_copy_0254 	| [$a75b: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a75e:
	move.b	#0x84,d2                        	| [$a75e: ldy #$84]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$a760: lda ball_side_a1]
	jne	l_a76a                             	| [$a762: jne $a76a]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$a764: lda ball_logical_x_93]
	cmp.b	#0xc0,d0                         	| [$a766: cmp #$c0]
	* bcc=>bcs (cmp above)
	jcs	l_a778                             	| [$a768: bcc $a778]
l_a76a:
	move.b	#0x85,d2                        	| [$a76a: ldy #$85]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$a76c: lda ball_side_a1]
	beq	l_a776                             	| [$a76e: beq $a776]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$a770: lda ball_logical_x_93]
	cmp.b	#0x40,d0                         	| [$a772: cmp #$40]
	* bcs=>bcc
	jcc	l_a778                             	| [$a774: bcs $a778]
l_a776:
	move.b	#0x80,d2                        	| [$a776: ldy #$80]
l_a778:
	GET_ADDRESS	0x73                       	| [$a778: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a77a: sta $1b]
	move.b	d2,d0                           	| [$a77c: tya]
	                       	| [$a77d: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a77f: cmp $1b]
	beq	l_a78b                             	| [$a781: beq $a78b]
	GET_ADDRESS	0x023a                     	| [$a783: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a786: ora #$01]
	                     	| [$a788: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a78b:
	jbsr	l_a639                            	| [$a78b: jsr $a639]
	jra	l_a748                             	| [$a78e: jra $a748]
l_a791:
	GET_ADDRESS	0x031a                     	| [$a791: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a79e                             	| [$a794: bmi $a79e]
	jbsr	l_a871                            	| [$a796: jsr $a871]
	move.b	#0x01,d0                        	| [$a799: lda #$01]
	GET_ADDRESS	player_direction_copy_0254 	| [$a79b: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a79e:
	GET_ADDRESS	0x73                       	| [$a79e: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a7a0: sta $1b]
	move.b	#0x81,d0                        	| [$a7a2: lda #$81]
	                       	| [$a7a4: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a7a6: cmp $1b]
	beq	l_a7b2                             	| [$a7a8: beq $a7b2]
	GET_ADDRESS	0x023a                     	| [$a7aa: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a7ad: ora #$01]
	                     	| [$a7af: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a7b2:
	jbsr	display_sprites_e1b5              	| [$a7b2: jsr display_sprites_e1b5]
	jra	l_a748                             	| [$a7b5: jra $a748]
l_a7b8:
	GET_ADDRESS	0x031a                     	| [$a7b8: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a7c0                             	| [$a7bb: bmi $a7c0]
	jbsr	l_a871                            	| [$a7bd: jsr $a871]
l_a7c0:
	GET_ADDRESS	0x73                       	| [$a7c0: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a7c2: sta $1b]
	move.b	#0x80,d2                        	| [$a7c4: ldy #$80]
	GET_ADDRESS	0x02f0                     	| [$a7c6: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$a7c9: cmp #$01]
	jne	l_a7cf                             	| [$a7cb: jne $a7cf]
	move.b	#0x83,d2                        	| [$a7cd: ldy #$83]
l_a7cf:
	move.b	d2,d0                           	| [$a7cf: tya]
	GET_ADDRESS	0x73                       	| [$a7d0: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a7d2: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_a7e2                             	| [$a7d5: jne $a7e2]
	GET_ADDRESS	player_direction_copy_0254 	| [$a7d7: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$a7da: cmp #$01]
	jne	l_a7e2                             	| [$a7dc: jne $a7e2]
	move.b	#0x81,d0                        	| [$a7de: lda #$81]
	GET_ADDRESS	0x73                       	| [$a7e0: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a7e2:
	GET_ADDRESS	0x73                       	| [$a7e2: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a7e4: cmp $1b]
	beq	l_a7f0                             	| [$a7e6: beq $a7f0]
	GET_ADDRESS	0x023a                     	| [$a7e8: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a7eb: ora #$01]
	                     	| [$a7ed: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a7f0:
	GET_ADDRESS	0x02d6                     	| [$a7f0: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a7f3: ldy $02f0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x02d6                     	| [$a7f6: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xa813                     	| [$a7f9: cmp $a813, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_a80d                             	| [$a7fc: bcc $a80d]
	clr.b	d0                               	| [$a7fe: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a800: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a803: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a806: cmp #$02]
	beq	l_a80d                             	| [$a808: beq $a80d]
	                     	| [$a80a: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_a80d:
	jbsr	display_sprites_e1b5              	| [$a80d: jsr display_sprites_e1b5]
	jra	l_a748                             	| [$a810: jra $a748]

l_a816:
	GET_ADDRESS	0x031a                     	| [$a816: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_a81e                             	| [$a819: bmi $a81e]
	jbsr	l_a871                            	| [$a81b: jsr $a871]
l_a81e:
	GET_ADDRESS	0x73                       	| [$a81e: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a820: sta $1b]
	move.b	#0x80,d2                        	| [$a822: ldy #$80]
	GET_ADDRESS	0x02f0                     	| [$a824: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$a827: cmp #$01]
	jne	l_a82d                             	| [$a829: jne $a82d]
	move.b	#0x82,d2                        	| [$a82b: ldy #$82]
l_a82d:
	move.b	d2,d0                           	| [$a82d: tya]
	GET_ADDRESS	0x73                       	| [$a82e: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a830: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jne	l_a840                             	| [$a833: jne $a840]
	GET_ADDRESS	player_direction_copy_0254 	| [$a835: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$a838: cmp #$01]
	jne	l_a840                             	| [$a83a: jne $a840]
	move.b	#0x81,d0                        	| [$a83c: lda #$81]
	GET_ADDRESS	0x73                       	| [$a83e: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a840:
	NEW_ADDRESS
	GET_ADDRESS	0x73                       	| [$a840: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$a842: cmp $1b]
	beq	l_a84e                             	| [$a844: beq $a84e]
	GET_ADDRESS	0x023a                     	| [$a846: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$a849: ora #$01]
	                     	| [$a84b: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_a84e:
	GET_ADDRESS	0x02d6                     	| [$a84e: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a851: ldy $02f0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0x02d6                     	| [$a854: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xa813                     	| [$a857: cmp $a813, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_a86b                             	| [$a85a: bcc $a86b]
	clr.b	d0                               	| [$a85c: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a85e: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a861: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x02,d0                         	| [$a864: cmp #$02]
	beq	l_a86b                             	| [$a866: beq $a86b]
	                     	| [$a868: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
l_a86b:
	jbsr	display_sprites_e1b5              	| [$a86b: jsr display_sprites_e1b5]
	jra	l_a748                             	| [$a86e: jra $a748]
l_a871:
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$a871: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$a874: ora #$80]
	                     	| [$a876: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a879: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$a87b: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$a87e: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03c0                     	| [$a881: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x17,d0                        	| [$a884: lda #$17]
	GET_ADDRESS	0x65                       	| [$a886: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$a888: ldy #$00]
l_a88a:
	GET_ADDRESS	0xa89c                     	| [$a88a: lda $a89c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x81                       	| [$a88d: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$a88f: txa]
	                           	| [$a890: clc]
	add.b	#0x0e,d0                        	| [$a891: adc #$0e]
	move.b	d0,d1                           	| [$a893: tax]
	addq.b	#1,d2                           	| [$a894: iny]
	cmp.b	#0x09,d2                         	| [$a895: cpy #$09]
	* bcc=>bcs (cmp above)
	jcs	l_a88a                             	| [$a897: bcc $a88a]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a899: ldx current_object_index_4c]
	rts                                    	| [$a89b: rts]

l_a8a5:
	move.b	#0x27,d0                        	| [$a8a5: lda #$27]
	OP_W_ON_ZP_ADDRESS	move,0x65,d0 |  [$a8a7: sta $65]
	OP_W_ON_ZP_ADDRESS	move,0x66,d0 |  [$a8a9: sta $66]
	OP_W_ON_ZP_ADDRESS	move,0x67,d0 |  [$a8ab: sta $67]
	OP_W_ON_ZP_ADDRESS	move,0x68,d0 |  [$a8ad: sta $68]
	clr.b	d1                               	| [$a8af: ldx #$00]
l_a8b1:
	move.b	#0x50,d0                        	| [$a8b1: lda #$50]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a8b3: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a8b5: lda #$00]
	GET_ADDRESS	0xc7                       	| [$a8b7: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a8b9: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a8bb: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$a8bd: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$a8bf: inx]
	cmp.b	#0x04,d1                         	| [$a8c0: cpx #$04]
	* bcc=>bcs (cmp above)
	jcs	l_a8b1                             	| [$a8c2: bcc $a8b1]
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$a8c4: lda score_array_57]
	cmp.b	#0x10,d0                         	| [$a8c6: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_a8cd                             	| [$a8c8: bcc $a8cd]
	                           	| [$a8ca: sec]
	sub.b	#0x06,d0	| [$a8cb: sbc #$06]
l_a8cd:
                                         | [$a8cd: asl a]
	asl.b	#2,d0                            	| [$a8ce: asl a]
	move.b	d0,d2                           	| [$a8cf: tay]
	GET_ADDRESS	0xa962                     	| [$a8d0: lda $a962, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x73,d0 |  [$a8d3: sta $73]
	GET_ADDRESS	0xa963                     	| [$a8d5: lda $a963, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,objects_logical_x_array_8f,d0 |  [$a8d8: sta objects_logical_x_array_8f]
	GET_ADDRESS	0xa964                     	| [$a8da: lda $a964, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x74,d0 |  [$a8dd: sta $74]
	GET_ADDRESS	0xa965                     	| [$a8df: lda $a965, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x90,d0 |  [$a8e2: sta $90]
	clr.b	d1                               	| [$a8e4: ldx #$00]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a8e6: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$a8e8: jsr convert_logical_to_screen_coords_dff3]
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$a8eb: lda score_array_57]
	cmp.b	#0x10,d0                         	| [$a8ed: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_a8f8                             	| [$a8ef: bcc $a8f8]
	move.b	#0x01,d1                        	| [$a8f1: ldx #$01]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a8f3: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$a8f5: jsr convert_logical_to_screen_coords_dff3]
l_a8f8:
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$a8f8: lda $58]
	cmp.b	#0x10,d0                         	| [$a8fa: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_a901                             	| [$a8fc: bcc $a901]
	                           	| [$a8fe: sec]
	sub.b	#0x06,d0	| [$a8ff: sbc #$06]
l_a901:
                                         | [$a901: asl a]
	asl.b	#2,d0                            	| [$a902: asl a]
	move.b	d0,d2                           	| [$a903: tay]
	GET_ADDRESS	0xa962                     	| [$a904: lda $a962, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x75,d0 |  [$a907: sta $75]
	GET_ADDRESS	0xa963                     	| [$a909: lda $a963, y]
	move.b	(a0,d2.w),d0                    	| [...]
	not.b	d0                               	| [$a90c: eor #$ff]
	                           	| [$a90e: clc]
	add.b	#0x01,d0                        	| [$a90f: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x92,d0 |  [$a911: sta $92]
	move.b	#0x01,d0                        	| [$a913: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0xa0,d0 |  [$a915: sta $a0]
	GET_ADDRESS	0xa964                     	| [$a917: lda $a964, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x76,d0 |  [$a91a: sta $76]
	GET_ADDRESS	0xa965                     	| [$a91c: lda $a965, y]
	move.b	(a0,d2.w),d0                    	| [...]
	not.b	d0                               	| [$a91f: eor #$ff]
	                           	| [$a921: clc]
	add.b	#0x01,d0                        	| [$a922: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x91,d0 |  [$a924: sta $91]
	move.b	#0x01,d0                        	| [$a926: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x9f,d0 |  [$a928: sta $9f]
* a player
	move.b	#0x02,d1                        	| [$a92a: ldx #$02]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a92c: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$a92e: jsr convert_logical_to_screen_coords_dff3]
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$a931: lda $58]
	cmp.b	#0x10,d0                         	| [$a933: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_a93e                             	| [$a935: bcc $a93e]
* a player from the same team
	move.b	#0x03,d1                        	| [$a937: ldx #$03]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a939: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$a93b: jsr convert_logical_to_screen_coords_dff3]
l_a93e:
	clr.b	d1                               	| [$a93e: ldx #$00]
	move.b	#0x05,d0                        	| [$a940: lda #$05]
	GET_ADDRESS	0x73                       	| [$a942: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a944: lda #$00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$a946: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$a948: lda #$01]
	GET_ADDRESS	objects_side_array_9d      	| [$a94a: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x78,d0                        	| [$a94c: lda #$78]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a94e: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a950: lda #$00]
	GET_ADDRESS	0xc7                       	| [$a952: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a954: lda #$00]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$a956: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$a958: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$a95a: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a95c: sta current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$a95e: jsr convert_logical_to_screen_coords_dff3]
	rts                                    	| [$a961: rts]

l_a9a2:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a9a2: sta $1b]
	move.b	d1,d0                           	| [$a9a4: txa]
	movem.w	d0,-(sp)                       	| [$a9a5: pha]
	move.b	d2,d0                           	| [$a9a6: tya]
	movem.w	d0,-(sp)                       	| [$a9a7: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a9a8: lda current_object_index_4c]
	                           	| [$a9aa: clc]
	add.b	#0x07,d0                        	| [$a9ab: adc #$07]
	move.b	d0,d1                           	| [$a9ad: tax]
	GET_ADDRESS	0x031a                     	| [$a9ae: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_a9bc                             	| [$a9b1: bpl $a9bc]
	GET_ADDRESS	0x65                       	| [$a9b3: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x30,d0                         	| [$a9b5: cmp #$30]
	jne	l_a9bc                             	| [$a9b7: jne $a9bc]
	jra	l_aa88                             	| [$a9b9: jra $aa88]
l_a9bc:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$a9bc: lda $1b]
	or.b	#0x80,d0                          	| [$a9be: ora #$80]
	GET_ADDRESS	0x031a                     	| [$a9c0: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x1c,d0                        	| [$a9c3: lda #$1c]
	GET_ADDRESS	0x65                       	| [$a9c5: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$a9c7: lda current_object_index_4c]
	cmp.b	#0x04,d0                         	| [$a9c9: cmp #$04]
	jne	l_a9f6                             	| [$a9cb: jne $a9f6]
* the object is the ball
	move.b	d1,d0                           	| [$a9cd: txa]
	movem.w	d0,-(sp)                       	| [$a9ce: pha]
	clr.b	d2                               	| [$a9cf: ldy #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d2 |  [$a9d1: sty $00]
l_a9d3:
	GET_ADDRESS	0x0085                     	| [$a9d3: lda $0085, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x81                       	| [$a9d6: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$a9d8: tya]
	                           	| [$a9d9: clc]
	add.b	#0x0e,d0                        	| [$a9da: adc #$0e]
	move.b	d0,d2                           	| [$a9dc: tay]
	move.b	d1,d0                           	| [$a9dd: txa]
	                           	| [$a9de: clc]
	add.b	#0x0e,d0                        	| [$a9df: adc #$0e]
	move.b	d0,d1                           	| [$a9e1: tax]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$a9e2: inc $00]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$a9e4: lda $00]
	cmp.b	#0x09,d0                         	| [$a9e6: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_a9d3                             	| [$a9e8: bcc $a9d3]
	move.w	(sp)+,d0                        	| [$a9ea: pla]
	move.b	d0,d1                           	| [$a9eb: tax]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$a9ec: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$a9ee: sec]
	sub.b	#0x01,d0	| [$a9ef: sbc #$01]
	 	| [$a9f1: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_aa88                             	| [$a9f3: jra $aa88]
l_a9f6:
	move.b	d1,d0                           	| [$a9f6: txa]
	movem.w	d0,-(sp)                       	| [$a9f7: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$a9f8: ldx current_object_index_4c]
	GET_ADDRESS	0x73                       	| [$a9fa: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$a9fc: and #$7f]
	                           	| [$a9fe: sec]
	sub.b	#0x18,d0	| [$a9ff: sbc #$18]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa01: sta $1b]
	asl.b	#1,d0                            	| [$aa03: asl a]
	                           	| [$aa04: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$aa05: adc $1b]
	move.b	d0,d2                           	| [$aa07: tay]
	GET_ADDRESS	0xaa8d                     	| [$aa08: lda $aa8d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa0b: sta $1b]
	GET_ADDRESS	0x73                       	| [$aa0d: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_aa1a                             	| [$aa0f: bmi $aa1a]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa11: lda $1b]
	not.b	d0                               	| [$aa13: eor #$ff]
	                           	| [$aa15: clc]
	add.b	#0x01,d0                        	| [$aa16: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa18: sta $1b]
l_aa1a:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa1a: lda $1b]
	PUSH_SR                                	| [$aa1c: php]
	                           	| [$aa1d: clc]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$aa1e: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$aa20: sta $00]
	GET_ADDRESS	objects_side_array_9d      	| [$aa22: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$aa24: adc #$00]
	addx.b	d4,d0                        	| [$aa24: adc #$00]
	POP_SR                                 	| [$aa26: plp]
	bpl	l_aa2c                             	| [$aa27: bpl $aa2c]
	                           	| [$aa29: clc]
	add.b	#0xff,d0                        	| [$aa2a: adc #$ff]
l_aa2c:
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$aa2c: sta $01]
	GET_ADDRESS	0xaa8e                     	| [$aa2e: lda $aa8e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$aa31: php]
	                           	| [$aa32: clc]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$aa33: adc objects_logical_y_array_b9, x]
	add.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$aa35: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0xc7                       	| [$aa37: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$aa39: adc #$00]
	addx.b	d4,d0                        	| [$aa39: adc #$00]
	POP_SR                                 	| [$aa3b: plp]
	bpl	l_aa41                             	| [$aa3c: bpl $aa41]
	                           	| [$aa3e: clc]
	add.b	#0xff,d0                        	| [$aa3f: adc #$ff]
l_aa41:
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$aa41: sta $03]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$aa43: lda ball_logical_y_bd]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$aa45: cmp objects_logical_y_array_b9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_aa5d                             	| [$aa47: bcs $aa5d]
	 	| [$aa49: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$aa4b: sec]
	SBC	ball_logical_y_bd                  	| [$aa4c: sbc ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$aa4e: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$aa50: lda unpack_mode_and_misc_02]
	SET_XC_FLAGS                           	| [$aa52: sec]
	SBC	0x1b                               	| [$aa53: sbc $1b]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$aa55: sta unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$aa57: lda $03]
	SBC_IMM	0x00                           	| [$aa59: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$aa5b: sta $03]
l_aa5d:
	GET_ADDRESS	0xaa8f                     	| [$aa5d: lda $aa8f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$aa60: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$aa61: adc $1b]
	                           	| [$aa63: clc]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$aa64: adc objects_logical_z_array_e3, x]
	add.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$aa66: sta $04]
	GET_ADDRESS	0xf1                       	| [$aa68: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$aa6a: adc #$00]
	addx.b	d4,d0                        	| [$aa6a: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$aa6c: sta $05]
	move.w	(sp)+,d0                        	| [$aa6e: pla]
	move.b	d0,d1                           	| [$aa6f: tax]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$aa70: lda $00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$aa72: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$aa74: lda $01]
	GET_ADDRESS	objects_side_array_9d      	| [$aa76: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$aa78: lda unpack_mode_and_misc_02]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$aa7a: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$aa7c: lda $03]
	GET_ADDRESS	0xc7                       	| [$aa7e: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$aa80: lda $04]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$aa82: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$aa84: lda $05]
	GET_ADDRESS	0xf1                       	| [$aa86: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_aa88:
	move.w	(sp)+,d0                        	| [$aa88: pla]
	move.b	d0,d2                           	| [$aa89: tay]
	move.w	(sp)+,d0                        	| [$aa8a: pla]
	move.b	d0,d1                           	| [$aa8b: tax]
	rts                                    	| [$aa8c: rts]

l_ab1d:
	move.b	#0x07,d1                        	| [$ab1d: ldx #$07]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ab1f: stx current_object_index_4c]
l_ab21:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ab21: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$ab23: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_ab31                             	| [$ab26: bpl $ab31]
	GET_ADDRESS	0x65                       	| [$ab28: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x1c,d0                         	| [$ab2a: cmp #$1c]
	jne	l_ab31                             	| [$ab2c: jne $ab31]
	jbsr	l_ab3a                            	| [$ab2e: jsr $ab3a]
l_ab31:
	OP_W_ON_ZP_ADDRESS	addq,current_object_index_4c,#1 |  [$ab31: inc current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ab33: lda current_object_index_4c]
	cmp.b	#0x0c,d0                         	| [$ab35: cmp #$0c]
	* bcc=>bcs (cmp above)
	jcs	l_ab21                             	| [$ab37: bcc $ab21]
	rts                                    	| [$ab39: rts]
l_ab3a:
	GET_ADDRESS	0x031a                     	| [$ab3a: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$ab3d: and #$40]
	jne	l_ab51                             	| [$ab3f: jne $ab51]
	                     	| [$ab41: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$ab44: ora #$40]
	                     	| [$ab46: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$ab49: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$ab4b: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$ab4e: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ab51:
	GET_ADDRESS	0x73                       	| [$ab51: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ab53: sta $1b]
	GET_ADDRESS	0x031a                     	| [$ab55: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$ab58: and #$3f]
	asl.b	#1,d0                            	| [$ab5a: asl a]
	move.b	d0,d2                           	| [$ab5b: tay]
	GET_ADDRESS	0xab9f                     	| [$ab5c: lda $ab9f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ab5f: sta $1b]
	GET_ADDRESS	0xaba0                     	| [$ab61: lda $aba0, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$ab64: sta $1c]
	GET_ADDRESS	0x02f0                     	| [$ab66: ldy $02f0, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_INDIRECT_ADDRESS	0x1b              	| [$ab69: lda ($1b), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$ab6b: cmp #$ff]
	beq	l_ab95                             	| [$ab6d: beq $ab95]
	GET_ADDRESS	0x73                       	| [$ab6f: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$ab71: cmp $1b]
	beq	l_ab7d                             	| [$ab73: beq $ab7d]
	GET_ADDRESS	0x023a                     	| [$ab75: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$ab78: ora #$01]
	                     	| [$ab7a: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ab7d:
	jbsr	l_a639                            	| [$ab7d: jsr $a639]
	GET_ADDRESS	0x02d6                     	| [$ab80: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$ab83: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$ab86: cmp #$01]
	* bcc=>bcs (cmp above)
	jcs	l_ab9e                             	| [$ab88: bcc $ab9e]
	clr.b	d0                               	| [$ab8a: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$ab8c: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$ab8f: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	jra	l_ab9e                             	| [$ab92: jra $ab9e]
l_ab95:
	clr.b	d0                               	| [$ab95: lda #$00]
	GET_ADDRESS	0x031a                     	| [$ab97: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$ab9a: lda #$00]
	GET_ADDRESS	0x65                       	| [$ab9c: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ab9e:
	rts                                    	| [$ab9e: rts]

l_abf8:
	move.b	d1,d0                           	| [$abf8: txa]
	movem.w	d0,-(sp)                       	| [$abf9: pha]
	move.b	d2,d0                           	| [$abfa: tya]
	movem.w	d0,-(sp)                       	| [$abfb: pha]
	move.b	d1,d0                           	| [$abfc: txa]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$abfd: sta $1b]
	                           	| [$abff: clc]
	add.b	#0x07,d0                        	| [$ac00: adc #$07]
	move.b	d0,d1                           	| [$ac02: tax]
	move.b	#0x80,d0                        	| [$ac03: lda #$80]
	OP_R_ON_ZP_ADDRESS	or,0x1b,d0 |  [$ac05: ora $1b]
	GET_ADDRESS	0x031a                     	| [$ac07: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x27,d0                        	| [$ac0a: lda #$27]
	GET_ADDRESS	0x65                       	| [$ac0c: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$ac0e: pla]
	move.b	d0,d2                           	| [$ac0f: tay]
	move.w	(sp)+,d0                        	| [$ac10: pla]
	move.b	d0,d1                           	| [$ac11: tax]
	rts                                    	| [$ac12: rts]
l_ac13:
	move.b	#0x07,d1                        	| [$ac13: ldx #$07]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ac15: stx current_object_index_4c]
l_ac17:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ac17: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$ac19: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_ac65                             	| [$ac1c: bpl $ac65]
	GET_ADDRESS	0x65                       	| [$ac1e: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x27,d0                         	| [$ac20: cmp #$27]
	jne	l_ac65                             	| [$ac22: jne $ac65]
	GET_ADDRESS	0x031a                     	| [$ac24: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$ac27: and #$40]
	jne	l_ac38                             	| [$ac29: jne $ac38]
	                     	| [$ac2b: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$ac2e: ora #$40]
	                     	| [$ac30: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$ac33: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$ac35: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ac38:
	jbsr	l_ac6e                            	| [$ac38: jsr $ac6e]
	move.b	#0x94,d0                        	| [$ac3b: lda #$94]
	GET_ADDRESS	0x73                       	| [$ac3d: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x023a                     	| [$ac3f: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$ac42: ora #$01]
	                     	| [$ac44: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_a639                            	| [$ac47: jsr $a639]
	GET_ADDRESS	0x03e0                     	| [$ac4a: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x08,d0                         	| [$ac4d: cmp #$08]
	beq	l_ac5e                             	| [$ac4f: beq $ac5e]
	GET_ADDRESS	0x031a                     	| [$ac51: lda $031a]
	move.b	(a0),d0                         	| [...]
	and.b	#0x7f,d0                         	| [$ac54: and #$7f]
	cmp.b	#0x1d,d0                         	| [$ac56: cmp #$1d]
	beq	l_ac5e                             	| [$ac58: beq $ac5e]
	cmp.b	#0x1e,d0                         	| [$ac5a: cmp #$1e]
	jne	l_ac65                             	| [$ac5c: jne $ac65]
l_ac5e:
	clr.b	d0                               	| [$ac5e: lda #$00]
	GET_ADDRESS	0x031a                     	| [$ac60: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x65                       	| [$ac63: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ac65:
	OP_W_ON_ZP_ADDRESS	addq,current_object_index_4c,#1 |  [$ac65: inc current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ac67: lda current_object_index_4c]
	cmp.b	#0x0b,d0                         	| [$ac69: cmp #$0b]
	* bcc=>bcs (cmp above)
	jcs	l_ac17                             	| [$ac6b: bcc $ac17]
	rts                                    	| [$ac6d: rts]
l_ac6e:
	GET_ADDRESS	0x031a                     	| [$ac6e: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x3f,d0                         	| [$ac71: and #$3f]
	move.b	d0,d2                           	| [$ac73: tay]
	clr.b	d0                               	| [$ac74: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ac76: sta $00]
l_ac78:
	GET_ADDRESS	0x0081                     	| [$ac78: lda $0081, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                       	| [$ac7b: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$ac7d: tya]
	                           	| [$ac7e: clc]
	add.b	#0x0e,d0                        	| [$ac7f: adc #$0e]
	move.b	d0,d2                           	| [$ac81: tay]
	move.b	d1,d0                           	| [$ac82: txa]
	                           	| [$ac83: clc]
	add.b	#0x0e,d0                        	| [$ac84: adc #$0e]
	move.b	d0,d1                           	| [$ac86: tax]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$ac87: inc $00]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$ac89: lda $00]
	cmp.b	#0x09,d0                         	| [$ac8b: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_ac78                             	| [$ac8d: bcc $ac78]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ac8f: ldx current_object_index_4c]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$ac91: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$ac93: clc]
	add.b	#0x40,d0                        	| [$ac94: adc #$40]
	 	| [$ac96: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$ac98: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS |  [$ac9a: sec]
	SBC_IMM	0x18	| [$ac9b: sbc #$18] [do not optimize sub!]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$ac9d: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$ac9f: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_IMM	0x00                           	| [$aca1: sbc #$00]
	GET_ADDRESS	objects_side_array_9d      	| [$aca3: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$aca5: rts]
l_aca6:
	rts                                    	| [$aca6: rts]
l_aca7:
	rts                                    	| [$aca7: rts]
l_aca8:
	move.b	#0x0d,d1                        	| [$aca8: ldx #$0d]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$acaa: stx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$acac: lda current_level_38]
	and.b	#0x0f,d0                         	| [$acae: and #$0f]
	beq	l_ad08                             	| [$acb0: beq $ad08]
	cmp.b	#0x04,d0                         	| [$acb2: cmp #$04]
	beq	l_ad08                             	| [$acb4: beq $ad08]
	asl.b	#1,d0                            	| [$acb6: asl a]
	move.b	d0,d2                           	| [$acb7: tay]
	GET_ADDRESS	0xad09                     	| [$acb8: lda $ad09, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$acbb: sta $00]
	GET_ADDRESS	0xad0a                     	| [$acbd: lda $ad0a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$acc0: sta $01]
	clr.b	d2                               	| [$acc2: ldy #$00]
l_acc4:
	GET_INDIRECT_ADDRESS	0x00              	| [$acc4: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x65                       	| [$acc6: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$acc8: iny]
	GET_INDIRECT_ADDRESS	0x00              	| [$acc9: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$accb: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$accd: iny]
	clr.b	d0                               	| [$acce: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$acd0: sta $1b]
l_acd2:
	GET_INDIRECT_ADDRESS	0x00              	| [$acd2: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x81                       	| [$acd4: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$acd6: iny]
	move.b	d1,d0                           	| [$acd7: txa]
	                           	| [$acd8: clc]
	add.b	#0x0e,d0                        	| [$acd9: adc #$0e]
	move.b	d0,d1                           	| [$acdb: tax]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$acdc: inc $1b]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$acde: lda $1b]
	cmp.b	#0x09,d0                         	| [$ace0: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_acd2                             	| [$ace2: bcc $acd2]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ace4: ldx current_object_index_4c]
	move.b	#0x01,d0                        	| [$ace6: lda #$01]
	GET_ADDRESS	0x023a                     	| [$ace8: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d1,d0                           	| [$aceb: txa]
	movem.w	d0,-(sp)                       	| [$acec: pha]
	move.b	d2,d0                           	| [$aced: tya]
	movem.w	d0,-(sp)                       	| [$acee: pha]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$acef: lda $00]
	movem.w	d0,-(sp)                       	| [$acf1: pha]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$acf2: lda $01]
	movem.w	d0,-(sp)                       	| [$acf4: pha]
	jbsr	convert_logical_to_screen_coords_dff3	| [$acf5: jsr convert_logical_to_screen_coords_dff3]
	move.w	(sp)+,d0                        	| [$acf8: pla]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$acf9: sta $01]
	move.w	(sp)+,d0                        	| [$acfb: pla]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$acfc: sta $00]
	move.w	(sp)+,d0                        	| [$acfe: pla]
	move.b	d0,d2                           	| [$acff: tay]
	move.w	(sp)+,d0                        	| [$ad00: pla]
	move.b	d0,d1                           	| [$ad01: tax]
	GET_INDIRECT_ADDRESS	0x00              	| [$ad02: lda ($00), y]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$ad04: cmp #$ff]
	jne	l_acc4                             	| [$ad06: jne $acc4]
l_ad08:
	rts                                    	| [$ad08: rts]

l_ad82:
	move.b	#0x07,d1                        	| [$ad82: ldx #$07]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ad84: stx current_object_index_4c]
l_ad86:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$ad86: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x031a                     	| [$ad88: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_ad96                             	| [$ad8b: bpl $ad96]
	GET_ADDRESS	0x65                       	| [$ad8d: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x30,d0                         	| [$ad8f: cmp #$30]
	jne	l_ad96                             	| [$ad91: jne $ad96]
	jbsr	l_ad9f                            	| [$ad93: jsr $ad9f]
l_ad96:
	OP_W_ON_ZP_ADDRESS	addq,current_object_index_4c,#1 |  [$ad96: inc current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ad98: lda current_object_index_4c]
	cmp.b	#0x0b,d0                         	| [$ad9a: cmp #$0b]
	* bcc=>bcs (cmp above)
	jcs	l_ad86                             	| [$ad9c: bcc $ad86]
	rts                                    	| [$ad9e: rts]
l_ad9f:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$ad9f: lda $4f]
	bmi	l_ada6                             	| [$ada1: bmi $ada6]
	jra	l_ae60                             	| [$ada3: jra $ae60]
l_ada6:
	GET_ADDRESS	0x031a                     	| [$ada6: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$ada9: and #$40]
	jne	l_adbd                             	| [$adab: jne $adbd]
	clr.b	d0                               	| [$adad: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$adaf: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$adb2: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$adb5: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$adb8: ora #$40]
	                     	| [$adba: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_adbd:
	clr.b	d0                               	| [$adbd: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$adbf: sta $1b]
	move.b	d1,d0                           	| [$adc1: txa]
	                           	| [$adc2: sec]
	sub.b	#0x07,d0	| [$adc3: sbc #$07]
	move.b	d0,d2                           	| [$adc5: tay]
	GET_ADDRESS	0x03d4                     	| [$adc6: lda $03d4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_adce                             	| [$adc9: jne $adce]
l_adcb:
	jra	l_ae60                             	| [$adcb: jra $ae60]
l_adce:
	GET_ADDRESS	0x0073                     	| [$adce: lda $0073, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$add1: and #$7f]
	cmp.b	#0x42,d0                         	| [$add3: cmp #$42]
	jne	l_adcb                             	| [$add5: jne $adcb]
	move.b	d2,d0                           	| [$add7: tya]
	movem.w	d0,-(sp)                       	| [$add8: pha]
l_add9:
	GET_ADDRESS	0x0081                     	| [$add9: lda $0081, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                       	| [$addc: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$adde: tya]
	                           	| [$addf: clc]
	add.b	#0x0e,d0                        	| [$ade0: adc #$0e]
	move.b	d0,d2                           	| [$ade2: tay]
	move.b	d1,d0                           	| [$ade3: txa]
	                           	| [$ade4: clc]
	add.b	#0x0e,d0                        	| [$ade5: adc #$0e]
	move.b	d0,d1                           	| [$ade7: tax]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$ade8: inc $1b]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$adea: lda $1b]
	cmp.b	#0x09,d0                         	| [$adec: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_add9                             	| [$adee: bcc $add9]
	move.w	(sp)+,d0                        	| [$adf0: pla]
	move.b	d0,d2                           	| [$adf1: tay]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$adf2: ldx current_object_index_4c]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$adf4: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$adf6: clc]
	add.b	#0x40,d0                        	| [$adf7: adc #$40]
	 	| [$adf9: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$adfb: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$adfd: sec]
	sub.b	#0x01,d0	| [$adfe: sbc #$01]
	 	| [$ae00: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x08,d0                        	| [$ae02: lda #$08]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ae04: sta $1b]
	GET_ADDRESS	0x0073                     	| [$ae06: lda $0073, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_ae0f                             	| [$ae09: bpl $ae0f]
	move.b	#0xf8,d0                        	| [$ae0b: lda #$f8]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ae0d: sta $1b]
l_ae0f:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ae0f: lda $1b]
	PUSH_SR                                	| [$ae11: php]
	                           	| [$ae12: clc]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$ae13: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0                    	| [...]
	 	| [$ae15: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$ae17: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$ae19: adc #$00]
	addx.b	d4,d0                        	| [$ae19: adc #$00]
	POP_SR                                 	| [$ae1b: plp]
	bpl	l_ae21                             	| [$ae1c: bpl $ae21]
	                           	| [$ae1e: clc]
	add.b	#0xff,d0                        	| [$ae1f: adc #$ff]
l_ae21:
	GET_ADDRESS	objects_side_array_9d      	| [$ae21: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03d4                     	| [$ae23: lda $03d4, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$ae26: sec]
	sub.b	#0x01,d0	| [$ae27: sbc #$01]
	move.b	d0,d2                           	| [$ae29: tay]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ae2a: sta $1b]
	asl.b	#1,d0                            	| [$ae2c: asl a]
	                           	| [$ae2d: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$ae2e: adc $1b]
	                           	| [$ae30: clc]
	GET_ADDRESS	0x02f0                     	| [$ae31: adc $02f0, x]
	add.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d2                           	| [$ae34: tay]
	GET_ADDRESS	0xae61                     	| [$ae35: lda $ae61, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x73                       	| [$ae38: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d0                        	| [$ae3a: lda #$01]
	GET_ADDRESS	0x023a                     	| [$ae3c: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_a639                            	| [$ae3f: jsr $a639]
	GET_ADDRESS	0x02d6                     	| [$ae42: inc $02d6, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$ae45: lda $02d6, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x01,d0                         	| [$ae48: cmp #$01]
	* bcc=>bcs (cmp above)
	jcs	l_ae60                             	| [$ae4a: bcc $ae60]
	clr.b	d0                               	| [$ae4c: lda #$00]
	GET_ADDRESS	0x02d6                     	| [$ae4e: sta $02d6, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02f0                     	| [$ae51: inc $02f0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$ae54: lda $02f0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x03,d0                         	| [$ae57: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_ae60                             	| [$ae59: bcc $ae60]
	clr.b	d0                               	| [$ae5b: lda #$00]
	                     	| [$ae5d: sta $02f0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ae60:
	rts                                    	| [$ae60: rts]

most_of_players_moves_and_draw_ae6a:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$ae6a: lda game_state_bits_46]
	and.b	#0x04,d0                         	| [$ae6c: and #$04]
	beq	l_aedf                             	| [$ae6e: beq $aedf]
	clr.b	d1                               	| [$ae70: ldx #$00]
	clr.b	d2                               	| [$ae72: ldy #$00]
l_ae74:
	GET_ADDRESS	0x030a                     	| [$ae74: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$ae77: and #$08]
	jne	l_ae7c                             	| [$ae79: jne $ae7c]
	addq.b	#1,d1                           	| [$ae7b: inx]
l_ae7c:
	GET_ADDRESS	0x4d                       	| [$ae7c: stx $4d, y]
    move.b	d1,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x51                       	| [$ae7e: stx $51, y]
    move.b	d1,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0047                     	| [$ae80: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_ae8d                             	| [$ae83: bpl $ae8d]
	GET_ADDRESS	0x030a                     	| [$ae85: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$ae88: ora #$80]
	                     	| [$ae8a: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ae8d:
	GET_ADDRESS	0x030a                     	| [$ae8d: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$ae90: ora #$40]
	                     	| [$ae92: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$ae95: lda game_state_bits_46]
	and.b	#0x10,d0                         	| [$ae97: and #$10]
                                         | [$ae99: lsr a]
                                         | [$ae9a: lsr a]
                                         | [$ae9b: lsr a]
	lsr.b	#4,d0                            	| [$ae9c: lsr a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ae9d: sta $00]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d2 |  [$ae9f: cpy $00]
	jne	l_aead                             	| [$aea1: jne $aead]
	OP_W_ON_ZP_ADDRESS	move,0x4f,d1 |  [$aea3: stx $4f]
	GET_ADDRESS	0x030e                     	| [$aea5: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x08,d0                          	| [$aea8: ora #$08]
	                     	| [$aeaa: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_aead:
	move.b	#0x02,d1                        	| [$aead: ldx #$02]
	addq.b	#1,d2                           	| [$aeaf: iny]
	cmp.b	#0x02,d2                         	| [$aeb0: cpy #$02]
	* bcc=>bcs (cmp above)
	jcs	l_ae74                             	| [$aeb2: bcc $ae74]
	move.b	#0x10,d0                        	| [$aeb4: lda #$10]
	GET_ADDRESS	0x03e0                     	| [$aeb6: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$aeb9: lda #$00]
	GET_ADDRESS	0x040f                     	| [$aebb: sta $040f]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0414                     	| [$aebe: sta $0414]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x07e5                     	| [$aec1: sta $07e5]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$aec4: lda $4f]
	GET_ADDRESS	0x0411                     	| [$aec6: sta $0411]
	move.b	d0,(a0)                         	| [...]
	 |  [$aec9: lda game_state_bits_46]
	  	| [$aecb: and #$fb]
	OP_W_ON_ZP_ADDRESS	and,game_state_bits_46,#0xfb |  [$aecd: sta game_state_bits_46]
	clr.b	d0                               	| [$aecf: lda #$00]
	GET_ADDRESS	0x0412                     	| [$aed1: sta $0412]
	move.b	d0,(a0)+                         	| [...]
	                     	| [$aed4: sta $0413]
	move.b	d0,(a0)                         	| [...]
	st.b	d0                        	| [$aed7: lda #$ff]
	GET_ADDRESS	0x0410                     	| [$aed9: sta $0410]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03e2                     	| [$aedc: sta $03e2]
	move.b	d0,(a0)                         	| [...]
l_aedf:
	jbsr	l_b00b                            	| [$aedf: jsr $b00b]
	jbsr	l_b07d                            	| [$aee2: jsr $b07d]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$aee5: lda game_state_bits_46]
	and.b	#0x01,d0                         	| [$aee7: and #$01]
	jne	l_aef1                             	| [$aee9: jne $aef1]
	jbsr	move_players_on_field_5bf6        	| [$aeeb: jsr move_players_on_field_5bf6]
	jbsr	l_6666                            	| [$aeee: jsr $6666]
l_aef1:
	clr.b	d0                               	| [$aef1: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$aef3: sta current_object_index_4c]
l_aef5:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$aef5: ldx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$aef7: lda game_state_bits_46]
	and.b	#0x01,d0                         	| [$aef9: and #$01]
	jne	l_af3c                             	| [$aefb: jne $af3c]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$aefd: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$aeff: and #$08]
	beq	l_af2b                             	| [$af01: beq $af2b]
	move.b	#0x9d,d2                        	| [$af03: ldy #$9d]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$af05: lda game_state_bits_46]
                                         | [$af07: lsr a]
                                         | [$af08: lsr a]
	lsr.b	#3,d0                            	| [$af09: lsr a]
	GET_ADDRESS	current_object_index_4c    	| [$af0a: eor current_object_index_4c]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x02,d0                         	| [$af0c: and #$02]
	beq	l_af12                             	| [$af0e: beq $af12]
	move.b	#0x9e,d2                        	| [$af10: ldy #$9e]
l_af12:
	move.b	d2,d0                           	| [$af12: tya]
	GET_ADDRESS	0x0327                     	| [$af13: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$af16: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$af19: and #$7f]
	cmp.b	#0x1d,d0                         	| [$af1b: cmp #$1d]
	beq	l_af39                             	| [$af1d: beq $af39]
	cmp.b	#0x1e,d0                         	| [$af1f: cmp #$1e]
	beq	l_af39                             	| [$af21: beq $af39]
	clr.b	d0                               	| [$af23: lda #$00]
	GET_ADDRESS	0x030e                     	| [$af25: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_af39                             	| [$af28: jra $af39]
l_af2b:
	GET_ADDRESS	0x030a                     	| [$af2b: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_af36                             	| [$af2e: bmi $af36]
* commenting this freezes the game
	jbsr	l_702d                            	| [$af30: jsr $702d]
	jra	l_af39                             	| [$af33: jra $af39]
l_af36:
	jbsr	l_b0d8                            	| [$af36: jsr $b0d8]
* commenting this freezes the game
l_af39:
	jbsr	l_9130                            	| [$af39: jsr $9130]
l_af3c:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$af3c: ldx current_object_index_4c]
	GET_ADDRESS	0x030a                     	| [$af3e: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_af58                             	| [$af41: bpl $af58]
	and.b	#0x40,d0                         	| [$af43: and #$40]
	jne	l_af50                             	| [$af45: jne $af50]
	move.b	d1,d0                           	| [$af47: txa]
	eor.b	#0x01,d0                         	| [$af48: eor #$01]
	move.b	d0,d2                           	| [$af4a: tay]
	GET_ADDRESS	0x030a                     	| [$af4b: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_af58                             	| [$af4e: bmi $af58]
l_af50:
	GET_ADDRESS	0x023a                     	| [$af50: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$af53: ora #$40]
	                     	| [$af55: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_af58:
	jbsr	display_sprites_e1b5              	| [$af58: jsr display_sprites_e1b5]
	OP_W_ON_ZP_ADDRESS	addq,current_object_index_4c,#1 |  [$af5b: inc current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$af5d: lda current_object_index_4c]
	cmp.b	#0x04,d0                         	| [$af5f: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_aef5                             	| [$af61: bcc $aef5]
	rts                                    	| [$af63: rts]
l_af64:
	move.b	#0x01,d0                        	| [$af64: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x4f,d0 |  [$af66: sta $4f]
	move.b	#0x08,d0                        	| [$af68: lda #$08]
	GET_ADDRESS	0x030b                     	| [$af6a: sta $030b]
	move.b	d0,(a0)                         	| [...]
	                     	| [$af6d: sta $030d]
	move.b	d0,(2,a0)                         	| [...]
	move.b	#0x01,d1                        	| [$af70: ldx #$01]
	GET_ADDRESS	0x47                       	| [$af72: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_af82                             	| [$af74: bmi $af82]
	move.b	#0x09,d0                        	| [$af76: lda #$09]
	                       	| [$af78: sta $47, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$af7a: lda current_level_38]
	cmp.b	#0x10,d0                         	| [$af7c: cmp #$10]
	* bcs=>bcc
	jcc	l_af82                             	| [$af7e: bcs $af82]
	                       	| [$af80: sta $47, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_af82:
	jbsr	move_players_on_field_5bf6        	| [$af82: jsr move_players_on_field_5bf6]
	move.b	#0x03,d0                        	| [$af85: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$af87: sta current_object_index_4c]
l_af89:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$af89: ldx current_object_index_4c]
	jbsr	l_702d                            	| [$af8b: jsr $702d]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$af8e: lda current_object_index_4c]
	move.b	d0,d1                           	| [$af90: tax]
	and.b	#0x01,d0                         	| [$af91: and #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$af93: sta $00]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$af95: lda current_object_index_4c]
	GET_ADDRESS	0x65                       	| [$af97: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	lsr.b	#1,d0                            	| [$af99: lsr a]
	move.b	d0,d2                           	| [$af9a: tay]
	GET_ADDRESS	0x07f9                     	| [$af9b: lda $07f9]
	move.b	(a0),d0                         	| [...]
	jne	l_afe9                             	| [$af9e: jne $afe9]
	GET_ADDRESS	0x0047                     	| [$afa0: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_afe9                             	| [$afa3: bmi $afe9]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$afa5: lda current_level_38]
	OP_R_ON_ZP_ADDRESS	move,0x3a,d2 |  [$afa7: ldy $3a]
	                           	| [$afa9: clc]
	GET_ADDRESS	0xb007                     	| [$afaa: adc $b007, y]
	add.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$afad: sta $01]
	and.b	#0x0f,d0                         	| [$afaf: and #$0f]
	cmp.b	#0x09,d0                         	| [$afb1: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_afc2                             	| [$afb3: bcc $afc2]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$afb5: lda $01]
	and.b	#0xf0,d0                         	| [$afb7: and #$f0]
	cmp.b	#0xf0,d0                         	| [$afb9: cmp #$f0]
	* bcs=>bcc
	jcc	l_afc0                             	| [$afbb: bcs $afc0]
	                           	| [$afbd: clc]
	add.b	#0x10,d0                        	| [$afbe: adc #$10]
l_afc0:
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$afc0: sta $01]
l_afc2:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$afc2: lda $01]
	cmp.b	#0x10,d0                         	| [$afc4: cmp #$10]
	* bcs=>bcc
	jcc	l_afd1                             	| [$afc6: bcs $afd1]
	asl.b	#1,d0                            	| [$afc8: asl a]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$afc9: ora $00]
	GET_ADDRESS	0x0312                     	| [$afcb: sta $0312, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_afdd                             	| [$afce: jra $afdd]
l_afd1:
	and.b	#0x03,d0                         	| [$afd1: and #$03]
	asl.b	#1,d0                            	| [$afd3: asl a]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$afd4: ora $00]
	move.b	d0,d2                           	| [$afd6: tay]
	GET_ADDRESS	0xafff                     	| [$afd7: lda $afff, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0312                     	| [$afda: sta $0312, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_afdd:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$afdd: lda current_level_38]
	and.b	#0x0f,d0                         	| [$afdf: and #$0f]
	asl.b	#1,d0                            	| [$afe1: asl a]
	                           	| [$afe2: clc]
	add.b	#0x04,d0                        	| [$afe3: adc #$04]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$afe5: ora $00]
	GET_ADDRESS	0x65                       	| [$afe7: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_afe9:
	move.b	#0x43,d0                        	| [$afe9: lda #$43]
	GET_ADDRESS	0x73                       	| [$afeb: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	cmp.b	#0x02,d1                         	| [$afed: cpx #$02]
	* bcc=>bcs (cmp above)
	jcs	l_aff5                             	| [$afef: bcc $aff5]
	or.b	#0x80,d0                          	| [$aff1: ora #$80]
	                       	| [$aff3: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_aff5:
	move.b	#0x01,d0                        	| [$aff5: lda #$01]
	GET_ADDRESS	0x023a                     	| [$aff7: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	subq,current_object_index_4c,#1 |  [$affa: dec current_object_index_4c]
	bpl	l_af89                             	| [$affc: bpl $af89]
	rts                                    	| [$affe: rts]

l_b00b:
	move.b	#0x03,d1                        	| [$b00b: ldx #$03]
l_b00d:
	move.b	#0x40,d0                        	| [$b00d: lda #$40]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b00f: sta $00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b011: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b013: sec]
	SBC	ball_logical_x_93                  	| [$b014: sbc ball_logical_x_93]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b016: sta screen_source_pointer_0010]
	GET_ADDRESS	objects_side_array_9d      	| [$b018: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC	ball_side_a1                       	| [$b01a: sbc ball_side_a1]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b01c: sta $11]
	bpl	l_b029                             	| [$b01e: bpl $b029]
	 |  [$b020: lda $00]
	          	| [$b022: ora #$80]
	OP_W_ON_ZP_ADDRESS	or,0x00,#0x80 |  [$b024: sta $00]
	jbsr	l_cf98                            	| [$b026: jsr $cf98]
l_b029:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b029: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d2 |  [$b02b: ldy $11]
	beq	l_b031                             	| [$b02d: beq $b031]
	st.b	d0                        	| [$b02f: lda #$ff]
l_b031:
	GET_ADDRESS	0x033b                     	| [$b031: sta $033b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b034: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b036: sec]
	SBC	ball_logical_y_bd                  	| [$b037: sbc ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b039: sta screen_source_pointer_0010]
	GET_ADDRESS	0xc7                       	| [$b03b: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC	ball_kind_of_z_cb                  	| [$b03d: sbc ball_kind_of_z_cb]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b03f: sta $11]
	bpl	l_b04c                             	| [$b041: bpl $b04c]
	|  [$b043: lda $00]
	        	| [$b045: and #$bf]
	OP_W_ON_ZP_ADDRESS	and,0x00,#0xbf |  [$b047: sta $00]
	jbsr	l_cf98                            	| [$b049: jsr $cf98]
l_b04c:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b04c: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d2 |  [$b04e: ldy $11]
	beq	l_b054                             	| [$b050: beq $b054]
	st.b	d0                        	| [$b052: lda #$ff]
l_b054:
	GET_ADDRESS	0x033f                     	| [$b054: sta $033f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$b057: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b059: sec]
	SBC	ball_logical_z_e7                  	| [$b05a: sbc ball_logical_z_e7]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b05c: sta screen_source_pointer_0010]
	GET_ADDRESS	0xf1                       	| [$b05e: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC	0xf5                               	| [$b060: sbc $f5]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b062: sta $11]
	bpl	l_b069                             	| [$b064: bpl $b069]
	jbsr	l_cf98                            	| [$b066: jsr $cf98]
l_b069:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b069: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d2 |  [$b06b: ldy $11]
	beq	l_b071                             	| [$b06d: beq $b071]
	st.b	d0                        	| [$b06f: lda #$ff]
l_b071:
	GET_ADDRESS	0x0343                     	| [$b071: sta $0343, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b074: lda $00]
	GET_ADDRESS	0x0337                     	| [$b076: sta $0337, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	subq.b	#1,d1                           	| [$b079: dex]
	bpl	l_b00d                             	| [$b07a: bpl $b00d]
	rts                                    	| [$b07c: rts]
l_b07d:
	clr.b	d2                               	| [$b07d: ldy #$00]
	clr.b	d0                               	| [$b07f: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b081: sta $00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b083: lda objects_logical_x_array_8f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b086: sec]
	SBC_Y	0x0090                           	| [$b087: sbc $0090, y]
	GET_ADDRESS	objects_side_array_9d      	| [$b08a: lda objects_side_array_9d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_Y	0x009e                           	| [$b08d: sbc $009e, y]
	jcs	l_b094                             	| [$b090: bcs $b094]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$b092: inc $00]
l_b094:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b094: lda $00]
	GET_ADDRESS	0x036f                     	| [$b096: sta $036f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_b0cd                            	| [$b099: jsr $b0cd]
	addq.b	#1,d2                           	| [$b09c: iny]
	eor.b	#0x01,d0                         	| [$b09d: eor #$01]
	GET_ADDRESS	0x036f                     	| [$b09f: sta $036f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_b0cd                            	| [$b0a2: jsr $b0cd]
	addq.b	#1,d2                           	| [$b0a5: iny]
	clr.b	d0                               	| [$b0a6: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b0a8: sta $00]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b0aa: lda objects_logical_x_array_8f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b0ad: sec]
	SBC_Y	0x0090                           	| [$b0ae: sbc $0090, y]
	GET_ADDRESS	objects_side_array_9d      	| [$b0b1: lda objects_side_array_9d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_Y	0x009e                           	| [$b0b4: sbc $009e, y]
	jcc	l_b0bb                             	| [$b0b7: bcc $b0bb]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$b0b9: inc $00]
l_b0bb:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b0bb: lda $00]
	GET_ADDRESS	0x036f                     	| [$b0bd: sta $036f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_b0cd                            	| [$b0c0: jsr $b0cd]
	addq.b	#1,d2                           	| [$b0c3: iny]
	eor.b	#0x01,d0                         	| [$b0c4: eor #$01]
	GET_ADDRESS	0x036f                     	| [$b0c6: sta $036f, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_b0cd                            	| [$b0c9: jsr $b0cd]
	rts                                    	| [$b0cc: rts]
l_b0cd:
	tst.b	d0                               	| [$b0cd: cmp #$00]
	jne	l_b0d7                             	| [$b0cf: jne $b0d7]
	move.b	d2,d0                           	| [$b0d1: tya]
	lsr.b	#1,d0                            	| [$b0d2: lsr a]
	move.b	d0,d1                           	| [$b0d3: tax]
	move.b	d2,d0                           	| [$b0d4: tya]
	GET_ADDRESS	0x5f                       	| [$b0d5: sta $5f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b0d7:
	rts                                    	| [$b0d7: rts]
l_b0d8:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$b0d8: lda current_object_index_4c]
	lsr.b	#1,d0                            	| [$b0da: lsr a]
	move.b	d0,d1                           	| [$b0db: tax]
	jbsr	l_f7b7                            	| [$b0dc: jsr $f7b7]
	GET_ADDRESS	0x0232                     	| [$b0df: lda $0232, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x70,d0                         	| [$b0e2: and #$70]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b0e4: sta $00]
	GET_ADDRESS	player_1_controls_022e     	| [$b0e6: lda player_1_controls_022e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$b0e9: and #$0f]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$b0eb: sta $01] store player 1 directions
	cmp.b	#0x01,d1                         	| [$b0ed: cpx #$01]
	* bcc=>bcs (cmp above)
	jcs	l_b0f3                             	| [$b0ef: bcc $b0f3]
	or.b	#0x10,d0                          	| [$b0f1: ora #$10]
l_b0f3:
	move.b	d0,d1                           	| [$b0f3: tax]
	GET_ADDRESS	0xb15c                     	| [$b0f4: lda $b15c, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b0f7: ldx current_object_index_4c]
	GET_ADDRESS	0x03cc                     	| [$b0f9: sta $03cc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x4f,d1 |  [$b0fc: cpx $4f]
	beq	l_b129                             	| [$b0fe: beq $b129]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$b100: lda $4f]
	bpl	l_b120                             	| [$b102: bpl $b120]
	GET_ADDRESS	0x031a                     	| [$b104: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b107: and #$7f]
	cmp.b	#0x0c,d0                         	| [$b109: cmp #$0c]
	* bcs=>bcc
	jcc	l_b128                             	| [$b10b: bcs $b128]
	jbsr	l_b17c                            	| [$b10d: jsr $b17c]
	jcs	l_b128                             	| [$b110: bcs $b128]
	jbsr	l_b2ed                            	| [$b112: jsr $b2ed]
	jcs	l_b128                             	| [$b115: bcs $b128]
	GET_ADDRESS	0x031a                     	| [$b117: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b11a: and #$7f]
	cmp.b	#0x0a,d0                         	| [$b11c: cmp #$0a]
	* bcs=>bcc
	jcc	l_b128                             	| [$b11e: bcs $b128]
l_b120:
	jbsr	l_b394                            	| [$b120: jsr $b394]
	jcs	l_b128                             	| [$b123: bcs $b128]
	jbsr	l_b3ec                            	| [$b125: jsr $b3ec]
l_b128:
	rts                                    	| [$b128: rts]
l_b129:
	GET_ADDRESS	0x031a                     	| [$b129: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b12c: and #$7f]
	cmp.b	#0x0c,d0                         	| [$b12e: cmp #$0c]
	beq	l_b128                             	| [$b130: beq $b128]
	cmp.b	#0x1a,d0                         	| [$b132: cmp #$1a]
	* bcs=>bcc
	jcc	l_b128                             	| [$b134: bcs $b128]
	cmp.b	#0x0a,d0                         	| [$b136: cmp #$0a]
	beq	l_b147                             	| [$b138: beq $b147]
	cmp.b	#0x19,d0                         	| [$b13a: cmp #$19]
	jne	l_b14e                             	| [$b13c: jne $b14e]
	jbsr	l_b42a                            	| [$b13e: jsr $b42a]
	jcs	l_b128                             	| [$b141: bcs $b128]
	jbsr	l_b2ed                            	| [$b143: jsr $b2ed]
	rts                                    	| [$b146: rts]
l_b147:
	jbsr	l_b2ed                            	| [$b147: jsr $b2ed]
	jbsr	l_b17c                            	| [$b14a: jsr $b17c]
	rts                                    	| [$b14d: rts]
l_b14e:
	GET_ADDRESS	0x030e                     	| [$b14e: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$b151: and #$08]
	beq	l_b128                             	| [$b153: beq $b128]
	jbsr	l_b40f                            	| [$b155: jsr $b40f]
	jcs	l_b128                             	| [$b158: bcs $b128]
	jcc	l_b120                             	| [$b15a: bcc $b120] unconditional jump

l_b17c:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b17c: lda $00]
	and.b	#0x10,d0                         	| [$b17e: and #$10]
	beq	l_b1fc                             	| [$b180: beq $b1fc]
	GET_ADDRESS	0x031a                     	| [$b182: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b185: and #$7f]
	cmp.b	#0x0a,d0                         	| [$b187: cmp #$0a]
	beq	l_b18f                             	| [$b189: beq $b18f]
	cmp.b	#0x0b,d0                         	| [$b18b: cmp #$0b]
	jne	l_b198                             	| [$b18d: jne $b198]
l_b18f:
	clr.b	d0                               	| [$b18f: lda #$00]
	GET_ADDRESS	0x03c8                     	| [$b191: sta $03c8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x0c,d0                        	| [$b194: lda #$0c]
	jne	l_b1e8                             	| [$b196: jne $b1e8]
l_b198:
	GET_ADDRESS	0x03e0                     	| [$b198: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x08,d0                         	| [$b19b: cmp #$08]
	beq	l_b1a3                             	| [$b19d: beq $b1a3]
	cmp.b	#0x05,d0                         	| [$b19f: cmp #$05]
	jne	l_b1b2                             	| [$b1a1: jne $b1b2]
l_b1a3:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$b1a3: lda $56]
	and.b	#0x10,d0                         	| [$b1a5: and #$10]
                                         | [$b1a7: lsr a]
                                         | [$b1a8: lsr a]
	lsr.b	#3,d0                            	| [$b1a9: lsr a]
	GET_ADDRESS	current_object_index_4c    	| [$b1aa: eor current_object_index_4c]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x02,d0                         	| [$b1ac: and #$02]
	beq	l_b1c0                             	| [$b1ae: beq $b1c0]
	jne	l_b1fc                             	| [$b1b0: jne $b1fc]
l_b1b2:
	GET_ADDRESS	0x03e9                     	| [$b1b2: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$b1b5: and #$10]
                                         | [$b1b7: lsr a]
                                         | [$b1b8: lsr a]
	lsr.b	#3,d0                            	| [$b1b9: lsr a]
	GET_ADDRESS	current_object_index_4c    	| [$b1ba: eor current_object_index_4c]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x02,d0                         	| [$b1bc: and #$02]
	jne	l_b1fc                             	| [$b1be: jne $b1fc]
l_b1c0:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b1c0: ldx current_object_index_4c]
	GET_ADDRESS	0x0316                     	| [$b1c2: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b1c5: and #$7f]
	cmp.b	#0x0b,d0                         	| [$b1c7: cmp #$0b]
	jne	l_b1e5                             	| [$b1c9: jne $b1e5]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$b1cb: lda current_object_index_4c]
	eor.b	#0x01,d0                         	| [$b1cd: eor #$01]
	move.b	d0,d2                           	| [$b1cf: tay]
	GET_ADDRESS	0x030a                     	| [$b1d0: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_b1fc                             	| [$b1d3: bpl $b1fc]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$b1d5: lda $f5]
	bmi	l_b1e5                             	| [$b1d7: bmi $b1e5]
	jne	l_b1e1                             	| [$b1d9: jne $b1e1]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$b1db: lda ball_logical_z_e7]
	cmp.b	#0x38,d0                         	| [$b1dd: cmp #$38]
	* bcc=>bcs (cmp above)
	jcs	l_b1e5                             	| [$b1df: bcc $b1e5]
l_b1e1:
	move.b	#0x0d,d0                        	| [$b1e1: lda #$0d]
	jne	l_b1e8                             	| [$b1e3: jne $b1e8]
l_b1e5:
	jbsr	l_b1fe                            	| [$b1e5: jsr $b1fe]
l_b1e8:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b1e8: ldx current_object_index_4c]
	or.b	#0x80,d0                          	| [$b1ea: ora #$80]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b1ec: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x031a                     	| [$b1ee: eor $031a, x]
	move.b	(a0,d1.w),d4	| [...]
	eor.b	d4,d0                     	| [...]
	and.b	#0x7f,d0                         	| [$b1f1: and #$7f]
	beq	l_b1fa                             	| [$b1f3: beq $b1fa]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b1f5: lda unpack_mode_and_misc_02]
	GET_ADDRESS	0x0327                     	| [$b1f7: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b1fa:
	SET_XC_FLAGS                           	| [$b1fa: sec]
	rts                                    	| [$b1fb: rts]
l_b1fc:
	CLR_XC_FLAGS                           	| [$b1fc: clc]
	rts                                    	| [$b1fd: rts]
l_b1fe:
	jbsr	l_c7b9                            	| [$b1fe: jsr $c7b9]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b201: ldx current_object_index_4c]
	GET_ADDRESS	0x0337                     	| [$b203: lda $0337, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x80,d0                         	| [$b206: and #$80]
	GET_ADDRESS	0xb2e9                     	| [$b208: cmp $b2e9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	jne	l_b223                             	| [$b20b: jne $b223]
	jbsr	l_ca09                            	| [$b20d: jsr $ca09]
	GET_ADDRESS	0x03e0                     	| [$b210: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$b213: cmp #$05]
	* bcc=>bcs (cmp above)
	jcs	l_b21b                             	| [$b215: bcc $b21b]
	cmp.b	#0x0a,d0                         	| [$b217: cmp #$0a]
	* bcc=>bcs (cmp above)
	jcs	l_b223                             	| [$b219: bcc $b223]
l_b21b:
	GET_ADDRESS	0x0390                     	| [$b21b: lda $0390, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0398                     	| [$b21e: ora $0398, x]
	or.b	(a0,d1.w),d0                      	| [...]
	jne	l_b237                             	| [$b221: jne $b237]
l_b223:
	GET_ADDRESS	0x0353                     	| [$b223: lda $0353, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x18,d0                         	| [$b226: cmp #$18]
	* bcs=>bcc
	jcc	l_b234                             	| [$b228: bcs $b234]
	GET_ADDRESS	0x034f                     	| [$b22a: lda $034f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x18,d0                         	| [$b22d: cmp #$18]
	* bcs=>bcc
	jcc	l_b234                             	| [$b22f: bcs $b234]
	jra	l_b2d2                             	| [$b231: jra $b2d2]
l_b234:
	jra	l_b281                             	| [$b234: jra $b281]
l_b237:
	clr.b	d0                               	| [$b237: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$b239: sta $01]
	GET_ADDRESS	0x0390                     	| [$b23b: lda $0390, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b23e: sec]
	SBC_X	objects_logical_y_array_b9       	| [$b23f: sbc objects_logical_y_array_b9, x]
	jcs	l_b249                             	| [$b241: bcs $b249]
	not.b	d0                               	| [$b243: eor #$ff]
	move.b	#0x01,d4	| [$b245: adc #$01]
	addx.b	d4,d0                        	| [$b245: adc #$01]
	OP_W_ON_ZP_ADDRESS	addq,0x01,#1 |  [$b247: inc $01]
l_b249:
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b249: sta $00]
	cmp.b	#0x18,d0                         	| [$b24b: cmp #$18]
	* bcs=>bcc
	jcc	l_b223                             	| [$b24d: bcs $b223]
	GET_ADDRESS	0x0398                     	| [$b24f: lda $0398, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x58,d0                         	| [$b252: cmp #$58]
	* bcs=>bcc
	jcc	l_b234                             	| [$b254: bcs $b234]
	cmp.b	#0x30,d0                         	| [$b256: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_b264                             	| [$b258: bcc $b264]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b25a: lda $00]
	cmp.b	#0x10,d0                         	| [$b25c: cmp #$10]
	* bcs=>bcc
	jcc	l_b234                             	| [$b25e: bcs $b234]
	move.b	#0x12,d0                        	| [$b260: lda #$12]
	jne	l_b274                             	| [$b262: jne $b274]
l_b264:
	move.b	#0x0f,d0                        	| [$b264: lda #$0f]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$b266: ldy $00]
	cmp.b	#0x08,d2                         	| [$b268: cpy #$08]
	* bcc=>bcs (cmp above)
	jcs	l_b274                             	| [$b26a: bcc $b274]
	move.b	#0x15,d0                        	| [$b26c: lda #$15]
	OP_R_ON_ZP_ADDRESS	move,0x01,d2 |  [$b26e: ldy $01]
	beq	l_b274                             	| [$b270: beq $b274]
	move.b	#0x16,d0                        	| [$b272: lda #$16]
l_b274:
	movem.w	d0,-(sp)                       	| [$b274: pha]
	GET_ADDRESS	0x0337                     	| [$b275: lda $0337, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x80,d0                         	| [$b278: and #$80]
	eor.b	#0xc0,d0                         	| [$b27a: eor #$c0]
	GET_ADDRESS	player_direction_032b      	| [$b27c: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$b27f: pla]
	rts                                    	| [$b280: rts]
l_b281:
	GET_ADDRESS	0x03e9                     	| [$b281: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$b284: and #$0f]
	cmp.b	#0x0f,d0                         	| [$b286: cmp #$0f]
	jne	l_b293                             	| [$b288: jne $b293]
	GET_ADDRESS	0x0373                     	| [$b28a: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$b28d: and #$0f]
	cmp.b	#0x09,d0                         	| [$b28f: cmp #$09]
	* bcs=>bcc
	jcc	l_b2d2                             	| [$b291: bcs $b2d2]
l_b293:
	GET_ADDRESS	0x03ea                     	| [$b293: lda $03ea]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$b296: sta $9c]
	GET_ADDRESS	0x03eb                     	| [$b298: lda $03eb]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$b29b: sta $aa]
	GET_ADDRESS	0x03ec                     	| [$b29d: lda $03ec]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$b2a0: sta $c6]
	GET_ADDRESS	0x03ed                     	| [$b2a2: lda $03ed]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$b2a5: sta $d4]
	move.b	#0x0d,d0                        	| [$b2a7: lda #$0d]
	jbsr	l_b44a                            	| [$b2a9: jsr $b44a]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b2ac: ldx current_object_index_4c]
	GET_ADDRESS	player_direction_032b      	| [$b2ae: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x13,d2                        	| [$b2b1: ldy #$13]
	cmp.b	#0xd0,d0                         	| [$b2b3: cmp #$d0]
	* bcs=>bcc
	jcc	l_b2d0                             	| [$b2b5: bcs $b2d0]
	cmp.b	#0x30,d0                         	| [$b2b7: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_b2d0                             	| [$b2b9: bcc $b2d0]
	move.b	#0x14,d2                        	| [$b2bb: ldy #$14]
	cmp.b	#0x50,d0                         	| [$b2bd: cmp #$50]
	* bcc=>bcs (cmp above)
	jcs	l_b2c5                             	| [$b2bf: bcc $b2c5]
	cmp.b	#0xb0,d0                         	| [$b2c1: cmp #$b0]
	* bcc=>bcs (cmp above)
	jcs	l_b2d0                             	| [$b2c3: bcc $b2d0]
l_b2c5:
	move.b	#0x10,d2                        	| [$b2c5: ldy #$10]
	GET_ADDRESS	0x034f                     	| [$b2c7: lda $034f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x40,d0                         	| [$b2ca: cmp #$40]
	* bcc=>bcs (cmp above)
	jcs	l_b2d0                             	| [$b2cc: bcc $b2d0]
	move.b	#0x11,d2                        	| [$b2ce: ldy #$11]
l_b2d0:
	move.b	d2,d0                           	| [$b2d0: tya]
	rts                                    	| [$b2d1: rts]
l_b2d2:
	move.b	#0x0f,d2                        	| [$b2d2: ldy #$0f]
	GET_ADDRESS	0x0353                     	| [$b2d4: lda $0353, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x10,d0                         	| [$b2d7: cmp #$10]
	* bcc=>bcs (cmp above)
	jcs	l_b2d0                             	| [$b2d9: bcc $b2d0]
	move.b	#0x15,d2                        	| [$b2db: ldy #$15]
	GET_ADDRESS	0x03ec                     	| [$b2dd: lda $03ec]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b2e0: cmp objects_logical_y_array_b9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_b2d0                             	| [$b2e2: bcs $b2d0]
	move.b	#0x16,d2                        	| [$b2e4: ldy #$16]
	jra	l_b2d0                             	| [$b2e6: jra $b2d0]

l_b2ed:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b2ed: ldx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b2ef: lda $00]
	and.b	#0x20,d0                         	| [$b2f1: and #$20]
	beq	l_b35e                             	| [$b2f3: beq $b35e]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$b2f5: lda $56]
	and.b	#0x20,d0                         	| [$b2f7: and #$20]
	jne	l_b359                             	| [$b2f9: jne $b359]
	GET_ADDRESS	0x030e                     	| [$b2fb: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_b360                             	| [$b2fe: bmi $b360]
	and.b	#0x28,d0                         	| [$b300: and #$28]
	jne	l_b35e                             	| [$b302: jne $b35e]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$b304: lda $4f]
	bpl	l_b34b                             	| [$b306: bpl $b34b]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$b308: lda $56]
	and.b	#0x10,d0                         	| [$b30a: and #$10]
                                         | [$b30c: lsr a]
                                         | [$b30d: lsr a]
	lsr.b	#3,d0                            	| [$b30e: lsr a]
	GET_ADDRESS	current_object_index_4c    	| [$b30f: eor current_object_index_4c]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x02,d0                         	| [$b311: and #$02]
	jne	l_b31d                             	| [$b313: jne $b31d]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$b315: lda $56]
	and.b	#0x0f,d0                         	| [$b317: and #$0f]
	beq	l_b35e                             	| [$b319: beq $b35e]
	jne	l_b33e                             	| [$b31b: jne $b33e]
l_b31d:
	GET_ADDRESS	0x03e0                     	| [$b31d: lda $03e0]
	move.b	(a0),d0                         	| [...]
	beq	l_b33e                             	| [$b320: beq $b33e]
	cmp.b	#0x05,d0                         	| [$b322: cmp #$05]
	* bcc=>bcs (cmp above)
	jcs	l_b33e                             	| [$b324: bcc $b33e]
	move.b	d1,d0                           	| [$b326: txa]
	lsr.b	#1,d0                            	| [$b327: lsr a]
	move.b	d0,d2                           	| [$b328: tay]
	GET_ADDRESS	0x005f                     	| [$b329: lda $005f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,current_object_index_4c,d0 |  [$b32c: cmp current_object_index_4c]
	beq	l_b339                             	| [$b32e: beq $b339]
	move.b	d1,d0                           	| [$b330: txa]
	eor.b	#0x01,d0                         	| [$b331: eor #$01]
	move.b	d0,d2                           	| [$b333: tay]
	GET_ADDRESS	0x030a                     	| [$b334: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_b35e                             	| [$b337: bpl $b35e]
l_b339:
	move.b	#0x0e,d0                        	| [$b339: lda #$0e]
	jra	l_b1e8                             	| [$b33b: jra $b1e8]
l_b33e:
	GET_ADDRESS	0x031a                     	| [$b33e: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b341: and #$7f]
	cmp.b	#0x09,d0                         	| [$b343: cmp #$09]
	jne	l_b34b                             	| [$b345: jne $b34b]
	move.b	#0x0b,d2                        	| [$b347: ldy #$0b]
	jne	l_b34d                             	| [$b349: jne $b34d]
l_b34b:
	move.b	#0x0a,d2                        	| [$b34b: ldy #$0a]
l_b34d:
	clr.b	d0                               	| [$b34d: lda #$00]
	GET_ADDRESS	0x03d4                     	| [$b34f: sta $03d4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03d0                     	| [$b352: sta $03d0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$b355: tya]
	jra	l_b1e8                             	| [$b356: jra $b1e8]
l_b359:
	move.b	#0x04,d0                        	| [$b359: lda #$04]
	GET_ADDRESS	0x03dc                     	| [$b35b: sta $03dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b35e:
	CLR_XC_FLAGS                           	| [$b35e: clc]
	rts                                    	| [$b35f: rts]
l_b360:
	GET_ADDRESS	0x031a                     	| [$b360: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b363: and #$7f]
	cmp.b	#0x0a,d0                         	| [$b365: cmp #$0a]
	beq	l_b36d                             	| [$b367: beq $b36d]
	cmp.b	#0x0b,d0                         	| [$b369: cmp #$0b]
	jne	l_b35e                             	| [$b36b: jne $b35e]
l_b36d:
	clr.b	d0                               	| [$b36d: lda #$00]
	GET_ADDRESS	0x03d4                     	| [$b36f: sta $03d4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x01,d2                        	| [$b372: ldy #$01]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$b374: lda $4f]
	OP_R_ON_ZP_ADDRESS	cmp,current_object_index_4c,d0 |  [$b376: cmp current_object_index_4c]
	jne	l_b37c                             	| [$b378: jne $b37c]
	move.b	#0x03,d2                        	| [$b37a: ldy #$03]
l_b37c:
	OP_W_ON_ZP_ADDRESS	move,0x00,d2 |  [$b37c: sty $00]
	GET_ADDRESS	0x03d0                     	| [$b37e: inc $03d0, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$b381: lda $03d0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b384: sec]
	SBC	0x00                               	| [$b385: sbc $00]
	jcc	l_b392                             	| [$b387: bcc $b392]
	cmp.b	#0x04,d0                         	| [$b389: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_b38f                             	| [$b38b: bcc $b38f]
	move.b	#0x03,d0                        	| [$b38d: lda #$03]
l_b38f:
	GET_ADDRESS	0x03d4                     	| [$b38f: sta $03d4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b392:
	CLR_XC_FLAGS                           	| [$b392: clc]
	rts                                    	| [$b393: rts]
l_b394:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b394: ldx current_object_index_4c]
	GET_ADDRESS	0x030e                     	| [$b396: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$b399: and #$08]
	beq	l_b3bb                             	| [$b39b: beq $b3bb]
	OP_R_ON_ZP_ADDRESS	move,0x01,d2 |  [$b39d: ldy $01]
	GET_ADDRESS	0xb3ce                     	| [$b39f: lda $b3ce, y]
	move.b	(a0,d2.w),d0                    	| [...]
	beq	l_b3cc                             	| [$b3a2: beq $b3cc]
	GET_ADDRESS	player_direction_032b      	| [$b3a4: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	cmp.b	#0x02,d1                         	| [$b3a7: cpx #$02]
	* bcc=>bcs (cmp above)
	jcs	l_b3b6                             	| [$b3a9: bcc $b3b6]
	      	| [$b3ab: lda player_direction_032b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$b3ae: eor #$ff]
	                           	| [$b3b0: clc]
	add.b	#0x01,d0                        	| [$b3b1: adc #$01]
	      	| [$b3b3: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b3b6:
	move.b	#0x18,d0                        	| [$b3b6: lda #$18]
	jra	l_b1e8                             	| [$b3b8: jra $b1e8]
l_b3bb:
	OP_R_ON_ZP_ADDRESS	move,0x01,d2 |  [$b3bb: ldy $01] copy of player 1 directions
	GET_ADDRESS	directions_table_b3dc      	| [$b3bd: lda directions_table_b3dc, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	player_direction_032b      	| [$b3c0: sta player_direction_032b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	tst.b	d2                               	| [$b3c3: cpy #$00]
	beq	l_b3cc                             	| [$b3c5: beq $b3cc]
	move.b	#0x09,d0                        	| [$b3c7: lda #$09]
	jra	l_b1e8                             	| [$b3c9: jra $b1e8]
l_b3cc:
	CLR_XC_FLAGS                           	| [$b3cc: clc]
	rts                                    	| [$b3cd: rts]

l_b3ec:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b3ec: ldx current_object_index_4c]
	GET_ADDRESS	0x030e                     	| [$b3ee: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$b3f1: and #$08]
	beq	l_b3f9                             	| [$b3f3: beq $b3f9]
	move.b	#0x17,d0                        	| [$b3f5: lda #$17]
	jne	l_b40c                             	| [$b3f7: jne $b40c]
l_b3f9:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$b3f9: lda $4f]
	bmi	l_b401                             	| [$b3fb: bmi $b401]
	move.b	#0x03,d0                        	| [$b3fd: lda #$03]
	jne	l_b40c                             	| [$b3ff: jne $b40c]
l_b401:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$b401: lda $56]
                                         | [$b403: lsr a]
                                         | [$b404: lsr a]
	lsr.b	#3,d0                            	| [$b405: lsr a]
	GET_ADDRESS	current_object_index_4c    	| [$b406: eor current_object_index_4c]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x02,d0                         	| [$b408: and #$02]
	clr.b	d0                               	| [$b40a: lda #$00]
l_b40c:
	jra	l_b1e8                             	| [$b40c: jra $b1e8]
l_b40f:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b40f: lda $00]
	and.b	#0x10,d0                         	| [$b411: and #$10]
	beq	l_b41f                             	| [$b413: beq $b41f]
l_b415:
	clr.b	d0                               	| [$b415: lda #$00]
	GET_ADDRESS	0x03d8                     	| [$b417: sta $03d8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x19,d0                        	| [$b41a: lda #$19]
	jra	l_b1e8                             	| [$b41c: jra $b1e8]
l_b41f:
	GET_ADDRESS	0x03d8                     	| [$b41f: inc $03d8, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                     	| [$b422: lda $03d8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x90,d0                         	| [$b425: cmp #$90]
	* bcs=>bcc
	jcc	l_b415                             	| [$b427: bcs $b415]
	CLR_XC_FLAGS
	rts                                    	| [$b429: rts]
l_b42a:
	GET_ADDRESS	0x031a                     	| [$b42a: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$b42d: and #$7f]
	cmp.b	#0x19,d0                         	| [$b42f: cmp #$19]
	jne	l_b445                             	| [$b431: jne $b445]
	GET_ADDRESS	0x030e                     	| [$b433: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$b436: and #$08]
	jne	l_b445                             	| [$b438: jne $b445]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b43a: lda $00]
	and.b	#0x10,d0                         	| [$b43c: and #$10]
	beq	l_b445                             	| [$b43e: beq $b445]
	move.b	#0x1b,d0                        	| [$b440: lda #$1b]
	jra	l_b1e8                             	| [$b442: jra $b1e8]
l_b445:
	CLR_XC_FLAGS                           	| [$b445: clc]
	rts                                    	| [$b446: rts]
* sec+bcs => bra
	SET_XC_FLAGS   | needed when returning
	bra.b	l_b44b                             	| [$b448: bcs $b44b]
l_b44a:
	CLR_XC_FLAGS                           	| [$b44a: clc]
l_b44b:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b44b: sta $1b]
	move.b	d1,d0                           	| [$b44d: txa]
	movem.w	d0,-(sp)                       	| [$b44e: pha]
	move.b	d2,d0                           	| [$b44f: tya]
	movem.w	d0,-(sp)                       	| [$b450: pha]
	PUSH_SR                                	| [$b451: php]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d1 |  [$b452: ldx $1b]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b454: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b456: sta screen_source_pointer_0010]
	GET_ADDRESS	objects_side_array_9d      	| [$b458: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b45a: sta $11]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b45c: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b45e: sta multipurpose_12]
	GET_ADDRESS	0xc7                       	| [$b460: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b462: sta multipurpose_13]
	jra	l_b470                             	| [$b464: jra $b470]
* seems not called ever
* sec+bcs => bra
	SET_XC_FLAGS   | needed when returning
	bra.b	l_b46b                             	| [$b468: bcs $b46b]
* this is called
l_b46a:
	CLR_XC_FLAGS                           	| [$b46a: clc]
l_b46b:
	move.b	d1,d0                           	| [$b46b: txa]
	movem.w	d0,-(sp)                       	| [$b46c: pha]
	move.b	d2,d0                           	| [$b46d: tya]
	movem.w	d0,-(sp)                       	| [$b46e: pha]
	PUSH_SR                                	| [$b46f: php]
l_b470:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b470: ldx current_object_index_4c]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b472: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$b474: sta multipurpose_14]
	GET_ADDRESS	objects_side_array_9d      	| [$b476: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$b478: sta $15]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b47a: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$b47c: sta screen_attribute_dest_address_16]
	GET_ADDRESS	0xc7                       	| [$b47e: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$b480: sta $17]
	jra	l_b48e                             	| [$b482: jra $b48e]
* seems not called ever
* sec+bcs => bra
	SET_XC_FLAGS   | needed when returning
	bra.b	l_b489                             	| [$b486: bcs $b489]
	CLR_XC_FLAGS                           	| [$b488: clc]
l_b489:
	move.b	d1,d0                           	| [$b489: txa]
	movem.w	d0,-(sp)                       	| [$b48a: pha]
	move.b	d2,d0                           	| [$b48b: tya]
	movem.w	d0,-(sp)                       	| [$b48c: pha]
	PUSH_SR                                	| [$b48d: php]
* this is called
l_b48e:
	clr.b	d0                               	| [$b48e: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$b490: sta $03]
	SET_XC_FLAGS                           	| [$b492: sec]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b493: lda screen_source_pointer_0010]
	SBC	multipurpose_14                    	| [$b495: sbc multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$b497: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$b499: lda $11]
	SBC	0x15                               	| [$b49b: sbc $15]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$b49d: sta $05]
	bpl	l_b4b7                             	| [$b49f: bpl $b4b7]
	not.b	d0                               	| [$b4a1: eor #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$b4a3: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$b4a5: lda $04]
	not.b	d0                               	| [$b4a7: eor #$ff]
	move.b	#0x01,d4	| [$b4a9: adc #$01]
	addx.b	d4,d0                        	| [$b4a9: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$b4ab: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$b4ad: lda $05]
	moveq	#0x00,d4	| [$b4af: adc #$00]
	addx.b	d4,d0                        	| [$b4af: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$b4b1: sta $05]
	move.b	#0x01,d0                        	| [$b4b3: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$b4b5: sta $03]
l_b4b7:
	clr.b	d0                               	| [$b4b7: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b4b9: sta $00]
	SET_XC_FLAGS                           	| [$b4bb: sec]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b4bc: lda multipurpose_12]
	SBC	screen_attribute_dest_address_16   	| [$b4be: sbc screen_attribute_dest_address_16]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$b4c0: sta $01]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b4c2: lda multipurpose_13]
	SBC	0x17                               	| [$b4c4: sbc $17]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b4c6: sta unpack_mode_and_misc_02]
	bpl	l_b4e0                             	| [$b4c8: bpl $b4e0]
	not.b	d0                               	| [$b4ca: eor #$ff]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b4cc: sta unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$b4ce: lda $01]
	not.b	d0                               	| [$b4d0: eor #$ff]
	move.b	#0x01,d4	| [$b4d2: adc #$01]
	addx.b	d4,d0                        	| [$b4d2: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$b4d4: sta $01]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b4d6: lda unpack_mode_and_misc_02]
	moveq	#0x00,d4	| [$b4d8: adc #$00]
	addx.b	d4,d0                        	| [$b4d8: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b4da: sta unpack_mode_and_misc_02]
	move.b	#0x01,d0                        	| [$b4dc: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b4de: sta $00]
l_b4e0:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b4e0: lda $00]
	asl.b	#1,d0                            	| [$b4e2: asl a]
	OP_R_ON_ZP_ADDRESS	or,0x03,d0 |  [$b4e3: ora $03]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$b4e5: sta unknown_07]
	POP_SR                                 	| [$b4e7: plp]
	SET_C_FROM_X
	jcc	l_b52f                             	| [$b4e8: bcc $b52f]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$b4ea: lda $01]
	SBC	0x04                               	| [$b4ec: sbc $04]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b4ee: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b4f0: lda unpack_mode_and_misc_02]
	SBC	0x05                               	| [$b4f2: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$b4f4: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d1 |  [$b4f6: ldx unknown_07]
	GET_ADDRESS	0xb53b                     	| [$b4f8: lda $b53b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b4fb: sta base_screen_pointer_list_001d]
	SET_C_FROM_X
	jcs	l_b51a                             	| [$b4fd: bcs $b51a]
	move.b	#0x04,d0                        	| [$b4ff: lda #$04]
	OP_R_ON_ZP_ADDRESS	or,unknown_07,d0 |  [$b501: ora unknown_07]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$b503: sta unknown_07]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b505: lda unpack_mode_and_misc_02]
	jne	l_b50f                             	| [$b507: jne $b50f]
	move.b	#0x08,d0                        	| [$b509: lda #$08]
	OP_R_ON_ZP_ADDRESS	cmp,0x01,d0 |  [$b50b: cmp $01]
	* bcs=>bcc
	jcc	l_b520                             	| [$b50d: bcs $b520]
l_b50f:
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b50f: lda base_screen_pointer_list_001d]
	not.b	d0                               	| [$b511: eor #$ff]
	                           	| [$b513: clc]
	add.b	#0x01,d0                        	| [$b514: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b516: sta base_screen_pointer_list_001d]
	jne	l_b524                             	| [$b518: jne $b524]
l_b51a:
	move.b	#0x03,d0                        	| [$b51a: lda #$03]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$b51c: cmp $1b]
	* bcs=>bcc
	jcc	l_b524                             	| [$b51e: bcs $b524]
l_b520:
	clr.b	d0                               	| [$b520: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b522: sta base_screen_pointer_list_001d]
l_b524:
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d1 |  [$b524: ldx unknown_07]
	GET_ADDRESS	0xb5ba                     	| [$b526: lda $b5ba, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$b529: clc]
	OP_R_ON_ZP_ADDRESS	add,base_screen_pointer_list_001d,d0 |  [$b52a: adc base_screen_pointer_list_001d]
	jra	l_b532                             	| [$b52c: jra $b532]
l_b52f:
	jbsr	l_b53f                            	| [$b52f: jsr $b53f]
l_b532:
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b532: sta base_screen_pointer_list_001d]
	move.w	(sp)+,d0                        	| [$b534: pla]
	move.b	d0,d2                           	| [$b535: tay]
	move.w	(sp)+,d0                        	| [$b536: pla]
	move.b	d0,d1                           	| [$b537: tax]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b538: lda base_screen_pointer_list_001d]
	rts                                    	| [$b53a: rts]

l_b53f:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b53f: lda screen_source_pointer_0010]
	movem.w	d0,-(sp)                       	| [$b541: pha]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$b542: lda $11]
	movem.w	d0,-(sp)                       	| [$b544: pha]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b545: lda multipurpose_12]
	movem.w	d0,-(sp)                       	| [$b547: pha]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b548: lda multipurpose_13]
	movem.w	d0,-(sp)                       	| [$b54a: pha]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$b54b: lda $01]
	SET_XC_FLAGS                           	| [$b54d: sec]
	SBC	0x04                               	| [$b54e: sbc $04]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b550: lda unpack_mode_and_misc_02]
	SBC	0x05                               	| [$b552: sbc $05]
	jcc	l_b563                             	| [$b554: bcc $b563]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$b556: lda $01]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b558: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$b55a: lda unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x04,d1 |  [$b55c: ldx $04]
	OP_R_ON_ZP_ADDRESS	move,0x05,d2 |  [$b55e: ldy $05]
	jra	l_b573                             	| [$b560: jra $b573]
l_b563:
	move.b	#0x04,d0                        	| [$b563: lda #$04]
	OP_R_ON_ZP_ADDRESS	or,unknown_07,d0 |  [$b565: ora unknown_07]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$b567: sta unknown_07]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$b569: lda $04]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b56b: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$b56d: lda $05]
	OP_R_ON_ZP_ADDRESS	move,0x01,d1 |  [$b56f: ldx $01]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d2 |  [$b571: ldy unpack_mode_and_misc_02]
l_b573:
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b573: sta multipurpose_13]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d1 |  [$b575: stx screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x11,d2 |  [$b577: sty $11]
	move.b	#0x04,d2                        	| [$b579: ldy #$04]
l_b57b:
	GET_ADDRESS	screen_source_pointer_0010 	| [$b57b: asl screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x11                       	| [$b57d: rol $11]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	subq.b	#1,d2                           	| [$b57f: dey]
	bpl	l_b57b                             	| [$b580: bpl $b57b]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$b582: lda multipurpose_14]
	movem.w	d0,-(sp)                       	| [$b584: pha]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$b585: lda $15]
	movem.w	d0,-(sp)                       	| [$b587: pha]
	jbsr	l_d02e                            	| [$b588: jsr $d02e]
	move.w	(sp)+,d0                        	| [$b58b: pla]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$b58c: sta $15]
	move.w	(sp)+,d0                        	| [$b58e: pla]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$b58f: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d1 |  [$b591: ldx unknown_07]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b593: lda screen_source_pointer_0010]
	GET_ADDRESS	0xb5b2                     	| [$b595: ldy $b5b2, x]
	move.b	(a0,d1.w),d2                    	| [...]
	beq	l_b59f                             	| [$b598: beq $b59f]
	not.b	d0                               	| [$b59a: eor #$ff]
	                           	| [$b59c: clc]
	add.b	#0x01,d0                        	| [$b59d: adc #$01]
l_b59f:
	                           	| [$b59f: clc]
	GET_ADDRESS	0xb5ba                     	| [$b5a0: adc $b5ba, x]
	add.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d1                           	| [$b5a3: tax]
	move.w	(sp)+,d0                        	| [$b5a4: pla]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b5a5: sta multipurpose_13]
	move.w	(sp)+,d0                        	| [$b5a7: pla]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b5a8: sta multipurpose_12]
	move.w	(sp)+,d0                        	| [$b5aa: pla]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b5ab: sta $11]
	move.w	(sp)+,d0                        	| [$b5ad: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b5ae: sta screen_source_pointer_0010]
	move.b	d1,d0                           	| [$b5b0: txa]
	rts                                    	| [$b5b1: rts]

l_b5c2:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b5c2: ldx current_object_index_4c]
	GET_ADDRESS	player_direction_copy_0254 	| [$b5c4: lda player_direction_copy_0254, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$b5c7: sta $00]
	GET_ADDRESS	0x0261                     	| [$b5c9: lda $0261, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$b5cc: sta $01]
	jbsr	l_b67c                            	| [$b5ce: jsr $b67c]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b5d1: lda screen_source_pointer_0010]
	GET_ADDRESS	0x026e                     	| [$b5d3: sta $026e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$b5d6: clc]
	GET_ADDRESS	0x81                       	| [$b5d7: adc $81, x]
	add.b	(a0,d1.w),d0                    	| [...]
	                       	| [$b5d9: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$b5db: lda $11]
	GET_ADDRESS	objects_x_speed_array_027b 	| [$b5dd: sta objects_x_speed_array_027b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	PUSH_SR                                	| [$b5e0: php]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b5e1: adc objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$b5e3: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$b5e5: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$b5e7: adc #$00]
	addx.b	d4,d0                        	| [$b5e7: adc #$00]
	POP_SR                                 	| [$b5e9: plp]
	bpl	l_b5ef                             	| [$b5ea: bpl $b5ef]
	                           	| [$b5ec: clc]
	add.b	#0xff,d0                        	| [$b5ed: adc #$ff]
l_b5ef:
	GET_ADDRESS	objects_side_array_9d      	| [$b5ef: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b5f1: lda multipurpose_12]
	GET_ADDRESS	0x0288                     	| [$b5f3: sta $0288, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                           	| [$b5f6: clc]
	GET_ADDRESS	0xab                       	| [$b5f7: adc $ab, x]
	add.b	(a0,d1.w),d0                    	| [...]
	                       	| [$b5f9: sta $ab, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b5fb: lda multipurpose_13]
	GET_ADDRESS	0x0295                     	| [$b5fd: sta $0295, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	PUSH_SR                                	| [$b600: php]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b601: adc objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$b603: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$b605: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$b607: adc #$00]
	addx.b	d4,d0                        	| [$b607: adc #$00]
	POP_SR                                 	| [$b609: plp]
	bpl	l_b60f                             	| [$b60a: bpl $b60f]
	                           	| [$b60c: clc]
	add.b	#0xff,d0                        	| [$b60d: adc #$ff]
l_b60f:
	GET_ADDRESS	0xc7                       	| [$b60f: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$b611: rts]


* called mostly for ball but also for jumping players
parabolic_movement_b612:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$b612: ldx current_object_index_4c]
	GET_ADDRESS	0xab                       	| [$b614: lda $ab, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$b616: clc]
	GET_ADDRESS	0x0288                     	| [$b617: adc $0288, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xab                       	| [$b61a: sta $ab, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0295                     	| [$b61c: lda $0295, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR                                	| [$b61f: php]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b620: adc objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$b622: sta objects_logical_y_array_b9, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xc7                       	| [$b624: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$b626: adc #$00]
	addx.b	d4,d0                        	| [$b626: adc #$00]
	POP_SR                                 	| [$b628: plp]
	bpl	l_b62e                             	| [$b629: bpl $b62e]
	                           	| [$b62b: clc]
	add.b	#0xff,d0                        	| [$b62c: adc #$ff]
l_b62e:
	GET_ADDRESS	0xc7                       	| [$b62e: sta $c7, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xd5                       	| [$b630: lda $d5, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$b632: clc]
	GET_ADDRESS	0x02a2                     	| [$b633: adc $02a2, x]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xd5                       	| [$b636: sta $d5, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02af                     	| [$b638: lda $02af, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR                                	| [$b63b: php]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$b63c: adc objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$b63e: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$b640: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$b642: adc #$00]
	addx.b	d4,d0                        	| [$b642: adc #$00]
	POP_SR                                 	| [$b644: plp]
	bpl	l_b64a                             	| [$b645: bpl $b64a]
	                           	| [$b647: clc]
	add.b	#0xff,d0                        	| [$b648: adc #$ff]
l_b64a:
	GET_ADDRESS	0xf1                       	| [$b64a: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x026e                     	| [$b64c: lda $026e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$b64f: clc]
	GET_ADDRESS	0x81                       	| [$b650: adc $81, x]
	add.b	(a0,d1.w),d0                    	| [...]
	                       	| [$b652: sta $81, x]
    move.b	d0,(a0,d1.w)                 	| [...]
* apply speed on object (X axis)
	GET_ADDRESS	objects_x_speed_array_027b 	| [$b654: lda objects_x_speed_array_027b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	PUSH_SR                                	| [$b657: php]
* can also be applied to the ball which comes after the player in array
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b658: adc objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	 	| [$b65a: sta objects_logical_x_array_8f, x]
    move.b	d0,(a0,d1.w)                 	| [...]
* side depends on carry as middle screen is at x=256
	GET_ADDRESS	objects_side_array_9d      	| [$b65c: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$b65e: adc #$00]
	addx.b	d4,d0                        	| [$b65e: adc #$00]
	POP_SR                                 	| [$b660: plp]
	bpl	l_b666                             	| [$b661: bpl $b666]
	                           	| [$b663: clc]
	add.b	#0xff,d0                        	| [$b664: adc #$ff]
l_b666:
	GET_ADDRESS	objects_side_array_9d      	| [$b666: sta objects_side_array_9d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02a2                     	| [$b668: lda $02a2, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$b66b: sec]
	SBC_X	0x02bc                           	| [$b66c: sbc $02bc, x]
	GET_ADDRESS	0x02a2                     	| [$b66f: sta $02a2, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x02af                     	| [$b672: lda $02af, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_X	0x02c9                           	| [$b675: sbc $02c9, x]
	GET_ADDRESS	0x02af                     	| [$b678: sta $02af, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$b67b: rts]

l_b67c:
	movem.w	d0-d2,-(sp)                       	| [$b67c: pha]
	                      	| [$b67d: txa]
	                     	| [$b67e: pha]
	                      	| [$b67f: tya]
	                     	| [$b680: pha]
	jbsr	l_b68d                            	| [$b681: jsr $b68d]
	jbsr	l_b6be                            	| [$b684: jsr $b6be]
	movem.w	(sp)+,d0-d2                        	| [$b687: pla]
	                       	| [$b688: tay]
	                       	| [$b689: pla]
	                       	| [$b68a: tax]
	                       	| [$b68b: pla]
	rts                                    	| [$b68c: rts]
l_b68d:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b68d: lda $00]
	and.b	#0x60,d0                         	| [$b68f: and #$60]
                                         | [$b691: lsr a]
                                         | [$b692: lsr a]
                                         | [$b693: lsr a]
	lsr.b	#4,d0                            	| [$b694: lsr a]
	move.b	d0,d2                           	| [$b695: tay]
	GET_ADDRESS	0xb6b6                     	| [$b696: ldx $b6b6, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0xb6b7                     	| [$b699: lda $b6b7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$b69c: php]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b69d: lda $00]
	and.b	#0x1f,d0                         	| [$b69f: and #$1f]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$b6a1: sta unpack_mode_and_misc_02, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	POP_SR                                 	| [$b6a3: plp]
	bpl	l_b6ad                             	| [$b6a4: bpl $b6ad]
	move.b	#0x20,d0                        	| [$b6a6: lda #$20]
	SET_XC_FLAGS                           	| [$b6a8: sec]
	SBC_X	unpack_mode_and_misc_02          	| [$b6a9: sbc unpack_mode_and_misc_02, x]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$b6ab: sta unpack_mode_and_misc_02, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b6ad:
	move.b	d1,d0                           	| [$b6ad: txa]
	eor.b	#0x01,d0                         	| [$b6ae: eor #$01]
	move.b	d0,d1                           	| [$b6b0: tax]
	move.b	#0x20,d0                        	| [$b6b1: lda #$20]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$b6b3: sta unpack_mode_and_misc_02, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	rts                                    	| [$b6b5: rts]

l_b6be:
	clr.b	d1                               	| [$b6be: ldx #$00]
	clr.b	d2                               	| [$b6c0: ldy #$00]
l_b6c2:
	clr.b	d0                               	| [$b6c2: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b6c4: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$b6c6: sta multipurpose_13]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$b6c8: lda unpack_mode_and_misc_02, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b6ca: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$b6cc: lda $01]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$b6ce: sta multipurpose_12]
	jbsr	l_d129                            	| [$b6d0: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$b6d3: lda multipurpose_14]
	GET_ADDRESS	0x0004                     	| [$b6d5: sta $0004, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$b6d8: lda $15]
	GET_ADDRESS	0x0005                     	| [$b6da: sta $0005, y]
    move.b	d0,(a0,d2.w)                 	| [...]
                                         | [$b6dd: iny]
	addq.b	#2,d2                           	| [$b6de: iny]
	addq.b	#1,d1                           	| [$b6df: inx]
	cmp.b	#0x02,d1                         	| [$b6e0: cpx #$02]
	* bcc=>bcs (cmp above)
	jcs	l_b6c2                             	| [$b6e2: bcc $b6c2]
	move.b	#0x03,d1                        	| [$b6e4: ldx #$03]
l_b6e6:
	GET_ADDRESS	0x04                       	| [$b6e6: lda $04, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	screen_source_pointer_0010 	| [$b6e8: sta screen_source_pointer_0010, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	subq.b	#1,d1                           	| [$b6ea: dex]
	bpl	l_b6e6                             	| [$b6eb: bpl $b6e6]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$b6ed: lda $00]
	and.b	#0xc0,d0                         	| [$b6ef: and #$c0]
                                         | [$b6f1: lsr a]
                                         | [$b6f2: lsr a]
                                         | [$b6f3: lsr a]
                                         | [$b6f4: lsr a]
	lsr.b	#5,d0                            	| [$b6f5: lsr a]
	move.b	d0,d2                           	| [$b6f6: tay]
	clr.b	d1                               	| [$b6f7: ldx #$00]
l_b6f9:
	GET_ADDRESS	0xb717                     	| [$b6f9: lda $b717, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_b70f                             	| [$b6fc: bpl $b70f]
	GET_ADDRESS	screen_source_pointer_0010 	| [$b6fe: lda screen_source_pointer_0010, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$b700: eor #$ff]
	                           	| [$b702: clc]
	add.b	#0x01,d0                        	| [$b703: adc #$01]
	 	| [$b705: sta screen_source_pointer_0010, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x11                       	| [$b707: lda $11, x]
	move.b	(a0,d1.w),d0                    	| [...]
	not.b	d0                               	| [$b709: eor #$ff]
	moveq	#0x00,d4	| [$b70b: adc #$00]
	addx.b	d4,d0                        	| [$b70b: adc #$00]
	                       	| [$b70d: sta $11, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b70f:
	addq.b	#1,d2                           	| [$b70f: iny]
                                         | [$b710: inx]
	addq.b	#2,d1                           	| [$b711: inx]
	cmp.b	#0x04,d1                         	| [$b712: cpx #$04]
	* bcc=>bcs (cmp above)
	jcs	l_b6f9                             	| [$b714: bcc $b6f9]
	rts                                    	| [$b716: rts]

l_b71f:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b71f: sta $1b]
	move.b	d1,d0                           	| [$b721: txa]
	movem.w	d0,-(sp)                       	| [$b722: pha]
	move.b	d2,d0                           	| [$b723: tya]
	movem.w	d0,-(sp)                       	| [$b724: pha]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d1 |  [$b725: ldx $1b]
	clr.b	d0                               	| [$b727: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b729: sta $1b]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b72b: sta base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	move,0x24,d0 |  [$b72d: sta $24]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b72f: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$b731: sta $29]
	GET_ADDRESS	objects_side_array_9d      	| [$b733: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_b792                             	| [$b735: bmi $b792]
	beq	l_b75b                             	| [$b737: beq $b75b]
	cmp.b	#0x02,d0                         	| [$b739: cmp #$02]
	* bcs=>bcc
	jcc	l_b78e                             	| [$b73b: bcs $b78e]
	OP_W_ON_ZP_ADDRESS	addq,0x24,#1 |  [$b73d: inc $24]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b73f: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0xc0,d0                         	| [$b741: cmp #$c0]
	* bcs=>bcc
	jcc	l_b74e                             	| [$b743: bcs $b74e]
	cmp.b	#0x90,d0                         	| [$b745: cmp #$90]
	* bcc=>bcs (cmp above)
	jcs	l_b74e                             	| [$b747: bcc $b74e]
	                           	| [$b749: sec]
	sub.b	#0x08,d0	| [$b74a: sbc #$08]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$b74c: sta $29]
l_b74e:
	                           	| [$b74e: clc]
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b74f: lda $29]
	not.b	d0                               	| [$b751: eor #$ff]
	move.b	#0x01,d4	| [$b753: adc #$01]
	add.b	d4,d0                        	| [$b753: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$b755: sta $29]
	jne	l_b75b                             	| [$b757: jne $b75b]
	OP_W_ON_ZP_ADDRESS	addq,base_screen_pointer_list_001d,#1 |  [$b759: inc base_screen_pointer_list_001d]
l_b75b:
	GET_ADDRESS	0xc7                       	| [$b75b: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_b764                             	| [$b75d: bpl $b764]
	move.b	#0x07,d2                        	| [$b75f: ldy #$07]
	jra	l_b778                             	| [$b761: jra $b778]
l_b764:
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b764: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b766: sta $1b]
	clr.b	d0                               	| [$b768: lda #$00]
	clr.b	d2                               	| [$b76a: ldy #$00]
	                           	| [$b76c: clc]
	GET_ADDRESS	0xb8a5                     	| [$b76d: adc $b8a5, y] early load
l_b76d:
	move.b	(a0,d2.w),d4	| [...]
	add.b	d4,d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x1b,d0 |  [$b770: cmp $1b]
	* bcs=>bcc
	jcc	l_b778                             	| [$b772: bcs $b778]
	* means carry is cleared here, no carry/adc issues then
	addq.b	#1,d2                           	| [$b774: iny]
	jra	l_b76d                             	| [$b775: jra $b76d]
l_b778:
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$b778: lda base_screen_pointer_list_001d]
	jne	l_b795                             	| [$b77a: jne $b795]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d2 |  [$b77c: sty $2a]
	move.b	d2,d0                           	| [$b77e: tya]
	asl.b	#1,d0                            	| [$b77f: asl a]
	move.b	d0,d2                           	| [$b780: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_b7a7            	| [$b781: lda jump_table_b7a7, y]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b784: sta $1b]
	GET_ADDRESS	0xb7a8                     	| [$b786: lda $b7a8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$b789: sta $1c]
	rts |  [$b78b: jra ($001b)] [indirect_jump]
l_b78e:
	move.b	#0x01,d0                        	| [$b78e: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b790: sta $1b]
l_b792:
	jra	l_b894                             	| [$b792: jra $b894]
l_b795:
	cmp.b	#0x03,d2                         	| [$b795: cpy #$03]
	jne	l_b7a1                             	| [$b797: jne $b7a1]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b799: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x40,d0                         	| [$b79b: cmp #$40]
	* bcc=>bcs (cmp above)
	jcs	l_b7a1                             	| [$b79d: bcc $b7a1]
	move.b	#0x08,d2                        	| [$b79f: ldy #$08]
l_b7a1:
	GET_ADDRESS	0xb905                     	| [$b7a1: lda $b905, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jra	l_b89c                             	| [$b7a4: jra $b89c]

l_b7b7:
	GET_ADDRESS	0x2a                       	| [$b7b7: lsr $2a]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
l_b7b9:
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b7b9: lda $29]
	cmp.b	#0xf8,d0                         	| [$b7bb: cmp #$f8]
	* bcs=>bcc
	jcc	l_b7df                             	| [$b7bd: bcs $b7df]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b7bf: lda $2a]
	asl.b	#1,d0                            	| [$b7c1: asl a]
	GET_ADDRESS	0x2a                       	| [$b7c2: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$b7c4: tay]
	clr.b	d0                               	| [$b7c5: lda #$00]
	                           	| [$b7c7: clc]
l_b7c8:
	GET_ADDRESS	0xb8ad                     	| [$b7c8: adc $b8ad, y]
	move.b	(a0,d2.w),d4	| [...]
	add.b	d4,d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x29,d0 |  [$b7cb: cmp $29]
	* bcs=>bcc
	jcc	l_b7d3                             	| [$b7cd: bcs $b7d3]
	* means carry is originarily cleared here: no adc/carry conflicts with addq...
	addq.b	#1,d2                           	| [$b7cf: iny]
	jra	l_b7c8                             	| [$b7d0: jra $b7c8]
l_b7d3:
	GET_ADDRESS	objects_side_array_9d      	| [$b7d3: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
                                         | [$b7d5: asl a]
                                         | [$b7d6: asl a]
                                         | [$b7d7: asl a]
	asl.b	#4,d0                            	| [$b7d8: asl a]
	GET_ADDRESS	0xb8b9                     	| [$b7d9: ora $b8b9, y]
	or.b	(a0,d2.w),d0                      	| [...]
	jra	l_b89c                             	| [$b7dc: jra $b89c]
l_b7df:
	OP_R_ON_ZP_ADDRESS	move,0x2a,d2 |  [$b7df: ldy $2a]
	GET_ADDRESS	0xb8c5                     	| [$b7e1: lda $b8c5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jra	l_b89c                             	| [$b7e4: jra $b89c]
l_b7e7:
	SET_XC_FLAGS                           	| [$b7e7: sec]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b7e8: lda $2a]
	SBC_IMM	0x02                           	| [$b7ea: sbc #$02]
	OP_W_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b7ec: sta $2a]
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b7ee: lda $29]
	cmp.b	#0xf0,d0                         	| [$b7f0: cmp #$f0]
	* bcs=>bcc
	jcc	l_b856                             	| [$b7f2: bcs $b856]
	GET_ADDRESS	0x2a                       	| [$b7f4: asl $2a]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b7f6: lda $2a]
	asl.b	#1,d0                            	| [$b7f8: asl a]
	                       	| [$b7f9: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$b7fb: tay]
	clr.b	d0                               	| [$b7fc: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x27,d0 |  [$b7fe: sta $27]
	                           	| [$b800: clc]
	GET_ADDRESS	0xb8c9                     	| [$b801: adc $b8c9, y] early load
l_b801:
	move.b	(a0,d2.w),d4	| [...]
	add.b	d4,d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x29,d0 |  [$b804: cmp $29]
	* bcs=>bcc
	jcc	l_b80e                             	| [$b806: bcs $b80e]
	addq.b	#1,d2                           	| [$b808: iny]
	OP_W_ON_ZP_ADDRESS	addq,0x27,#1 |  [$b809: inc $27]
	jra	l_b801                             	| [$b80b: jra $b801]
l_b80e:
	OP_R_ON_ZP_ADDRESS	move,0x27,d0 |  [$b80e: lda $27]
	beq	l_b822                             	| [$b810: beq $b822]
	cmp.b	#0x02,d0                         	| [$b812: cmp #$02]
	beq	l_b822                             	| [$b814: beq $b822]
l_b816:
	GET_ADDRESS	objects_side_array_9d      	| [$b816: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
                                         | [$b818: asl a]
                                         | [$b819: asl a]
                                         | [$b81a: asl a]
	asl.b	#4,d0                            	| [$b81b: asl a]
	GET_ADDRESS	0xb8db                     	| [$b81c: ora $b8db, y]
	or.b	(a0,d2.w),d0                      	| [...]
	jra	l_b89c                             	| [$b81f: jra $b89c]
l_b822:
	lsr.b	#1,d0                            	| [$b822: lsr a]
	GET_ADDRESS	0x2a                       	| [$b823: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	asl.b	#1,d0                            	| [$b825: asl a]
	move.b	d0,d2                           	| [$b826: tay]
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b827: lda $29]
	GET_ADDRESS	0xb8ed                     	| [$b829: cmp $b8ed, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_b84a                             	| [$b82c: bcc $b84a]
	SET_XC_FLAGS                           	| [$b82e: sec]
	SBC_Y	0xb8ed                           	| [$b82f: sbc $b8ed, y]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$b832: sta $26]
	OP_R_ON_ZP_ADDRESS	move,0x27,d0 |  [$b834: lda $27]
	beq	l_b83d                             	| [$b836: beq $b83d]
	OP_R_ON_ZP_ADDRESS	move,0x26,d0 |  [$b838: lda $26]
	asl.b	#1,d0         	| [$b83a: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x26,d0 |  [$b83b: sta $26]
l_b83d:
	OP_R_ON_ZP_ADDRESS	move,0x26,d0 |  [$b83d: lda $26]
                                         | [$b83f: asl a]
	asl.b	#2,d0                            	| [$b840: asl a]
	GET_ADDRESS	0xb8ee                     	| [$b841: adc $b8ee, y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b844: cmp objects_logical_y_array_b9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_b84a                             	| [$b846: bcc $b84a]
	OP_W_ON_ZP_ADDRESS	addq,0x27,#1 |  [$b848: inc $27]
l_b84a:
	                           	| [$b84a: clc]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b84b: lda $2a]
	asl.b	#1,d0                            	| [$b84d: asl a]
	GET_ADDRESS	0x2a                       	| [$b84e: adc $2a]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x27                       	| [$b850: adc $27]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$b852: tay]
	jra	l_b816                             	| [$b853: jra $b816]
l_b856:
	SET_XC_FLAGS                           	| [$b856: sec]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$b857: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_IMM	0xf0                           	| [$b859: sbc #$f0]
	OP_W_ON_ZP_ADDRESS	move,0x29,d0 |  [$b85b: sta $29]
	OP_R_ON_ZP_ADDRESS	move,0x2a,d0 |  [$b85d: lda $2a]
	asl.b	#1,d0                            	| [$b85f: asl a]
	move.b	d0,d2                           	| [$b860: tay]
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b861: lda $29]
	cmp.b	#0x18,d0                         	| [$b863: cmp #$18]
	* bcs=>bcc
	jcc	l_b87d                             	| [$b865: bcs $b87d]
	GET_ADDRESS	0xb8f9                     	| [$b867: cmp $b8f9, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_b87e                             	| [$b86a: bcc $b87e]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC_Y	0xb8f9                           	| [$b86c: sbc $b8f9, y]
                                         | [$b86f: asl a]
	asl.b	#2,d0                            	| [$b870: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x24,d0 |  [$b871: sta $24]
	SET_XC_FLAGS                           	| [$b873: sec]
	GET_ADDRESS	0xb8fa                     	| [$b874: lda $b8fa, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC	0x24                               	| [$b877: sbc $24]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$b879: cmp objects_logical_y_array_b9, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_b87e                             	| [$b87b: bcs $b87e]
l_b87d:
	addq.b	#1,d2                           	| [$b87d: iny]
l_b87e:
	GET_ADDRESS	0xb8ff                     	| [$b87e: lda $b8ff, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jra	l_b89c                             	| [$b881: jra $b89c]
l_b884:
	GET_ADDRESS	objects_side_array_9d      	| [$b884: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b886: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,0x29,d0 |  [$b888: lda $29]
	cmp.b	#0xf8,d0                         	| [$b88a: cmp #$f8]
	* bcc=>bcs (cmp above)
	jcs	l_b894                             	| [$b88c: bcc $b894]
	 |  [$b88e: lda $1b]
	         	| [$b890: eor #$01]
	OP_W_ON_ZP_ADDRESS	eor,0x1b,#0x01 |  [$b892: sta $1b]
l_b894:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b894: lda $1b]
                                         | [$b896: asl a]
                                         | [$b897: asl a]
                                         | [$b898: asl a]
	asl.b	#4,d0                            	| [$b899: asl a]
	or.b	#0x0f,d0                          	| [$b89a: ora #$0f]
l_b89c:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b89c: sta $1b]
	move.w	(sp)+,d0                        	| [$b89e: pla]
	move.b	d0,d2                           	| [$b89f: tay]
	move.w	(sp)+,d0                        	| [$b8a0: pla]
	move.b	d0,d1                           	| [$b8a1: tax]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b8a2: lda $1b]
	rts                                    	| [$b8a4: rts]

l_b90e:
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b90e: sta $1b]
	move.b	d2,d0                           	| [$b910: tya]
	movem.w	d0,-(sp)                       	| [$b911: pha]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b912: lda $1b]
	 |  [$b914: cmp #$00]
	beq	l_b955                             	| [$b916: beq $b955]
	move.b	d1,d0                           	| [$b918: txa]
	lsr.b	#1,d0                            	| [$b919: lsr a]
	eor.b	#0x01,d0                         	| [$b91a: eor #$01]
	move.b	d0,d2                           	| [$b91c: tay]
	GET_ADDRESS	0x004d                     	| [$b91d: lda $004d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$b920: tay]
	GET_ADDRESS	0x0373                     	| [$b921: lda $0373, y]
	move.b	(a0,d2.w),d0                    	| [...]
	eor.b	#0x10,d0                         	| [$b924: eor #$10]
	                     	| [$b926: cmp $0373, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	jne	l_b955                             	| [$b929: jne $b955]
	move.b	#0x7c,d0                        	| [$b92b: lda #$7c]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b92d: sta screen_source_pointer_0010]
	move.b	#0xb9,d0                        	| [$b92f: lda #$b9]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b931: sta $11]
	GET_ADDRESS	0x0312                     	| [$b933: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$b936: asl a]
	GET_ADDRESS	screen_source_pointer_0010 	| [$b937: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b939: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$b93b: lda $11]
	moveq	#0x00,d4	| [$b93d: adc #$00]
	addx.b	d4,d0                        	| [$b93d: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b93f: sta $11]
	jbsr	l_6609                            	| [$b941: jsr $6609]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b944: lda $1b]
	beq	l_b955                             	| [$b946: beq $b955]
	move.b	#0x01,d0                        	| [$b948: lda #$01]
	GET_ADDRESS	0x03c8                     	| [$b94a: sta $03c8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$b94d: lda #$00]
	GET_ADDRESS	0x03d4                     	| [$b94f: sta $03d4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_b979                             	| [$b952: jra $b979]
l_b955:
	clr.b	d0                               	| [$b955: lda #$00]
	GET_ADDRESS	0x03c8                     	| [$b957: sta $03c8, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0xa6,d0                        	| [$b95a: lda #$a6]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b95c: sta screen_source_pointer_0010]
	move.b	#0xb9,d0                        	| [$b95e: lda #$b9]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b960: sta $11]
	GET_ADDRESS	0x0312                     	| [$b962: lda $0312, x]
	move.b	(a0,d1.w),d0                    	| [...]
                                         | [$b965: asl a]
	asl.b	#2,d0                            	| [$b966: asl a]
	GET_ADDRESS	screen_source_pointer_0010 	| [$b967: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$b969: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$b96b: lda $11]
	moveq	#0x00,d4	| [$b96d: adc #$00]
	addx.b	d4,d0                        	| [$b96d: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$b96f: sta $11]
	jbsr	l_6609                            	| [$b971: jsr $6609]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$b974: lda $1b]
	GET_ADDRESS	0x03d4                     	| [$b976: sta $03d4, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_b979:
	move.w	(sp)+,d0                        	| [$b979: pla]
	move.b	d0,d2                           	| [$b97a: tay]
	rts                                    	| [$b97b: rts]

ball_movement_and_draw_b9fa:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$b9fa: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$b9fc: and #$08]
	jne	l_ba79                             	| [$b9fe: jne $ba79]
	move.b	#0x04,d0                        	| [$ba00: lda #$04]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ba02: sta current_object_index_4c]
	move.b	#0x16,d0                        	| [$ba04: lda #$16]
	OP_W_ON_ZP_ADDRESS	move,0x69,d0 |  [$ba06: sta $69]
	jbsr	move_ball_ba7a                    	| [$ba08: jsr move_ball_ba7a]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d1 |  [$ba0b: ldx $4f]
	bmi	l_ba16                             	| [$ba0d: bmi $ba16]
	GET_ADDRESS	0x030e                     	| [$ba0f: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$ba12: and #$08]
	jne	l_ba39                             	| [$ba14: jne $ba39]
l_ba16:
	jbsr	l_bcba                            	| [$ba16: jsr $bcba]
	GET_ADDRESS	0x023e                     	| [$ba19: lda $023e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x01,d0                          	| [$ba1c: ora #$01]
	                     	| [$ba1e: sta $023e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$ba21: lda ball_logical_z_e7]
	movem.w	d0,-(sp)                       	| [$ba23: pha]
	                           	| [$ba24: clc]
	add.b	#0x08,d0                        	| [$ba25: adc #$08]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$ba27: sta ball_logical_z_e7]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$ba29: lda $f5]
	movem.w	d0,-(sp)                       	| [$ba2b: pha]
	moveq	#0x00,d4	| [$ba2c: adc #$00]
	addx.b	d4,d0                        	| [$ba2c: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$ba2e: sta $f5]
* display ball sprite
	jbsr	display_sprites_e1b5              	| [$ba30: jsr display_sprites_e1b5]
	move.w	(sp)+,d0                        	| [$ba33: pla]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$ba34: sta $f5]
	move.w	(sp)+,d0                        	| [$ba36: pla]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$ba37: sta ball_logical_z_e7]
l_ba39:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ba39: lda current_object_index_4c]
	jbsr	l_b71f                            	| [$ba3b: jsr $b71f]
	GET_ADDRESS	0x0377                     	| [$ba3e: sta $0377]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0413                     	| [$ba41: lda $0413]
	move.b	(a0),d0                         	| [...]
	jne	l_ba5d                             	| [$ba44: jne $ba5d]
	GET_ADDRESS	0x0377                     	| [$ba46: lda $0377]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$ba49: and #$0f]
	cmp.b	#0x0f,d0                         	| [$ba4b: cmp #$0f]
	jne	l_ba5d                             	| [$ba4d: jne $ba5d]
	GET_ADDRESS	0x03e9                     	| [$ba4f: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$ba52: and #$0f]
	cmp.b	#0x0f,d0                         	| [$ba54: cmp #$0f]
	jne	l_ba5d                             	| [$ba56: jne $ba5d]
	move.b	#0x10,d0                        	| [$ba58: lda #$10]
	GET_ADDRESS	0x0413                     	| [$ba5a: sta $0413]
	move.b	d0,(a0)                         	| [...]
l_ba5d:
	GET_ADDRESS	0x0413                     	| [$ba5d: lda $0413]
	move.b	(a0),d0                         	| [...]
	beq	l_ba6a                             	| [$ba60: beq $ba6a]
	                     	| [$ba62: dec $0413]
	subq.b	#1,(a0)                         	| [...]
	jne	l_ba6a                             	| [$ba65: jne $ba6a]
	jbsr	l_bc1b                            	| [$ba67: jsr $bc1b]
l_ba6a:
	GET_ADDRESS	0x0414                     	| [$ba6a: lda $0414]
	move.b	(a0),d0                         	| [...]
	beq	l_ba79                             	| [$ba6d: beq $ba79]
	                     	| [$ba6f: dec $0414]
	subq.b	#1,(a0)                         	| [...]
	jne	l_ba79                             	| [$ba72: jne $ba79]
	move.b	#0x36,d0                        	| [$ba74: lda #$36]
	jbsr	queue_sound_d7b8                  	| [$ba76: jsr queue_sound_d7b8]
l_ba79:
	rts                                    	| [$ba79: rts]

move_ball_ba7a:
	GET_ADDRESS	0x03e0                     	| [$ba7a: lda $03e0]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$ba7d: asl a]
	move.b	d0,d2                           	| [$ba7e: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_ba8c            	| [$ba7f: lda jump_table_ba8c, y]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ba82: sta screen_source_pointer_0010]
	GET_ADDRESS	0xba8d                     	| [$ba84: lda $ba8d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ba87: sta $11]
	rts |  [$ba89: jra ($0010)] [indirect_jump]

unknown_ball_behaviour_baae:
	GET_ADDRESS	0x03e0                     	| [$baae: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x08,d0                         	| [$bab1: cmp #$08]
	jne	l_bac8                             	| [$bab3: jne $bac8]
	GET_ADDRESS	0x03ff                     	| [$bab5: lda $03ff]
	move.b	(a0),d0                         	| [...]
	jne	l_bac8                             	| [$bab8: jne $bac8]
	clr.b	d0                               	| [$baba: lda #$00]
	GET_ADDRESS	0x0272                     	| [$babc: sta $0272]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	ball_x_speed_027f          	| [$babf: sta ball_x_speed_027f]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x028c                     	| [$bac2: sta $028c]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0299                     	| [$bac5: sta $0299]
	move.b	d0,(a0)                         	| [...]
l_bac8:
	jbsr	parabolic_movement_b612           	| [$bac8: jsr parabolic_movement_b612]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$bacb: lda $f5]
	bmi	l_bad6                             	| [$bacd: bmi $bad6]
	OP_R_ON_ZP_ADDRESS	or,ball_logical_z_e7,d0 |  [$bacf: ora ball_logical_z_e7]
	beq	l_bad6                             	| [$bad1: beq $bad6]
	jra	l_bba9                             	| [$bad3: jra $bba9]
l_bad6:
	GET_ADDRESS	0x040f                     	| [$bad6: inc $040f]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$bad9: lda ball_logical_z_e7]
	not.b	d0                               	| [$badb: eor #$ff]
	                           	| [$badd: clc]
	add.b	#0x01,d0                        	| [$bade: adc #$01]
	                           	| [$bae0: clc]
	OP_R_ON_ZP_ADDRESS	add,ball_logical_y_bd,d0 |  [$bae1: adc ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bae3: sta ball_logical_y_bd]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bae5: lda ball_kind_of_z_cb]
	moveq	#0x00,d4	| [$bae7: adc #$00]
	addx.b	d4,d0                        	| [$bae7: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bae9: sta ball_kind_of_z_cb]
	clr.b	d0                               	| [$baeb: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xd9,d0 |  [$baed: sta $d9]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$baef: sta ball_logical_z_e7]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$baf1: sta $f5]
	clr.b	d0                               	| [$baf3: lda #$00]
	GET_ADDRESS	0x02a6                     	| [$baf5: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$baf8: lda #$01]
	GET_ADDRESS	0x02b3                     	| [$bafa: sta $02b3]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cd9f                            	| [$bafd: jsr $cd9f]
	jbsr	l_cdad                            	| [$bb00: jsr $cdad]
	move.b	#0x40,d0                        	| [$bb03: lda #$40]
	GET_ADDRESS	0x02c0                     	| [$bb05: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$bb08: lda #$00]
	GET_ADDRESS	0x02cd                     	| [$bb0a: sta $02cd]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x040f                     	| [$bb0d: lda $040f]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$bb10: cmp #$01]
	beq	l_bb17                             	| [$bb12: beq $bb17]
	jra	l_bb96                             	| [$bb14: jra $bb96]
l_bb17:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bb17: lda $56]
	and.b	#0x30,d0                         	| [$bb19: and #$30]
	or.b	#0x09,d0                          	| [$bb1b: ora #$09]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bb1d: sta $56]
	GET_ADDRESS	0x03e0                     	| [$bb1f: lda $03e0]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03e1                     	| [$bb22: sta $03e1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0408                     	| [$bb25: lda $0408]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$bb28: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_bb31                             	| [$bb2a: bcc $bb31]
	move.b	#0x36,d0                        	| [$bb2c: lda #$36]
	jbsr	queue_sound_d7b8                  	| [$bb2e: jsr queue_sound_d7b8]
l_bb31:
	move.b	#0x0b,d0                        	| [$bb31: lda #$0b]
	move.b	#0x2c,d1                        	| [$bb33: ldx #$2c]
	GET_ADDRESS	0x03e0                     	| [$bb35: ldy $03e0]
	move.b	(a0),d2                         	| [...]
	cmp.b	#0x0a,d2                         	| [$bb38: cpy #$0a]
	jne	l_bb47                             	| [$bb3a: jne $bb47]
	move.b	#0x0c,d0                        	| [$bb3c: lda #$0c]
	addq.b	#1,d1                           	| [$bb3e: inx]
	GET_ADDRESS	0x0408                     	| [$bb3f: ldy $0408]
	move.b	(a0),d2                         	| [...]
	cmp.b	#0x03,d2                         	| [$bb42: cpy #$03]
	* bcc=>bcs (cmp above)
	jcs	l_bb47                             	| [$bb44: bcc $bb47]
	addq.b	#1,d1                           	| [$bb46: inx]
l_bb47:
	jbsr	l_a2b5                            	| [$bb47: jsr $a2b5]
	move.b	d1,d0                           	| [$bb4a: txa]
	jbsr	queue_sound_d7b8                  	| [$bb4b: jsr queue_sound_d7b8]
	move.b	#0x0d,d0                        	| [$bb4e: lda #$0d]
	GET_ADDRESS	0x03e0                     	| [$bb50: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$bb53: lda current_object_index_4c]
	jbsr	l_b71f                            	| [$bb55: jsr $b71f]
	GET_ADDRESS	0x03e9                     	| [$bb58: sta $03e9]
	move.b	d0,(a0)                         	| [...]
	and.b	#0x0f,d0                         	| [$bb5b: and #$0f]
	cmp.b	#0x09,d0                         	| [$bb5d: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_bb72                             	| [$bb5f: bcc $bb72]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$bb61: lda $53]
	jne	l_bb72                             	| [$bb63: jne $bb72]
	move.b	#0x01,d0                        	| [$bb65: lda #$01]
	GET_ADDRESS	0x031f                     	| [$bb67: sta $031f]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x33,d0                        	| [$bb6a: lda #$33]
	jbsr	queue_sound_d7b8                  	| [$bb6c: jsr queue_sound_d7b8]
	jra	l_bba9                             	| [$bb6f: jra $bba9]
l_bb72:
	cmp.b	#0x03,d0                         	| [$bb72: cmp #$03]
	* bcs=>bcc
	jcc	l_bb93                             	| [$bb74: bcs $bb93]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$bb76: lda ball_logical_x_93]
	SET_XC_FLAGS |  [$bb78: sec]
	SBC_IMM	0x08	| [$bb79: sbc #$08] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$bb7b: sta $9c]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$bb7d: lda ball_side_a1]
	SBC_IMM	0x00                           	| [$bb7f: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$bb81: sta $aa]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bb83: lda ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$bb85: sta $c6]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bb87: lda ball_kind_of_z_cb]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$bb89: sta $d4]
	move.b	#0x0d,d0                        	| [$bb8b: lda #$0d]
	jbsr	l_b71f                            	| [$bb8d: jsr $b71f]
	GET_ADDRESS	0x03e9                     	| [$bb90: sta $03e9]
	move.b	d0,(a0)                         	| [...]
l_bb93:
	jra	l_bba9                             	| [$bb93: jra $bba9]
l_bb96:
	cmp.b	#0x02,d0                         	| [$bb96: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_bba9                             	| [$bb98: bcc $bba9]
	move.b	#0x0f,d0                        	| [$bb9a: lda #$0f]
	GET_ADDRESS	0x03e0                     	| [$bb9c: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$bb9f: lda #$00]
	GET_ADDRESS	0x040f                     	| [$bba1: sta $040f]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x20,d0                        	| [$bba4: lda #$20]
	GET_ADDRESS	0x0412                     	| [$bba6: sta $0412]
	move.b	d0,(a0)                         	| [...]
l_bba9:
	clr.b	d2                               	| [$bba9: ldy #$00]
l_bbab:
	GET_ADDRESS	0x0408                     	| [$bbab: lda $0408]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$bbae: eor #$ff]
	and.b	#0x03,d0                         	| [$bbb0: and #$03]
	lsr.b	#1,d0                            	| [$bbb2: lsr a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$bbb3: sta $00]
	GET_ADDRESS	0x02da                     	| [$bbb5: inc $02da]
	addq.b	#1,(a0)                         	| [...]
	                     	| [$bbb8: lda $02da]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$bbbb: cmp $00]
	* bcc=>bcs (cmp above)
	jcs	l_bbc7                             	| [$bbbd: bcc $bbc7]
	clr.b	d0                               	| [$bbbf: lda #$00]
	                     	| [$bbc1: sta $02da]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x02f4                     	| [$bbc4: inc $02f4]
	addq.b	#1,(a0)                         	| [...]
l_bbc7:
	GET_ADDRESS	0x02f4                     	| [$bbc7: lda $02f4]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0xbbed                     	| [$bbca: cmp $bbed, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_bbd4                             	| [$bbcd: bcc $bbd4]
	clr.b	d0                               	| [$bbcf: lda #$00]
	GET_ADDRESS	0x02f4                     	| [$bbd1: sta $02f4]
	move.b	d0,(a0)                         	| [...]
l_bbd4:
	GET_ADDRESS	0xbbf1                     	| [$bbd4: lda $bbf1, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$bbd7: clc]
	GET_ADDRESS	0x02f4                     	| [$bbd8: adc $02f4]
	add.b	(a0),d0                         	| [...]
	GET_ADDRESS	ball_x_speed_027f          	| [$bbdb: bit ball_x_speed_027f]
	BIT	(a0)                               	| [...]
	bmi	l_bbe2                             	| [$bbde: bmi $bbe2]
	eor.b	#0x80,d0                         	| [$bbe0: eor #$80]
l_bbe2:
	OP_W_ON_ZP_ADDRESS	move,0x77,d0 |  [$bbe2: sta $77]
	GET_ADDRESS	0x023e                     	| [$bbe4: lda $023e]
	move.b	(a0),d0                         	| [...]
	or.b	#0x01,d0                          	| [$bbe7: ora #$01]
	                     	| [$bbe9: sta $023e]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$bbec: rts]

ball_in_play_bbf5:
	jbsr	parabolic_movement_b612           	| [$bbf5: jsr parabolic_movement_b612]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$bbf8: lda $f5]
	bmi	l_bc00                             	| [$bbfa: bmi $bc00]
	OP_R_ON_ZP_ADDRESS	or,ball_logical_z_e7,d0 |  [$bbfc: ora ball_logical_z_e7]
	jne	l_bc03                             	| [$bbfe: jne $bc03]
l_bc00:
	jra	l_bad6                             	| [$bc00: jra $bad6]

l_bc03:
	clr.b	d2                               	| [$bc03: ldy #$00]
	GET_ADDRESS	0x0408                     	| [$bc05: lda $0408]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$bc08: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_bc0e                             	| [$bc0a: bcc $bc0e]
	move.b	#0x02,d2                        	| [$bc0c: ldy #$02]
l_bc0e:
	jra	l_bbab                             	| [$bc0e: jra $bbab]

ball_on_ground_bc11:
	GET_ADDRESS	0x0412                     	| [$bc11: lda $0412]
	move.b	(a0),d0                         	| [...]
	beq	l_bc1b                             	| [$bc14: beq $bc1b]
	                     	| [$bc16: dec $0412]
	subq.b	#1,(a0)                         	| [...]
	jne	l_bc86                             	| [$bc19: jne $bc86]
l_bc1b:
	GET_ADDRESS	0x03e2                     	| [$bc1b: lda $03e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_bc35                             	| [$bc1e: bpl $bc35]
	GET_ADDRESS	0x03e9                     	| [$bc20: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$bc23: and #$0f]
	cmp.b	#0x09,d0                         	| [$bc25: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_bc32                             	| [$bc27: bcc $bc32]
	GET_ADDRESS	0x0411                     	| [$bc29: lda $0411]
	move.b	(a0),d0                         	| [...]
                                         | [$bc2c: asl a]
                                         | [$bc2d: asl a]
	asl.b	#3,d0                            	| [$bc2e: asl a]
	jra	l_bc35                             	| [$bc2f: jra $bc35]
l_bc32:
	GET_ADDRESS	0x03e9                     	| [$bc32: lda $03e9]
	move.b	(a0),d0                         	| [...]
l_bc35:
	and.b	#0x10,d0                         	| [$bc35: and #$10]
	eor.b	#0x10,d0                         	| [$bc37: eor #$10]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$bc39: sta $00]
                                         | [$bc3b: lsr a]
                                         | [$bc3c: lsr a]
                                         | [$bc3d: lsr a]
	lsr.b	#4,d0                            	| [$bc3e: lsr a]
	move.b	d0,d1                           	| [$bc3f: tax]
	jbsr	l_bc8b                            	| [$bc40: jsr $bc8b]
* increase score (decimal)
* X=0: left team, X=1: right team
	GET_ADDRESS	score_array_57             	| [$bc43: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_Z_FLAG  | required as abcd doesn't set Z on 0 result
	CLR_XC_FLAGS                           	| [$bc46: clc]
	move.b	#0x01,d4	| [$bc47: adc #$01]
	abcd	d4,d0                        	| [$bc47: adc #$01]
	GET_ADDRESS	score_array_57             	| [$bc49: sta score_array_57, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	 |  [$bc4b: cld]
	move.b	#0x38,d2                        	| [$bc4c: ldy #$38]
	GET_ADDRESS	0x47                       	| [$bc4e: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_bc54                             	| [$bc50: bpl $bc54]
	move.b	#0x37,d2                        	| [$bc52: ldy #$37]
l_bc54:
	move.b	d2,d0                           	| [$bc54: tya]
	jbsr	queue_sound_d7b8                  	| [$bc55: jsr queue_sound_d7b8]
	move.b	#0x02,d0                        	| [$bc58: lda #$02]
	GET_ADDRESS	0x07e5                     	| [$bc5a: sta $07e5]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$bc5d: lda game_state_bits_46]
	and.b	#0xef,d0                         	| [$bc5f: and #$ef]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$bc61: ora $00]
* ball on ground
	or.b	#0x02,d0                          	| [$bc63: ora #$02]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$bc65: sta game_state_bits_46]
	GET_ADDRESS	0x031f                     	| [$bc67: lda $031f]
	move.b	(a0),d0                         	| [...]
	movem.w	d0,-(sp)                       	| [$bc6a: pha]
	move.b	#0x03,d0                        	| [$bc6b: lda #$03]
	                     	| [$bc6d: sta $031f]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$bc70: lda game_state_bits_46]
	and.b	#0x10,d0                         	| [$bc72: and #$10]
	beq	l_bc79                             	| [$bc74: beq $bc79]
	GET_ADDRESS	0x031f                     	| [$bc76: dec $031f]
	subq.b	#1,(a0)                         	| [...]
l_bc79:
	move.w	(sp)+,d0                        	| [$bc79: pla]
	jne	l_bc81                             	| [$bc7a: jne $bc81]
	move.b	#0x32,d0                        	| [$bc7c: lda #$32]
	jbsr	queue_sound_d7b8                  	| [$bc7e: jsr queue_sound_d7b8]
l_bc81:
	clr.b	d0                               	| [$bc81: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$bc83: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
l_bc86:
	clr.b	d0                               	| [$bc86: lda #$00]
	jra	l_bbe2                             	| [$bc88: jra $bbe2]
l_bc8b:
	GET_ADDRESS	0x47                       	| [$bc8b: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_bc95                             	| [$bc8d: bpl $bc95]
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$bc8f: lda $37]
	cmp.b	#0x02,d0                         	| [$bc91: cmp #$02]
	* bcs=>bcc
	jcc	l_bc95                             	| [$bc93: bcs $bc95]
l_bc95:
	 |  [$bc95: cld]
	rts                                    	| [$bc96: rts]


ball_before_serve_bc97:
* steal the coords on the player who serves
* to copy to the ball
	OP_R_ON_ZP_ADDRESS	move,0x4f,d1 |  [$bc97: ldx $4f]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$bc99: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$bc9b: sta ball_logical_x_93]
	GET_ADDRESS	objects_side_array_9d      	| [$bc9d: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$bc9f: sta ball_side_a1]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$bca1: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS |  [$bca3: sec]
	SBC_IMM	0x01	| [$bca4: sbc #$01] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bca6: sta ball_logical_y_bd]
	GET_ADDRESS	0xc7                       	| [$bca8: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_IMM	0x00                           	| [$bcaa: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bcac: sta ball_kind_of_z_cb]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$bcae: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$bcb0: clc]
* slightly higher than the player feet!
	add.b	#0x18,d0                        	| [$bcb1: adc #$18]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$bcb3: sta ball_logical_z_e7]
	clr.b	d0                               	| [$bcb5: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$bcb7: sta $f5]
	rts                                    	| [$bcb9: rts]

l_bcba:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$bcba: lda ball_logical_x_93]
	SET_XC_FLAGS |  [$bcbc: sec]
	SBC_IMM	0x08	| [$bcbd: sbc #$08] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$bcbf: sta $9c]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$bcc1: lda ball_side_a1]
	SBC_IMM	0x00                           	| [$bcc3: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$bcc5: sta $aa]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bcc7: lda ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$bcc9: sta $c6]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bccb: lda ball_kind_of_z_cb]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$bccd: sta $d4]
	move.b	#0x0d,d0                        	| [$bccf: lda #$0d]
	jbsr	l_b71f                            	| [$bcd1: jsr $b71f]
	GET_ADDRESS	coin_per_credit_0416       	| [$bcd4: sta coin_per_credit_0416]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0410                     	| [$bcd7: lda $0410]
	move.b	(a0),d0                         	| [...]
	bpl	l_bcdf                             	| [$bcda: bpl $bcdf]
	jra	l_bd7e                             	| [$bcdc: jra $bd7e]
l_bcdf:
	GET_ADDRESS	coin_per_credit_0416       	| [$bcdf: lda coin_per_credit_0416]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0410                     	| [$bce2: eor $0410]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x10,d0                         	| [$bce5: and #$10]
	jne	l_bcec                             	| [$bce7: jne $bcec]
l_bce9:
	jra	l_bd60                             	| [$bce9: jra $bd60]
l_bcec:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bcec: lda ball_logical_y_bd]
	cmp.b	#0x18,d0                         	| [$bcee: cmp #$18]
	* bcc=>bcs (cmp above)
	jcs	l_bce9                             	| [$bcf0: bcc $bce9]
	cmp.b	#0x78,d0                         	| [$bcf2: cmp #$78]
	* bcs=>bcc
	jcc	l_bce9                             	| [$bcf4: bcs $bce9]
	GET_ADDRESS	0x03e8                     	| [$bcf6: lda $03e8]
	move.b	(a0),d0                         	| [...]
	jne	l_bce9                             	| [$bcf9: jne $bce9]
	GET_ADDRESS	0x03e7                     	| [$bcfb: lda $03e7]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x40,d0                         	| [$bcfe: cmp #$40]
	* bcs=>bcc
	jcc	l_bce9                             	| [$bd00: bcs $bce9]
	jbsr	l_cdc9                            	| [$bd02: jsr $cdc9]
	jbsr	l_cd9f                            	| [$bd05: jsr $cd9f]
	clr.b	d0                               	| [$bd08: lda #$00]
	GET_ADDRESS	0x0299                     	| [$bd0a: sta $0299]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x028c                     	| [$bd0d: sta $028c]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x40,d0                        	| [$bd10: lda #$40]
	GET_ADDRESS	0x02c0                     	| [$bd12: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$bd15: lda #$00]
	GET_ADDRESS	0x02a6                     	| [$bd17: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x02b3                     	| [$bd1a: sta $02b3]
	move.b	d0,(a0)                         	| [...]
	* TODO: optimize 3E3 .. => 3E6
	GET_ADDRESS	0x03e3                     	| [$bd1d: lda $03e3]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$bd20: sta ball_logical_x_93]
	GET_ADDRESS	0x03e4                     	| [$bd22: lda $03e4]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$bd25: sta ball_side_a1]
	GET_ADDRESS	0x03e5                     	| [$bd27: lda $03e5]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bd2a: sta ball_logical_y_bd]
	GET_ADDRESS	0x03e6                     	| [$bd2c: lda $03e6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bd2f: sta ball_kind_of_z_cb]
	GET_ADDRESS	0x0410                     	| [$bd31: lda $0410]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	coin_per_credit_0416       	| [$bd34: sta coin_per_credit_0416]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03e0                     	| [$bd37: lda $03e0]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03e1                     	| [$bd3a: sta $03e1]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x0d,d0                        	| [$bd3d: lda #$0d]
	GET_ADDRESS	0x03e0                     	| [$bd3f: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bd42: lda $56]
	and.b	#0x10,d0                         	| [$bd44: and #$10]
	or.b	#0x08,d0                          	| [$bd46: ora #$08]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bd48: sta $56]
	move.b	#0x04,d2                        	| [$bd4a: ldy #$04]
	and.b	#0x10,d0                         	| [$bd4c: and #$10]
	beq	l_bd52                             	| [$bd4e: beq $bd52]
	move.b	#0x02,d2                        	| [$bd50: ldy #$02]
l_bd52:
	GET_ADDRESS	0x0320                     	| [$bd52: sty $0320]
	move.b	d2,(a0)                         	| [...]
	st.b	d0                        	| [$bd55: lda #$ff]
	GET_ADDRESS	0x0411                     	| [$bd57: sta $0411]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_c588                            	| [$bd5a: jsr $c588]
	jbsr	l_c7b9                            	| [$bd5d: jsr $c7b9]
l_bd60:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$bd60: lda ball_logical_z_e7]
	GET_ADDRESS	0x03e7                     	| [$bd62: sta $03e7]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$bd65: lda $f5]
	GET_ADDRESS	0x03e8                     	| [$bd67: sta $03e8]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$bd6a: lda ball_logical_x_93]
	GET_ADDRESS	0x03e3                     	| [$bd6c: sta $03e3]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$bd6f: lda ball_side_a1]
	GET_ADDRESS	0x03e4                     	| [$bd71: sta $03e4]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$bd74: lda ball_logical_y_bd]
	GET_ADDRESS	0x03e5                     	| [$bd76: sta $03e5]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$bd79: lda ball_kind_of_z_cb]
	GET_ADDRESS	0x03e6                     	| [$bd7b: sta $03e6]
	move.b	d0,(a0)                         	| [...]
l_bd7e:
	GET_ADDRESS	coin_per_credit_0416       	| [$bd7e: lda coin_per_credit_0416]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0410                     	| [$bd81: sta $0410]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$bd84: rts]

l_bd85:
	movem.w	d0-d2,-(sp)                       	| [$bd85: pha]
	                       	| [$bd86: txa]
	                      	| [$bd87: pha]
	                       	| [$bd88: tya]
	                      	| [$bd89: pha]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bd8a: ldx current_object_index_4c]
	GET_ADDRESS	0x030a                     	| [$bd8c: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x02,d0                         	| [$bd8f: and #$02]
	beq	l_bd96                             	| [$bd91: beq $bd96]
l_bd93:
	jra	l_be5b                             	| [$bd93: jra $be5b]
l_bd96:
	GET_ADDRESS	0x03e0                     	| [$bd96: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0f,d0                         	| [$bd99: cmp #$0f]
	beq	l_bd93                             	| [$bd9b: beq $bd93]
	cmp.b	#0x0d,d0                         	| [$bd9d: cmp #$0d]
	beq	l_bd93                             	| [$bd9f: beq $bd93]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$bda1: lda current_object_index_4c]
	and.b	#0x02,d0                         	| [$bda3: and #$02]
                                         | [$bda5: asl a]
                                         | [$bda6: asl a]
	asl.b	#3,d0                            	| [$bda7: asl a]
	GET_ADDRESS	0x56                       	| [$bda8: eor $56]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	and.b	#0x10,d0                         	| [$bdaa: and #$10]
	jne	l_bdbf                             	| [$bdac: jne $bdbf]
	GET_ADDRESS	0x03e0                     	| [$bdae: lda $03e0]
	move.b	(a0),d0                         	| [...]
	beq	l_bdbf                             	| [$bdb1: beq $bdbf]
	cmp.b	#0x10,d0                         	| [$bdb3: cmp #$10]
	beq	l_bdbf                             	| [$bdb5: beq $bdbf]
	cmp.b	#0x0e,d0                         	| [$bdb7: cmp #$0e]
	beq	l_bdbf                             	| [$bdb9: beq $bdbf]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$bdbb: lda $53]
	beq	l_bd93                             	| [$bdbd: beq $bd93]
l_bdbf:
	GET_ADDRESS	0x040f                     	| [$bdbf: lda $040f]
	move.b	(a0),d0                         	| [...]
	jne	l_bd93                             	| [$bdc2: jne $bd93]
	GET_ADDRESS	0x031a                     	| [$bdc4: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$bdc7: and #$7f]
	cmp.b	#0x0c,d0                         	| [$bdc9: cmp #$0c]
	* bcc=>bcs (cmp above)
	jcs	l_bd93                             	| [$bdcb: bcc $bd93]
	cmp.b	#0x1d,d0                         	| [$bdcd: cmp #$1d]
	* bcs=>bcc
	jcc	l_bd93                             	| [$bdcf: bcs $bd93]
	cmp.b	#0x19,d0                         	| [$bdd1: cmp #$19]
	beq	l_bde6                             	| [$bdd3: beq $bde6]
	SET_X_FROM_CLEARED_C
	move.b	#0x01,d0                        	| [$bdd5: lda #$01]
	jbsr	set_bank_d8df                     	| [$bdd7: jsr set_bank_d8df]
* this is not the 7FF0 in this asm file, there's a bankswitch!
	jbsr	b1_7ff0                            	| [$bdda: jsr $7ff0] [bank1]
	PUSH_SR                                	| [$bddd: php]
	clr.b	d0                               	| [$bdde: lda #$00]
	jbsr	set_bank_d8df                     	| [$bde0: jsr set_bank_d8df]
	POP_SR                                 	| [$bde3: plp]
	SET_C_FROM_X
	jcc	l_be5b                             	| [$bde4: bcc $be5b]
l_bde6:
	GET_ADDRESS	0x03e0                     	| [$bde6: lda $03e0]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03e1                     	| [$bde9: sta $03e1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0258                     	| [$bdec: lda $0258]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0415                     	| [$bdef: sta $0415]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0408                     	| [$bdf2: lda $0408]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0409                     	| [$bdf5: sta $0409]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$bdf8: lda #$00]
	GET_ADDRESS	0x0408                     	| [$bdfa: sta $0408]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bdfd: ldx current_object_index_4c]
	GET_ADDRESS	0x031a                     	| [$bdff: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$be02: and #$7f]
	                           	| [$be04: sec]
	sub.b	#0x0c,d0	| [$be05: sbc #$0c]
	asl.b	#1,d0                            	| [$be07: asl a]
	move.b	d0,d2                           	| [$be08: tay]
	PUSH_TABLE_Y_ADDRESS	jump_table_be61            	| [$be09: lda jump_table_be61, y]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$be0c: sta screen_source_pointer_0010]
	GET_ADDRESS	0xbe62                     	| [$be0e: lda $be62, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$be11: sta $11]
	rts |  [$be13: jra ($0010)] [indirect_jump]
l_be16:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$be16: lda $4f]
	bpl	l_be5b                             	| [$be18: bpl $be5b]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$be1a: lda $53]
	cmp.b	#0x04,d0                         	| [$be1c: cmp #$04]
	* bcs=>bcc
	jcc	l_be4c                             	| [$be1e: bcs $be4c]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$be20: lda current_object_index_4c]
	GET_ADDRESS	0x0411                     	| [$be22: cmp $0411]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR			| preserve Z flag
	                    	| [$be25: sta $0411]
	move.b	d0,(a0)                         	| [...]
	POP_SR			| preserve Z flag
	jne	l_be40                             	| [$be28: jne $be40]
	GET_ADDRESS	0x03e1                     	| [$be2a: lda $03e1]
	move.b	(a0),d0                         	| [...]
	beq	l_be40                             	| [$be2d: beq $be40]
	cmp.b	#0x0e,d0                         	| [$be2f: cmp #$0e]
	beq	l_be40                             	| [$be31: beq $be40]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$be33: lda current_object_index_4c]
	and.b	#0x02,d0                         	| [$be35: and #$02]
                                         | [$be37: asl a]
                                         | [$be38: asl a]
	asl.b	#3,d0                            	| [$be39: asl a]
	GET_ADDRESS	0x03e2                     	| [$be3a: sta $03e2]
	move.b	d0,(a0)                         	| [...]
	jra	l_be4c                             	| [$be3d: jra $be4c]
l_be40:
	GET_ADDRESS	0x03e2                     	| [$be40: lda $03e2]
	move.b	(a0),d0                         	| [...]
	bpl	l_be5b                             	| [$be43: bpl $be5b]
	clr.b	d0                               	| [$be45: lda #$00]
	GET_ADDRESS	0x0413                     	| [$be47: sta $0413]
	move.b	d0,(a0)                         	| [...]
	jra	l_be5b                             	| [$be4a: beq $be5b]
l_be4c:
	move.b	#0x20,d0                        	| [$be4c: lda #$20]
	GET_ADDRESS	0x0413                     	| [$be4e: sta $0413]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$be51: lda #$01]
	GET_ADDRESS	0x031f                     	| [$be53: sta $031f]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x32,d0                        	| [$be56: lda #$32]
	jbsr	queue_sound_d7b8                  	| [$be58: jsr queue_sound_d7b8]
l_be5b:
	movem.w	(sp)+,d0-d2                        	| [$be5b: pla]
	                       	| [$be5c: tay]
	                       	| [$be5d: pla]
	                       	| [$be5e: tax]
	                       	| [$be5f: pla]
	rts                                    	| [$be60: rts]

l_be83:
	move.b	#0x50,d1                        	| [$be83: ldx #$50]
	move.b	#0x02,d0                        	| [$be85: lda #$02]
	jra	l_bf19                             	| [$be87: jra $bf19]
l_be8a:
	clr.b	d0                               	| [$be8a: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x53,d0 |  [$be8c: sta $53]
	GET_ADDRESS	0x0409                     	| [$be8e: lda $0409]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$be91: cmp #$03]
	* bcs=>bcc
	jcc	l_bedb                             	| [$be93: bcs $bedb]
	clr.b	d0                               	| [$be95: lda #$00]
	GET_ADDRESS	0x03e0                     	| [$be97: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x06,d0                        	| [$be9a: lda #$06]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$be9c: sta $56]
	move.b	#0x40,d0                        	| [$be9e: lda #$40]
	GET_ADDRESS	0x02c0                     	| [$bea0: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bea3: ldx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$bea5: lda ball_logical_z_e7]
	SET_XC_FLAGS                           	| [$bea7: sec]
	SBC_X	objects_logical_z_array_e3       	| [$bea8: sbc objects_logical_z_array_e3, x]
	cmp.b	#0x40,d0                         	| [$beaa: cmp #$40]
	* bcs=>bcc
	jcc	l_bef5                             	| [$beac: bcs $bef5]
	jbsr	l_cdc9                            	| [$beae: jsr $cdc9]
	jbsr	l_cd9f                            	| [$beb1: jsr $cd9f]
	GET_ADDRESS	0x02b3                     	| [$beb4: lda $02b3]
	move.b	(a0),d0                         	| [...]
	bpl	l_bec2                             	| [$beb7: bpl $bec2]
	cmp.b	#0xf8,d0                         	| [$beb9: cmp #$f8]
	* bcs=>bcc
	jcc	l_bec2                             	| [$bebb: bcs $bec2]
	move.b	#0xf8,d0                        	| [$bebd: lda #$f8]
	GET_ADDRESS	0x02b3                     	| [$bebf: sta $02b3]
	move.b	d0,(a0)                         	| [...]
l_bec2:
	jbsr	l_c588                            	| [$bec2: jsr $c588]
	GET_ADDRESS	0x03e9                     	| [$bec5: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$bec8: and #$0f]
	cmp.b	#0x09,d0                         	| [$beca: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_bed8                             	| [$becc: bcc $bed8]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bece: lda $56]
	and.b	#0xf0,d0                         	| [$bed0: and #$f0]
	or.b	#0x07,d0                          	| [$bed2: ora #$07]
	or.b	#0x20,d0                          	| [$bed4: ora #$20]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bed6: sta $56]
l_bed8:
	jra	l_bf53                             	| [$bed8: jra $bf53]
l_bedb:
	move.b	#0x0a,d0                        	| [$bedb: lda #$0a]
	GET_ADDRESS	0x03e0                     	| [$bedd: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x22,d0                        	| [$bee0: lda #$22]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bee2: ldx current_object_index_4c]
	GET_ADDRESS	0x0327                     	| [$bee4: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$bee7: lda #$02]
	GET_ADDRESS	0x0333                     	| [$bee9: sta $0333, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0415                     	| [$beec: lda $0415]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$beef: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jra	l_bf6a                             	| [$bef2: jra $bf6a]
l_bef5:
	jbsr	l_cd9f                            	| [$bef5: jsr $cd9f]
	move.b	#0x02,d0                        	| [$bef8: lda #$02]
	GET_ADDRESS	0x02b3                     	| [$befa: sta $02b3]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$befd: lda #$00]
	GET_ADDRESS	0x02a6                     	| [$beff: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x028c                     	| [$bf02: sta $028c]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0299                     	| [$bf05: sta $0299]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf08: lda $56]
	and.b	#0xf0,d0                         	| [$bf0a: and #$f0]
	or.b	#0x07,d0                          	| [$bf0c: ora #$07]
	or.b	#0x20,d0                          	| [$bf0e: ora #$20]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf10: sta $56]
	jra	l_bec2                             	| [$bf12: jra $bec2]
l_bf15:
	move.b	#0x30,d1                        	| [$bf15: ldx #$30]
	move.b	#0x03,d0                        	| [$bf17: lda #$03]
l_bf19:
	GET_ADDRESS	0x03e0                     	| [$bf19: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	d1,d0                           	| [$bf1c: txa]
	movem.w	d0,-(sp)                       	| [$bf1d: pha]
	clr.b	d0                               	| [$bf1e: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf20: sta $56]
	clr.b	d0                               	| [$bf22: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x53,d0 |  [$bf24: sta $53]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bf26: ldx current_object_index_4c]
	GET_ADDRESS	0x030e                     	| [$bf28: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf7,d0                         	| [$bf2b: and #$f7]
	                     	| [$bf2d: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$bf30: lda $4f]
	and.b	#0x02,d0                         	| [$bf32: and #$02]
	OP_W_ON_ZP_ADDRESS	move,0x50,d0 |  [$bf34: sta $50]
	st.b	d0                        	| [$bf36: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x4f,d0 |  [$bf38: sta $4f]
	GET_ADDRESS	0x03e0                     	| [$bf3a: ldy $03e0]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	0xc036                     	| [$bf3d: lda $c036, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.w	(sp)+,d0                        	| [$bf40: pla]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$bf41: sta $00]
	lsr.b	#1,d0                            	| [$bf43: lsr a]
	                           	| [$bf44: clc]
	OP_R_ON_ZP_ADDRESS	add,0x00,d0 |  [$bf45: adc $00]
	GET_ADDRESS	0x0265                     	| [$bf47: sta $0265]
	move.b	d0,(a0)                         	| [...]
	jra	l_c0f3                             	| [$bf4a: jra $c0f3]
l_bf4d:
	jbsr	l_ca7c                            	| [$bf4d: jsr $ca7c]
l_bf50:
	jbsr	l_c588                            	| [$bf50: jsr $c588]
l_bf53:
	jbsr	l_c7b9                            	| [$bf53: jsr $c7b9]
l_bf56:
	clr.b	d0                               	| [$bf56: lda #$00]
	GET_ADDRESS	0x040f                     	| [$bf58: sta $040f]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bf5b: ldx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf5d: lda $56]
	GET_ADDRESS	0xc032                     	| [$bf5f: ora $c032, x]
	or.b	(a0,d1.w),d0                      	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf62: sta $56]
	jbsr	ball_trajectory_change_c8e7       	| [$bf64: jsr ball_trajectory_change_c8e7]
	jbsr	l_c9f5                            	| [$bf67: jsr $c9f5]
l_bf6a:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bf6a: ldx current_object_index_4c]
	GET_ADDRESS	0x030a                     	| [$bf6c: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x02,d0                          	| [$bf6f: ora #$02]
	                     	| [$bf71: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x031a                     	| [$bf74: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$bf77: and #$7f]
	                           	| [$bf79: sec]
	sub.b	#0x0c,d0	| [$bf7a: sbc #$0c]
	asl.b	#1,d0                            	| [$bf7c: asl a]
	move.b	d0,d2                           	| [$bf7d: tay]
	jne	l_bf9b                             	| [$bf7e: jne $bf9b]
	GET_ADDRESS	0x03e0                     	| [$bf80: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$bf83: cmp #$03]
	jne	l_bf9b                             	| [$bf85: jne $bf9b]
	GET_ADDRESS	0x03e1                     	| [$bf87: lda $03e1]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0e,d0                         	| [$bf8a: cmp #$0e]
	beq	l_bf9b                             	| [$bf8c: beq $bf9b]
	move.b	#0x0c,d0                        	| [$bf8e: lda #$0c]
	GET_ADDRESS	0x03e0                     	| [$bf90: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf93: lda $56]
	and.b	#0xf0,d0                         	| [$bf95: and #$f0]
	or.b	#0x05,d0                          	| [$bf97: ora #$05]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$bf99: sta $56]
l_bf9b:
	GET_ADDRESS	0xc03a                     	| [$bf9b: lda $c03a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0xc03b                     	| [$bf9e: ldx $c03b, y]
	move.b	(a0,d2.w),d1                    	| [...]
	bmi	l_bfc3                             	| [$bfa1: bmi $bfc3]
	cmp.b	#0x01,d0                         	| [$bfa3: cmp #$01]
	jne	l_bfbc                             	| [$bfa5: jne $bfbc]
	GET_ADDRESS	0x0409                     	| [$bfa7: ldy $0409]
	move.b	(a0),d2                         	| [...]
	cmp.b	#0x03,d2                         	| [$bfaa: cpy #$03]
	* bcc=>bcs (cmp above)
	jcs	l_bfbc                             	| [$bfac: bcc $bfbc]
	move.b	#0x30,d0                        	| [$bfae: lda #$30]
	jbsr	queue_sound_d7b8                  	| [$bfb0: jsr queue_sound_d7b8]
	move.b	#0x10,d0                        	| [$bfb3: lda #$10]
	GET_ADDRESS	0x0414                     	| [$bfb5: sta $0414]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$bfb8: lda #$00]
	move.b	#0x28,d1                        	| [$bfba: ldx #$28]
l_bfbc:
	jbsr	l_a9a2                            	| [$bfbc: jsr $a9a2]
	move.b	d1,d0                           	| [$bfbf: txa]
* play sound for ball hit (pass, spike...)
* A=$29: pass
* A=$27: spike...
	jbsr	queue_sound_d7b8                  	| [$bfc0: jsr queue_sound_d7b8] play in-game sfx
l_bfc3:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$bfc3: lda current_object_index_4c]
	lsr.b	#1,d0                            	| [$bfc5: lsr a]
	move.b	d0,d2                           	| [$bfc6: tay]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$bfc7: lda current_object_index_4c]
	eor.b	#0x01,d0                         	| [$bfc9: eor #$01]
	GET_ADDRESS	0x0051                     	| [$bfcb: sta $0051, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$bfce: ldx current_object_index_4c]
	GET_ADDRESS	0x030a                     	| [$bfd0: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xbf,d0                         	| [$bfd3: and #$bf]
	                     	| [$bfd5: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$bfd8: lda current_object_index_4c]
	eor.b	#0x01,d0                         	| [$bfda: eor #$01]
	move.b	d0,d1                           	| [$bfdc: tax]
	                     	| [$bfdd: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$bfe0: ora #$40]
	                     	| [$bfe2: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$bfe5: lda $53]
	jne	l_bff6                             	| [$bfe7: jne $bff6]
	move.b	#0x03,d1                        	| [$bfe9: ldx #$03]
l_bfeb:
	GET_ADDRESS	0x030a                     	| [$bfeb: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x40,d0                          	| [$bfee: ora #$40]
	                     	| [$bff0: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	subq.b	#1,d1                           	| [$bff3: dex]
	bpl	l_bfeb                             	| [$bff4: bpl $bfeb]
l_bff6:
	GET_ADDRESS	0x030a                     	| [$bff6: lda $030a]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfb,d0                         	| [$bff9: and #$fb]
	                     	| [$bffb: sta $030a]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x030c                     	| [$bffe: lda $030c]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfb,d0                         	| [$c001: and #$fb]
	                     	| [$c003: sta $030c]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c006: ldx current_object_index_4c]
	GET_ADDRESS	0x0316                     	| [$c008: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$c00b: and #$7f]
	cmp.b	#0x0b,d0                         	| [$c00d: cmp #$0b]
	jne	l_c023                             	| [$c00f: jne $c023]
	GET_ADDRESS	0x0047                     	| [$c011: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_c023                             	| [$c014: bpl $c023]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c016: lda current_object_index_4c]
	and.b	#0x02,d0                         	| [$c018: and #$02]
	move.b	d0,d2                           	| [$c01a: tay]
	GET_ADDRESS	0x030a                     	| [$c01b: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x04,d0                          	| [$c01e: ora #$04]
	                     	| [$c020: sta $030a, y]
    move.b	d0,(a0,d2.w)                 	| [...]
l_c023:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c023: ldx current_object_index_4c]
	GET_ADDRESS	0x0327                     	| [$c025: lda $0327, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x22,d0                         	| [$c028: cmp #$22]
	jne	l_c02f                             	| [$c02a: jne $c02f]
	GET_ADDRESS	0x031a                     	| [$c02c: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_c02f:
	jra	l_be16                             	| [$c02f: jra $be16]

l_c05c:
	OP_W_ON_ZP_ADDRESS	addq,0x53,#1 |  [$c05c: inc $53]
	move.b	#0x40,d0                        	| [$c05e: lda #$40]
	GET_ADDRESS	0x0265                     	| [$c060: sta $0265]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x05,d0                        	| [$c063: lda #$05]
	GET_ADDRESS	0x03e0                     	| [$c065: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$c068: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$c06a: sta $56]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c06c: lda current_object_index_4c]
	move.b	d0,d1                           	| [$c06e: tax]
	lsr.b	#1,d0                            	| [$c06f: lsr a]
	move.b	d0,d2                           	| [$c070: tay]
	GET_ADDRESS	0x0047                     	| [$c071: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_c08a                             	| [$c074: bpl $c08a]
	move.b	d1,d0                           	| [$c076: txa]
	eor.b	#0x01,d0                         	| [$c077: eor #$01]
	move.b	d0,d1                           	| [$c079: tax]
	GET_ADDRESS	0x030e                     	| [$c07a: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$c07d: and #$40]
	jne	l_c096                             	| [$c07f: jne $c096]
	move.b	d1,d0                           	| [$c081: txa]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$c082: lda $53]
	cmp.b	#0x03,d0                         	| [$c084: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_c093                             	| [$c086: bcc $c093]
	* bcs=>bcc (cmp higher above)
	jcc	l_c096                             	| [$c088: bcs $c096]
l_c08a:
	GET_ADDRESS	0x0316                     	| [$c08a: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$c08d: and #$7f]
	cmp.b	#0x0e,d0                         	| [$c08f: cmp #$0e]
	beq	l_c096                             	| [$c091: beq $c096]
l_c093:
	jra	l_c0a8                             	| [$c093: jra $c0a8]
l_c096:
	clr.b	d0                               	| [$c096: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x53,d0 |  [$c098: sta $53]
	move.b	#0x40,d0                        	| [$c09a: lda #$40]
	GET_ADDRESS	0x0265                     	| [$c09c: sta $0265]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x04,d0                        	| [$c09f: lda #$04]
	GET_ADDRESS	0x03e0                     	| [$c0a1: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$c0a4: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$c0a6: sta $56]
l_c0a8:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c0a8: ldx current_object_index_4c]
	GET_ADDRESS	0x031a                     	| [$c0aa: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$c0ad: and #$7f]
	cmp.b	#0x0f,d0                         	| [$c0af: cmp #$0f]
	jne	l_c0b8                             	| [$c0b1: jne $c0b8]
	move.b	#0x81,d0                        	| [$c0b3: lda #$81]
	GET_ADDRESS	0x03c0                     	| [$c0b5: sta $03c0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_c0b8:
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$c0b8: lda $53]
	cmp.b	#0x01,d0                         	| [$c0ba: cmp #$01]
	jne	l_c0f3                             	| [$c0bc: jne $c0f3]
	GET_ADDRESS	0x03e1                     	| [$c0be: lda $03e1]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$c0c1: cmp #$0a]
	jne	l_c0f3                             	| [$c0c3: jne $c0f3]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c0c5: ldx current_object_index_4c]
	GET_ADDRESS	0x031a                     	| [$c0c7: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$c0ca: and #$7f]
	                           	| [$c0cc: sec]
	sub.b	#0x0f,d0	| [$c0cd: sbc #$0f]
	INVERT_XC_FLAGS
	jcc	l_c0f3                             	| [$c0cf: bcc $c0f3]
	cmp.b	#0x08,d0                         	| [$c0d1: cmp #$08]
	* bcs=>bcc
	jcc	l_c0f3                             	| [$c0d3: bcs $c0f3]
	jbsr	l_c158                            	| [$c0d5: jsr $c158]
	beq	l_c0e7                             	| [$c0d8: beq $c0e7]
	GET_ADDRESS	0x0409                     	| [$c0da: lda $0409]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$c0dd: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_c0f3                             	| [$c0df: bcc $c0f3]
	jbsr	l_cd8c                            	| [$c0e1: jsr $cd8c]
	jra	l_c0f3                             	| [$c0e4: jra $c0f3]
l_c0e7:
	 |  [$c0e7: lda $56]
	                         	| [$c0e9: ora #$20]
	OP_W_ON_ZP_ADDRESS	or,0x56,#0x20 |  [$c0eb: sta $56]
	jbsr	l_cd38                            	| [$c0ed: jsr $cd38]
	jra	l_bf53                             	| [$c0f0: jra $bf53]
l_c0f3:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c0f3: lda current_object_index_4c]
	move.b	d0,d1                           	| [$c0f5: tax]
	GET_ADDRESS	0x03cc                     	| [$c0f6: ldy $03cc, x]
	move.b	(a0,d1.w),d2                    	| [...]
	jbsr	l_6b7f                            	| [$c0f9: jsr $6b7f]
	clr.b	d0                               	| [$c0fc: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xfe,d0 |  [$c0fe: sta $fe]
	OP_W_ON_ZP_ADDRESS	move,0xe2,d0 |  [$c100: sta $e2]
	OP_W_ON_ZP_ADDRESS	move,0x8e,d0 |  [$c102: sta $8e]
	OP_W_ON_ZP_ADDRESS	move,0xb8,d0 |  [$c104: sta $b8]
	OP_W_ON_ZP_ADDRESS	move,0x85,d0 |  [$c106: sta $85]
	OP_W_ON_ZP_ADDRESS	move,0xaf,d0 |  [$c108: sta $af]
	OP_W_ON_ZP_ADDRESS	move,0xd9,d0 |  [$c10a: sta $d9]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$c10c: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c10e: sta $9c]
	GET_ADDRESS	0x03fb                     	| [$c110: sta $03fb]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c113: lda $1b]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c115: sta $aa]
	GET_ADDRESS	0x03fc                     	| [$c117: sta $03fc]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$c11a: lda $1e]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c11c: sta $c6]
	GET_ADDRESS	0x03fd                     	| [$c11e: sta $03fd]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$c121: lda base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c123: sta $d4]
	OP_R_ON_ZP_ADDRESS	move,0x20,d0 |  [$c125: lda $20]
	GET_ADDRESS	0x03fe                     	| [$c127: sta $03fe]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xf0,d0 |  [$c12a: sta $f0]
	GET_ADDRESS	0x03e0                     	| [$c12c: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$c12f: cmp #$0a]
	jne	l_c145                             	| [$c131: jne $c145]
	move.b	#0x0d,d0                        	| [$c133: lda #$0d]
	jbsr	l_b71f                            	| [$c135: jsr $b71f]
	and.b	#0x0f,d0                         	| [$c138: and #$0f]
	move.b	d0,d2                           	| [$c13a: tay]
	GET_ADDRESS	0x0265                     	| [$c13b: lda $0265]
	move.b	(a0),d0                         	| [...]
	                           	| [$c13e: clc]
	GET_ADDRESS	0xc148                     	| [$c13f: adc $c148, y]
	add.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0265                     	| [$c142: sta $0265]
	move.b	d0,(a0)                         	| [...]
l_c145:
	jra	l_bf4d                             	| [$c145: jra $bf4d]

l_c158:
                                         | [$c158: asl a]
	asl.b	#2,d0                            	| [$c159: asl a]
	GET_ADDRESS	0x0409                     	| [$c15a: ora $0409]
	or.b	(a0),d0                           	| [...]
	asl.b	#1,d0                            	| [$c15d: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c15e: sta $01]
	clr.b	d0                               	| [$c160: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c162: sta $00]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c164: lda current_object_index_4c]
	lsr.b	#1,d0                            	| [$c166: lsr a]
	move.b	d0,d2                           	| [$c167: tay]
	GET_ADDRESS	0x0047                     	| [$c168: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_c17b                             	| [$c16b: bmi $c17b]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$c16d: lda current_level_38]
	cmp.b	#0x09,d0                         	| [$c16f: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_c175                             	| [$c171: bcc $c175]
	move.b	#0x09,d0                        	| [$c173: lda #$09]
l_c175:
	                           	| [$c175: clc]
	add.b	#0x01,d0                        	| [$c176: adc #$01]
	asl.b	#1,d0                            	| [$c178: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c179: sta $00]
l_c17b:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$c17b: ldy $00]
	GET_ADDRESS	0xc190                     	| [$c17d: lda $c190, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$c180: clc]
	OP_R_ON_ZP_ADDRESS	add,0x01,d0 |  [$c181: adc $01]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c183: sta screen_source_pointer_0010]
	GET_ADDRESS	0xc191                     	| [$c185: lda $c191, y]
	move.b	(a0,d2.w),d0                    	| [...]
	moveq	#0x00,d4	| [$c188: adc #$00]
	addx.b	d4,d0                        	| [$c188: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c18a: sta $11]
	jbsr	l_6609                            	| [$c18c: jsr $6609]
	rts                                    	| [$c18f: rts]

	GET_ADDRESS	0x9505                     	| [$c463: sta $9505, y]
    move.b	d0,(a0,d2.w)                 	| [...]
l_c466:
	OP_W_ON_ZP_ADDRESS	addq,0x53,#1 |  [$c466: inc $53]
	move.b	#0x10,d0                        	| [$c468: lda #$10]
	GET_ADDRESS	0x0265                     	| [$c46a: sta $0265]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x08,d0                        	| [$c46d: lda #$08]
	GET_ADDRESS	0x03e0                     	| [$c46f: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$c472: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$c474: sta $56]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c476: lda current_object_index_4c]
	move.b	d0,d1                           	| [$c478: tax]
	lsr.b	#1,d0                            	| [$c479: lsr a]
	move.b	d0,d2                           	| [$c47a: tay]
	GET_ADDRESS	0x0047                     	| [$c47b: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bmi	l_c48e                             	| [$c47e: bmi $c48e]
	move.b	#0x06,d0                        	| [$c480: lda #$06]
	GET_ADDRESS	0x03e0                     	| [$c482: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0316                     	| [$c485: lda $0316, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$c488: and #$7f]
	cmp.b	#0x0a,d0                         	| [$c48a: cmp #$0a]
	beq	l_c491                             	| [$c48c: beq $c491]
l_c48e:
	jra	l_c0f3                             	| [$c48e: jra $c0f3]
l_c491:
	GET_ADDRESS	0x040e                     	| [$c491: lda $040e]
	move.b	(a0),d0                         	| [...]
	jne	l_c499                             	| [$c494: jne $c499]
	jra	l_c0f3                             	| [$c496: jra $c0f3]
l_c499:
	GET_ADDRESS	0x03e0                     	| [$c499: inc $03e0]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x040a                     	| [$c49c: lda $040a]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03fb                     	| [$c49f: sta $03fb]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c4a2: sta $9c]
	GET_ADDRESS	0x040b                     	| [$c4a4: lda $040b]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03fc                     	| [$c4a7: sta $03fc]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c4aa: sta $aa]
	GET_ADDRESS	0x040c                     	| [$c4ac: lda $040c]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03fd                     	| [$c4af: sta $03fd]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c4b2: sta $c6]
	GET_ADDRESS	0x040d                     	| [$c4b4: lda $040d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03fe                     	| [$c4b7: sta $03fe]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xf0,d0 |  [$c4ba: sta $f0]
	clr.b	d0                               	| [$c4bc: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c4be: sta $d4]
	OP_W_ON_ZP_ADDRESS	move,0xfe,d0 |  [$c4c0: sta $fe]
	GET_ADDRESS	0x040e                     	| [$c4c2: lda $040e]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x03ff                     	| [$c4c5: sta $03ff]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c4c8: sta $00]
	jbsr	l_ccf5                            	| [$c4ca: jsr $ccf5]
	jbsr	l_cacf                            	| [$c4cd: jsr $cacf]
	move.b	#0x0f,d0                        	| [$c4d0: lda #$0f]
	GET_ADDRESS	0x03e9                     	| [$c4d2: sta $03e9]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$c4d5: lda #$00]
	GET_ADDRESS	0x040e                     	| [$c4d7: sta $040e]
	move.b	d0,(a0)                         	| [...]
	jra	l_bf56                             	| [$c4da: jra $bf56]
l_c4dd:
	clr.b	d0                               	| [$c4dd: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x53,d0 |  [$c4df: sta $53]
	clr.b	d0                               	| [$c4e1: lda #$00]
	GET_ADDRESS	0x0265                     	| [$c4e3: sta $0265]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x0e,d0                        	| [$c4e6: lda #$0e]
	GET_ADDRESS	0x03e0                     	| [$c4e8: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c4eb: ldx current_object_index_4c]
	GET_ADDRESS	0x030e                     	| [$c4ed: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xf7,d0                         	| [$c4f0: and #$f7]
	                     	| [$c4f2: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$c4f5: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xf0,d0 |  [$c4f7: sta $f0]
	OP_W_ON_ZP_ADDRESS	move,0xfe,d0 |  [$c4f9: sta $fe]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$c4fb: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c4fd: sta $9c]
	GET_ADDRESS	objects_side_array_9d      	| [$c4ff: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c501: sta $aa]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$c503: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c505: sta $c6]
	GET_ADDRESS	0xc7                       	| [$c507: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c509: sta $d4]
	jra	l_bf4d                             	| [$c50b: jra $bf4d]
l_c50e:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$c50e: ldx current_object_index_4c]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$c510: lda $4f]
	bpl	l_c540                             	| [$c512: bpl $c540]
	GET_ADDRESS	0x03d4                     	| [$c514: lda $03d4, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0408                     	| [$c517: sta $0408]
	move.b	d0,(a0)                         	| [...]
	move.b	d1,d0                           	| [$c51a: txa]
	lsr.b	#1,d0                            	| [$c51b: lsr a]
	move.b	d0,d2                           	| [$c51c: tay]
	GET_ADDRESS	0x0047                     	| [$c51d: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_c52e                             	| [$c520: bpl $c52e]
	jbsr	l_f7b7                            	| [$c522: jsr $f7b7]
	GET_ADDRESS	player_1_controls_022e     	| [$c525: lda player_1_controls_022e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$c528: and #$20]
	beq	l_c543                             	| [$c52a: beq $c543]
	jne	l_c533                             	| [$c52c: jne $c533]
l_c52e:
	GET_ADDRESS	0x03c8                     	| [$c52e: lda $03c8, x]
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_c543                             	| [$c531: beq $c543]
l_c533:
	move.b	#0x0c,d0                        	| [$c533: lda #$0c]
	GET_ADDRESS	0x03e0                     	| [$c535: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$c538: lda #$00]
	GET_ADDRESS	0x0408                     	| [$c53a: sta $0408]
	move.b	d0,(a0)                         	| [...]
	jra	l_c548                             	| [$c53d: jra $c548]
l_c540:
	jra	l_bf15                             	| [$c540: jra $bf15]
l_c543:
	move.b	#0x0a,d0                        	| [$c543: lda #$0a]
	GET_ADDRESS	0x03e0                     	| [$c545: sta $03e0]
	move.b	d0,(a0)                         	| [...]
l_c548:
	clr.b	d0                               	| [$c548: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x53,d0 |  [$c54a: sta $53]
	move.b	#0x05,d0                        	| [$c54c: lda #$05]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$c54e: sta $56]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c550: lda current_object_index_4c]
	move.b	d0,d1                           	| [$c552: tax]
	lsr.b	#1,d0                            	| [$c553: lsr a]
	move.b	d0,d2                           	| [$c554: tay]
	GET_ADDRESS	0x03e0                     	| [$c555: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0c,d0                         	| [$c558: cmp #$0c]
	beq	l_c56d                             	| [$c55a: beq $c56d]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$c55c: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$c55e: sta ball_logical_y_bd]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$c560: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$c562: clc]
	add.b	#0x38,d0                        	| [$c563: adc #$38]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$c565: sta ball_logical_z_e7]
	GET_ADDRESS	0xf1                       	| [$c567: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$c569: adc #$00]
	addx.b	d4,d0                        	| [$c569: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$c56b: sta $f5]
l_c56d:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$c56d: lda current_object_index_4c]
	lsr.b	#1,d0                            	| [$c56f: lsr a]
	move.b	d0,d2                           	| [$c570: tay]
	GET_ADDRESS	0x0047                     	| [$c571: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_c57a                             	| [$c574: bpl $c57a]
	move.b	#0x48,d0                        	| [$c576: lda #$48]
	jne	l_c582                             	| [$c578: jne $c582]
l_c57a:
	GET_ADDRESS	0x0408                     	| [$c57a: lda $0408]
	move.b	(a0),d0                         	| [...]
                                         | [$c57d: asl a]
                                         | [$c57e: asl a]
	asl.b	#3,d0                            	| [$c57f: asl a]
	move.b	#0x3c,d4	| [$c580: adc #$3c]
	addx.b	d4,d0                        	| [$c580: adc #$3c]
l_c582:
	GET_ADDRESS	0x0265                     	| [$c582: sta $0265]
	move.b	d0,(a0)                         	| [...]
	jra	l_c0f3                             	| [$c585: jra $c0f3]
l_c588:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$c588: lda ball_logical_z_e7]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c58a: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$c58c: lda $f5]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c58e: sta $11]
	OP_R_ON_ZP_ADDRESS	move,0xd9,d0 |  [$c590: lda $d9]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c592: sta $00]
	GET_ADDRESS	0x02a6                     	| [$c594: lda $02a6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c597: sta multipurpose_12]
	GET_ADDRESS	0x02b3                     	| [$c599: lda $02b3]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c59c: sta multipurpose_13]
	GET_ADDRESS	0x02c0                     	| [$c59e: lda $02c0]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$c5a1: sta multipurpose_14]
	GET_ADDRESS	0x02cd                     	| [$c5a3: lda $02cd]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$c5a6: sta $15]
	clr.b	d0                               	| [$c5a8: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c5aa: sta $01]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c5ac: sta unpack_mode_and_misc_02]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c5ae: sta $03]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$c5b0: sta $04]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c5b2: sta $1b]
l_c5b4:
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c5b4: lda multipurpose_12]
	                           	| [$c5b6: clc]
	OP_R_ON_ZP_ADDRESS	add,0x00,d0 |  [$c5b7: adc $00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c5b9: sta $00]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c5bb: lda multipurpose_13]
	PUSH_SR                                	| [$c5bd: php]
	GET_ADDRESS	screen_source_pointer_0010 	| [$c5be: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c5c0: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c5c2: lda $11]
	moveq	#0x00,d4	| [$c5c4: adc #$00]
	addx.b	d4,d0                        	| [$c5c4: adc #$00]
	POP_SR                                 	| [$c5c6: plp]
	bpl	l_c5cc                             	| [$c5c7: bpl $c5cc]
	                           	| [$c5c9: clc]
	add.b	#0xff,d0                        	| [$c5ca: adc #$ff]
l_c5cc:
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c5cc: sta $11]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c5ce: lda multipurpose_12]
	SET_XC_FLAGS                           	| [$c5d0: sec]
	SBC	multipurpose_14                    	| [$c5d1: sbc multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c5d3: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c5d5: lda multipurpose_13]
	SBC	0x15                               	| [$c5d7: sbc $15]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c5d9: sta multipurpose_13]
	OP_W_ON_ZP_ADDRESS	addq,0x01,#1 |  [$c5db: inc $01]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c5dd: lda multipurpose_13]
	bpl	l_c5b4                             	| [$c5df: bpl $c5b4]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c5e1: lda $11]
	bmi	l_c629                             	| [$c5e3: bmi $c629]
	jne	l_c5b4                             	| [$c5e5: jne $c5b4]
	OP_R_ON_ZP_ADDRESS	or,screen_source_pointer_0010,d0 |  [$c5e7: ora screen_source_pointer_0010]
	beq	l_c629                             	| [$c5e9: beq $c629]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c5eb: lda unpack_mode_and_misc_02]
	jne	l_c5f9                             	| [$c5ed: jne $c5f9]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c5ef: lda screen_source_pointer_0010]
	cmp.b	#0x50,d0                         	| [$c5f1: cmp #$50]
	* bcs=>bcc
	jcc	l_c5f9                             	| [$c5f3: bcs $c5f9]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c5f5: lda $01]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c5f7: sta unpack_mode_and_misc_02]
l_c5f9:
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$c5f9: lda $03]
	jne	l_c607                             	| [$c5fb: jne $c607]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c5fd: lda screen_source_pointer_0010]
	cmp.b	#0x30,d0                         	| [$c5ff: cmp #$30]
	* bcs=>bcc
	jcc	l_c607                             	| [$c601: bcs $c607]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c603: lda $01]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c605: sta $03]
l_c607:
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$c607: lda $04]
	jne	l_c618                             	| [$c609: jne $c618]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c60b: lda screen_source_pointer_0010]
	GET_ADDRESS	0x03fe                     	| [$c60d: cmp $03fe]
	cmp.b	(a0),d0                          	| [...]
	beq	l_c614                             	| [$c610: beq $c614]
	* bcs=>bcc (cmp higher above)
	jcc	l_c618                             	| [$c612: bcs $c618]
l_c614:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c614: lda $01]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$c616: sta $04]
l_c618:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c618: lda $1b]
	jne	l_c626                             	| [$c61a: jne $c626]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c61c: lda screen_source_pointer_0010]
	cmp.b	#0x40,d0                         	| [$c61e: cmp #$40]
	* bcs=>bcc
	jcc	l_c626                             	| [$c620: bcs $c626]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c622: lda $01]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c624: sta $1b]
l_c626:
	jra	l_c5b4                             	| [$c626: jra $c5b4]
l_c629:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c629: lda $01]
	GET_ADDRESS	0x03ee                     	| [$c62b: sta $03ee]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c62e: lda unpack_mode_and_misc_02]
	GET_ADDRESS	0x03f9                     	| [$c630: sta $03f9]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$c633: lda $03]
	GET_ADDRESS	0x03f4                     	| [$c635: sta $03f4]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$c638: lda $04]
	GET_ADDRESS	0x03ff                     	| [$c63a: sta $03ff]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0272                     	| [$c63d: lda $0272]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c640: sta screen_source_pointer_0010]
	GET_ADDRESS	ball_x_speed_027f          	| [$c642: lda ball_x_speed_027f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c645: sta $11]
	bpl	l_c64c                             	| [$c647: bpl $c64c]
	jbsr	l_cf98                            	| [$c649: jsr $cf98]
l_c64c:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c64c: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c64e: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c650: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c652: sta $01]
	clr.b	d0                               	| [$c654: lda #$00]
	GET_ADDRESS	0x01                       	| [$c656: bit $01]
	BIT	(a0)                               	| [...]
	bpl	l_c65c                             	| [$c658: bpl $c65c]
	st.b	d0                        	| [$c65a: lda #$ff]
l_c65c:
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c65c: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x03ee                     	| [$c65e: lda $03ee]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c661: sta $03]
	jbsr	l_d160                            	| [$c663: jsr $d160]
	jbsr	l_c767                            	| [$c666: jsr $c767]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c669: lda $05]
	GET_ADDRESS	0x03ea                     	| [$c66b: sta $03ea]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c66e: lda $06]
	GET_ADDRESS	0x03eb                     	| [$c670: sta $03eb]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03f9                     	| [$c673: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c676: sta $03]
	jbsr	l_d160                            	| [$c678: jsr $d160]
	jbsr	l_c767                            	| [$c67b: jsr $c767]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c67e: lda $05]
	GET_ADDRESS	0x03f5                     	| [$c680: sta $03f5]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c683: lda $06]
	GET_ADDRESS	0x03f6                     	| [$c685: sta $03f6]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03f4                     	| [$c688: lda $03f4]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c68b: sta $03]
	jbsr	l_d160                            	| [$c68d: jsr $d160]
	jbsr	l_c767                            	| [$c690: jsr $c767]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c693: lda $05]
	GET_ADDRESS	0x03ef                     	| [$c695: sta $03ef]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c698: lda $06]
	GET_ADDRESS	0x03f0                     	| [$c69a: sta $03f0]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c69d: lda $1b]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c69f: sta $03]
	jbsr	l_d160                            	| [$c6a1: jsr $d160]
	jbsr	l_c767                            	| [$c6a4: jsr $c767]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c6a7: lda $05]
	SET_XC_FLAGS |  [$c6a9: sec]
	SBC_IMM	0x08	| [$c6aa: sbc #$08] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c6ac: sta $9c]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c6ae: lda $06]
	SBC_IMM	0x00                           	| [$c6b0: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c6b2: sta $aa]
	GET_ADDRESS	0x028c                     	| [$c6b4: lda $028c]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c6b7: sta screen_source_pointer_0010]
	GET_ADDRESS	0x0299                     	| [$c6b9: lda $0299]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c6bc: sta $11]
	bpl	l_c6c3                             	| [$c6be: bpl $c6c3]
	jbsr	l_cf98                            	| [$c6c0: jsr $cf98]
l_c6c3:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c6c3: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c6c5: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c6c7: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c6c9: sta $01]
	clr.b	d0                               	| [$c6cb: lda #$00]
	GET_ADDRESS	0x01                       	| [$c6cd: bit $01]
	BIT	(a0)                               	| [...]
	bpl	l_c6d3                             	| [$c6cf: bpl $c6d3]
	st.b	d0                        	| [$c6d1: lda #$ff]
l_c6d3:
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c6d3: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x03ee                     	| [$c6d5: lda $03ee]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c6d8: sta $03]
	jbsr	l_d160                            	| [$c6da: jsr $d160]
	jbsr	l_c790                            	| [$c6dd: jsr $c790]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c6e0: lda $05]
	GET_ADDRESS	0x03ec                     	| [$c6e2: sta $03ec]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c6e5: lda $06]
	GET_ADDRESS	0x03ed                     	| [$c6e7: sta $03ed]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03f9                     	| [$c6ea: lda $03f9]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c6ed: sta $03]
	jbsr	l_d160                            	| [$c6ef: jsr $d160]
	jbsr	l_c790                            	| [$c6f2: jsr $c790]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c6f5: lda $05]
	GET_ADDRESS	0x03f7                     	| [$c6f7: sta $03f7]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c6fa: lda $06]
	GET_ADDRESS	0x03f8                     	| [$c6fc: sta $03f8]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03f4                     	| [$c6ff: lda $03f4]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c702: sta $03]
	jbsr	l_d160                            	| [$c704: jsr $d160]
	jbsr	l_c790                            	| [$c707: jsr $c790]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c70a: lda $05]
	GET_ADDRESS	0x03f1                     	| [$c70c: sta $03f1]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c70f: lda $06]
	GET_ADDRESS	0x03f2                     	| [$c711: sta $03f2]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$c714: lda $1b]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c716: sta $03]
	jbsr	l_d160                            	| [$c718: jsr $d160]
	jbsr	l_c790                            	| [$c71b: jsr $c790]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c71e: lda $05]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c720: sta $c6]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c722: lda $06]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c724: sta $d4]
	move.b	#0x0d,d0                        	| [$c726: lda #$0d]
	jbsr	l_b71f                            	| [$c728: jsr $b71f]
	GET_ADDRESS	0x03fa                     	| [$c72b: sta $03fa]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03ea                     	| [$c72e: lda $03ea]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c731: sta $9c]
	GET_ADDRESS	0x03eb                     	| [$c733: lda $03eb]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c736: sta $aa]
	GET_ADDRESS	0x03ec                     	| [$c738: lda $03ec]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c73b: sta $c6]
	GET_ADDRESS	0x03ed                     	| [$c73d: lda $03ed]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c740: sta $d4]
	move.b	#0x0d,d0                        	| [$c742: lda #$0d]
	jbsr	l_b71f                            	| [$c744: jsr $b71f]
	GET_ADDRESS	0x03e9                     	| [$c747: sta $03e9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03ef                     	| [$c74a: lda $03ef]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$c74d: sta $9c]
	GET_ADDRESS	0x03f0                     	| [$c74f: lda $03f0]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$c752: sta $aa]
	GET_ADDRESS	0x03f1                     	| [$c754: lda $03f1]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$c757: sta $c6]
	GET_ADDRESS	0x03f2                     	| [$c759: lda $03f2]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$c75c: sta $d4]
	move.b	#0x0d,d0                        	| [$c75e: lda #$0d]
	jbsr	l_b71f                            	| [$c760: jsr $b71f]
	GET_ADDRESS	0x03f3                     	| [$c763: sta $03f3]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$c766: rts]
l_c767:
	GET_ADDRESS	ball_x_speed_027f          	| [$c767: bit ball_x_speed_027f]
	BIT	(a0)                               	| [...]
	bmi	l_c77e                             	| [$c76a: bmi $c77e]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$c76c: lda $04]
	                           	| [$c76e: clc]
	OP_R_ON_ZP_ADDRESS	add,0x85,d0 |  [$c76f: adc $85]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c771: lda $05]
	GET_ADDRESS	ball_logical_x_93          	| [$c773: adc ball_logical_x_93]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$c775: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c777: lda $06]
	GET_ADDRESS	ball_side_a1               	| [$c779: adc ball_side_a1]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$c77b: sta $06]
	rts                                    	| [$c77d: rts]
l_c77e:
	OP_R_ON_ZP_ADDRESS	move,0x85,d0 |  [$c77e: lda $85]
	SET_XC_FLAGS                           	| [$c780: sec]
	SBC	0x04                               	| [$c781: sbc $04]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$c783: lda ball_logical_x_93]
	SBC	0x05                               	| [$c785: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$c787: sta $05]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$c789: lda ball_side_a1]
	SBC	0x06                               	| [$c78b: sbc $06]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$c78d: sta $06]
	rts                                    	| [$c78f: rts]
l_c790:
	GET_ADDRESS	0x0299                     	| [$c790: bit $0299]
	BIT	(a0)                               	| [...]
	bmi	l_c7a7                             	| [$c793: bmi $c7a7]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$c795: lda $04]
	                           	| [$c797: clc]
	OP_R_ON_ZP_ADDRESS	add,0xaf,d0 |  [$c798: adc $af]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c79a: lda $05]
	GET_ADDRESS	ball_logical_y_bd          	| [$c79c: adc ball_logical_y_bd]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$c79e: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c7a0: lda $06]
	GET_ADDRESS	ball_kind_of_z_cb          	| [$c7a2: adc ball_kind_of_z_cb]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$c7a4: sta $06]
	rts                                    	| [$c7a6: rts]
l_c7a7:
	OP_R_ON_ZP_ADDRESS	move,0xaf,d0 |  [$c7a7: lda $af]
	SET_XC_FLAGS                           	| [$c7a9: sec]
	SBC	0x04                               	| [$c7aa: sbc $04]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$c7ac: lda ball_logical_y_bd]
	SBC	0x05                               	| [$c7ae: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$c7b0: sta $05]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$c7b2: lda ball_kind_of_z_cb]
	SBC	0x06                               	| [$c7b4: sbc $06]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$c7b6: sta $06]
	rts                                    	| [$c7b8: rts]
l_c7b9:
	move.b	#0x03,d0                        	| [$c7b9: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c7bb: sta $00]
l_c7bd:
	move.b	#0x01,d0                        	| [$c7bd: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c7bf: sta $01]
l_c7c1:
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$c7c1: lda $01]
                                         | [$c7c3: asl a]
                                         | [$c7c4: asl a]
	asl.b	#3,d0                            	| [$c7c5: asl a]
	move.b	d0,d2                           	| [$c7c6: tay]
	clr.b	d1                               	| [$c7c7: ldx #$00]
l_c7c9:
	GET_ADDRESS	0xc8d7                     	| [$c7c9: lda $c8d7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x08                       	| [$c7cc: sta $08, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d2                           	| [$c7ce: iny]
	addq.b	#1,d1                           	| [$c7cf: inx]
	cmp.b	#0x08,d1                         	| [$c7d0: cpx #$08]
	* bcc=>bcs (cmp above)
	jcs	l_c7c9                             	| [$c7d2: bcc $c7c9]
	OP_R_ON_ZP_ADDRESS	move,0x01,d2 |  [$c7d4: ldy $01]
	GET_ADDRESS	0xc8d5                     	| [$c7d6: lda $c8d5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c7d9: sta unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$c7db: ldx $00]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d2 |  [$c7dd: ldy unpack_mode_and_misc_02]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$c7df: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$c7e1: sec]
	SBC_Y	0x03ea                           	| [$c7e2: sbc $03ea, y]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c7e5: sta screen_source_pointer_0010]
	GET_ADDRESS	objects_side_array_9d      	| [$c7e7: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x03eb                           	| [$c7e9: sbc $03eb, y]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c7ec: sta $11]
	bpl	l_c7f3                             	| [$c7ee: bpl $c7f3]
	jbsr	l_cf98                            	| [$c7f0: jsr $cf98]
l_c7f3:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$c7f3: ldy $00]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c7f5: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d1 |  [$c7f7: ldx $11]
	beq	l_c7fd                             	| [$c7f9: beq $c7fd]
	st.b	d0                        	| [$c7fb: lda #$ff]
l_c7fd:
	GET_INDIRECT_ADDRESS	0x08              	| [$c7fd: sta ($08), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$c7ff: ldx $00]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d2 |  [$c801: ldy unpack_mode_and_misc_02]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$c803: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$c805: sec]
	SBC_Y	0x03ec                           	| [$c806: sbc $03ec, y]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c809: sta screen_source_pointer_0010]
	GET_ADDRESS	0xc7                       	| [$c80b: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_Y	0x03ed                           	| [$c80d: sbc $03ed, y]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c810: sta $11]
	bpl	l_c817                             	| [$c812: bpl $c817]
	jbsr	l_cf98                            	| [$c814: jsr $cf98]
l_c817:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$c817: ldy $00]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c819: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d1 |  [$c81b: ldx $11]
	beq	l_c821                             	| [$c81d: beq $c821]
	st.b	d0                        	| [$c81f: lda #$ff]
l_c821:
	GET_INDIRECT_ADDRESS	0x0a              	| [$c821: sta ($0a), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_INDIRECT_ADDRESS	0x08              	| [$c823: lda ($08), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c825: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c827: sta multipurpose_12]
	clr.b	d0                               	| [$c829: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c82b: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c82d: sta multipurpose_13]
	jbsr	l_d129                            	| [$c82f: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$c832: lda multipurpose_14]
	GET_INDIRECT_ADDRESS	0x0c              	| [$c834: sta ($0c), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$c836: lda $15]
	GET_INDIRECT_ADDRESS	0x0e              	| [$c838: sta ($0e), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_INDIRECT_ADDRESS	0x0a              	| [$c83a: lda ($0a), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c83c: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c83e: sta multipurpose_12]
	clr.b	d0                               	| [$c840: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c842: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c844: sta multipurpose_13]
	jbsr	l_d129                            	| [$c846: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$c849: lda multipurpose_14]
	                           	| [$c84b: clc]
	GET_INDIRECT_ADDRESS	0x0c              	| [$c84c: adc ($0c), y]
	           	| [...]
	             	| [$c84e: sta ($0c), y]
	add.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$c850: lda $15]
	GET_INDIRECT_ADDRESS	0x0e              	| [$c852: adc ($0e), y]
	move.b	(a0,d2.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	              	| [$c854: sta ($0e), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_W_ON_ZP_ADDRESS	subq,0x01,#1 |  [$c856: dec $01]
	bmi	l_c85d                             	| [$c858: bmi $c85d]
	jra	l_c7c1                             	| [$c85a: jra $c7c1]
l_c85d:
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$c85d: dec $00]
	bmi	l_c864                             	| [$c85f: bmi $c864]
	jra	l_c7bd                             	| [$c861: jra $c7bd]
l_c864:
	clr.b	d2                               	| [$c864: ldy #$00]
l_c866:
	clr.b	d0                               	| [$c866: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c868: sta $00]
	GET_ADDRESS	0x0347                     	| [$c86a: lda $0347, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$c86d: sec]
	SBC_Y	0x0348                           	| [$c86e: sbc $0348, y]
	GET_ADDRESS	0x034b                     	| [$c871: lda $034b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_Y	0x034c                           	| [$c874: sbc $034c, y]
	jcc	l_c87b                             	| [$c877: bcc $c87b]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$c879: inc $00]
l_c87b:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$c87b: lda $00]
	GET_ADDRESS	0x0357                     	| [$c87d: sta $0357, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_c8bf                            	| [$c880: jsr $c8bf]
	addq.b	#1,d2                           	| [$c883: iny]
	eor.b	#0x01,d0                         	| [$c884: eor #$01]
	GET_ADDRESS	0x0357                     	| [$c886: sta $0357, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_c8bf                            	| [$c889: jsr $c8bf]
	addq.b	#1,d2                           	| [$c88c: iny]
	cmp.b	#0x04,d2                         	| [$c88d: cpy #$04]
	jne	l_c866                             	| [$c88f: jne $c866]
	clr.b	d2                               	| [$c891: ldy #$00]
l_c893:
	clr.b	d0                               	| [$c893: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c895: sta $00]
	GET_ADDRESS	0x035b                     	| [$c897: lda $035b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$c89a: sec]
	SBC_Y	0x035c                           	| [$c89b: sbc $035c, y]
	GET_ADDRESS	0x035f                     	| [$c89e: lda $035f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	SBC_Y	0x0360                           	| [$c8a1: sbc $0360, y]
	jcc	l_c8a8                             	| [$c8a4: bcc $c8a8]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$c8a6: inc $00]
l_c8a8:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$c8a8: lda $00]
	GET_ADDRESS	0x036b                     	| [$c8aa: sta $036b, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_c8ca                            	| [$c8ad: jsr $c8ca]
	addq.b	#1,d2                           	| [$c8b0: iny]
	eor.b	#0x01,d0                         	| [$c8b1: eor #$01]
	GET_ADDRESS	0x036b                     	| [$c8b3: sta $036b, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	jbsr	l_c8ca                            	| [$c8b6: jsr $c8ca]
	addq.b	#1,d2                           	| [$c8b9: iny]
	cmp.b	#0x04,d2                         	| [$c8ba: cpy #$04]
	jne	l_c893                             	| [$c8bc: jne $c893]
	rts                                    	| [$c8be: rts]
l_c8bf:
	tst.b	d0                               	| [$c8bf: cmp #$00]
	jne	l_c8c9                             	| [$c8c1: jne $c8c9]
	move.b	d2,d0                           	| [$c8c3: tya]
	lsr.b	#1,d0                            	| [$c8c4: lsr a]
	move.b	d0,d1                           	| [$c8c5: tax]
	move.b	d2,d0                           	| [$c8c6: tya]
	GET_ADDRESS	0x61                       	| [$c8c7: sta $61, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_c8c9:
	rts                                    	| [$c8c9: rts]
l_c8ca:
	tst.b	d0                               	| [$c8ca: cmp #$00]
	jne	l_c8d4                             	| [$c8cc: jne $c8d4]
	move.b	d2,d0                           	| [$c8ce: tya]
	lsr.b	#1,d0                            	| [$c8cf: lsr a]
	move.b	d0,d1                           	| [$c8d0: tax]
	move.b	d2,d0                           	| [$c8d1: tya]
	GET_ADDRESS	0x63                       	| [$c8d2: sta $63, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_c8d4:
	rts                                    	| [$c8d4: rts]

* called each time a player launches, serves, blocks, spikes... the ball
ball_trajectory_change_c8e7:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$c8e7: lda $56]
	and.b	#0x10,d0                         	| [$c8e9: and #$10]
                                         | [$c8ec: lsr a]
                                         | [$c8ed: lsr a]
	lsr.b	#3,d0                            	| [$c8ee: lsr a]
	eor.b	#0x01,d0                         	| [$c8ef: eor #$01]
	move.b	d0,d2                           	| [$c8f1: tay]
	GET_ADDRESS	0x5f                       	| [$c8f2: ldx $5f, y]
	move.b	(a0,d2.w),d1                    	| [...]
	GET_ADDRESS	0xc976                     	| [$c8f4: lda $c976, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$c8f7: clc]
	PUSH_SR                                	| [$c8f8: php]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$c8f9: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0	| [...]
	GET_ADDRESS	0x0400                     	| [$c8fb: sta $0400]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$c8fe: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$c900: adc #$00]
	addx.b	d4,d0                        	| [$c900: adc #$00]
	POP_SR                                 	| [$c902: plp]
	bpl	l_c907                             	| [$c903: bpl $c907]
	st.b	d4	| [$c905: adc #$ff]
	add.b	d4,d0                        	| [$c905: adc #$ff]
l_c907:
	GET_ADDRESS	0x0401                     	| [$c907: sta $0401]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x85,d0 |  [$c90a: lda $85]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c90c: sta $00]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$c90e: lda ball_logical_x_93]
	SET_XC_FLAGS                           	| [$c910: sec]
	SBC	0x0400                             	| [$c911: sbc $0400]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c914: sta $01]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$c916: lda ball_side_a1]
	SBC	0x0401                             	| [$c918: sbc $0401]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c91b: sta unpack_mode_and_misc_02]
	bpl	l_c922                             	| [$c91d: bpl $c922]
	jbsr	l_cfd6                            	| [$c91f: jsr $cfd6]
l_c922:
	GET_ADDRESS	0x0272                     	| [$c922: lda $0272]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c925: sta screen_source_pointer_0010]
	GET_ADDRESS	ball_x_speed_027f          	| [$c927: lda ball_x_speed_027f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c92a: sta $11]
	bpl	l_c931                             	| [$c92c: bpl $c931]
	jbsr	l_cf98                            	| [$c92e: jsr $cf98]
l_c931:
	jbsr	l_d086                            	| [$c931: jsr $d086]
	GET_ADDRESS	0x03ee                     	| [$c934: lda $03ee]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$c937: cmp $00]
	* bcc=>bcs (cmp above)
	jcs	l_c95e                             	| [$c939: bcc $c95e]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$c93b: lda $00]
	GET_ADDRESS	0x0406                     	| [$c93d: sta $0406]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_c97a                            	| [$c940: jsr $c97a]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$c943: lda multipurpose_14]
	GET_ADDRESS	0x0402                     	| [$c945: sta $0402]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$c948: lda $15]
	GET_ADDRESS	0x0403                     	| [$c94a: sta $0403]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0406                     	| [$c94d: ldy $0406]
	move.b	(a0),d2                         	| [...]
	jbsr	l_c9b2                            	| [$c950: jsr $c9b2]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c953: lda screen_source_pointer_0010]
	GET_ADDRESS	0x0404                     	| [$c955: sta $0404]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c958: lda $11]
	GET_ADDRESS	0x0405                     	| [$c95a: sta $0405]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$c95d: rts]
l_c95e:
	clr.b	d0                               	| [$c95e: lda #$00]
	GET_ADDRESS	0x0406                     	| [$c960: sta $0406]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0400                     	| [$c963: sta $0400]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0401                     	| [$c966: sta $0401]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0402                     	| [$c969: sta $0402]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0403                     	| [$c96c: sta $0403]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0404                     	| [$c96f: sta $0404]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0405                     	| [$c972: sta $0405]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$c975: rts]

l_c97a:
	movem.w	d0,-(sp)                       	| [$c97a: pha]
	clr.b	d0                               	| [$c97b: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c97d: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x028c                     	| [$c97f: lda $028c]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c982: sta $00]
	GET_ADDRESS	0x0299                     	| [$c984: lda $0299]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$c987: sta $01]
	bpl	l_c992                             	| [$c989: bpl $c992]
	st.b	d0                        	| [$c98b: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$c98d: sta unpack_mode_and_misc_02]
	jbsr	l_cfd6                            	| [$c98f: jsr $cfd6]
l_c992:
	move.w	(sp)+,d0                        	| [$c992: pla]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$c993: sta $03]
	jbsr	l_d160                            	| [$c995: jsr $d160]
	GET_ADDRESS	0x0299                     	| [$c998: bit $0299]
	BIT	(a0)                               	| [...]
	bpl	l_c9a0                             	| [$c99b: bpl $c9a0]
	jbsr	l_cff0                            	| [$c99d: jsr $cff0]
l_c9a0:
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$c9a0: lda $04]
	                           	| [$c9a2: clc]
	OP_R_ON_ZP_ADDRESS	add,0xaf,d0 |  [$c9a3: adc $af]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$c9a5: lda $05]
	GET_ADDRESS	ball_logical_y_bd          	| [$c9a7: adc ball_logical_y_bd]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$c9a9: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$c9ab: lda $06]
	GET_ADDRESS	ball_kind_of_z_cb          	| [$c9ad: adc ball_kind_of_z_cb]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$c9af: sta $15]
	rts                                    	| [$c9b1: rts]
l_c9b2:
	OP_R_ON_ZP_ADDRESS	move,0xd9,d0 |  [$c9b2: lda $d9]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c9b4: sta $00]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$c9b6: lda ball_logical_z_e7]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c9b8: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$c9ba: lda $f5]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c9bc: sta $11]
	GET_ADDRESS	0x02a6                     	| [$c9be: lda $02a6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c9c1: sta multipurpose_12]
	GET_ADDRESS	0x02b3                     	| [$c9c3: lda $02b3]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c9c6: sta multipurpose_13]
l_c9c8:
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c9c8: lda multipurpose_12]
	                           	| [$c9ca: clc]
	OP_R_ON_ZP_ADDRESS	add,0x00,d0 |  [$c9cb: adc $00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$c9cd: sta $00]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c9cf: lda multipurpose_13]
	PUSH_SR                                	| [$c9d1: php]
	GET_ADDRESS	screen_source_pointer_0010 	| [$c9d2: adc screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$c9d4: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$c9d6: lda $11]
	moveq	#0x00,d4	| [$c9d8: adc #$00]
	addx.b	d4,d0                        	| [$c9d8: adc #$00]
	POP_SR                                 	| [$c9da: plp]
	bpl	l_c9e0                             	| [$c9db: bpl $c9e0]
	                           	| [$c9dd: clc]
	add.b	#0xff,d0                        	| [$c9de: adc #$ff]
l_c9e0:
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$c9e0: sta $11]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c9e2: lda multipurpose_12]
	SET_XC_FLAGS                           	| [$c9e4: sec]
	SBC	0x02c0                             	| [$c9e5: sbc $02c0]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$c9e8: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c9ea: lda multipurpose_13]
	SBC	0x02cd                             	| [$c9ec: sbc $02cd]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$c9ef: sta multipurpose_13]
	subq.b	#1,d2                           	| [$c9f1: dey]
	jne	l_c9c8                             	| [$c9f2: jne $c9c8]
	rts                                    	| [$c9f4: rts]
l_c9f5:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$c9f5: lda $56]
	and.b	#0x10,d0                         	| [$c9f7: and #$10]
                                         | [$c9f9: lsr a]
                                         | [$c9fa: lsr a]
	lsr.b	#3,d0                            	| [$c9fb: lsr a]
	eor.b	#0x02,d0                         	| [$c9fc: eor #$02]
	move.b	d0,d1                           	| [$c9fe: tax]
l_c9ff:
	jbsr	l_ca09                            	| [$c9ff: jsr $ca09]
	addq.b	#1,d1                           	| [$ca02: inx]
	move.b	d1,d0                           	| [$ca03: txa]
	and.b	#0x01,d0                         	| [$ca04: and #$01]
	jne	l_c9ff                             	| [$ca06: jne $c9ff]
	rts                                    	| [$ca08: rts]
l_ca09:
	OP_R_ON_ZP_ADDRESS	move,0x85,d0 |  [$ca09: lda $85]
	SET_XC_FLAGS                           	| [$ca0b: sec]
	SBC_X	0x81                             	| [$ca0c: sbc $81, x]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ca0e: sta $00]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$ca10: lda ball_logical_x_93]
	SBC_X	objects_logical_x_array_8f       	| [$ca12: sbc objects_logical_x_array_8f, x]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$ca14: sta $01]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$ca16: lda ball_side_a1]
	SBC_X	objects_side_array_9d            	| [$ca18: sbc objects_side_array_9d, x]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$ca1a: sta unpack_mode_and_misc_02]
	bpl	l_ca21                             	| [$ca1c: bpl $ca21]
	jbsr	l_cfd6                            	| [$ca1e: jsr $cfd6]
l_ca21:
	GET_ADDRESS	0x0272                     	| [$ca21: lda $0272]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ca24: sta screen_source_pointer_0010]
	GET_ADDRESS	ball_x_speed_027f          	| [$ca26: lda ball_x_speed_027f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ca29: sta $11]
	bpl	l_ca30                             	| [$ca2b: bpl $ca30]
	jbsr	l_cf98                            	| [$ca2d: jsr $cf98]
l_ca30:
	jbsr	l_d086                            	| [$ca30: jsr $d086]
	GET_ADDRESS	0x03ee                     	| [$ca33: lda $03ee]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$ca36: cmp $00]
	* bcc=>bcs (cmp above)
	jcs	l_ca6a                             	| [$ca38: bcc $ca6a]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$ca3a: lda $00]
	GET_ADDRESS	0x03a0                     	| [$ca3c: sta $03a0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	l_c97a                            	| [$ca3f: jsr $c97a]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ca42: lda multipurpose_14]
	GET_ADDRESS	0x0390                     	| [$ca44: sta $0390, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$ca47: lda $15]
	GET_ADDRESS	0x0394                     	| [$ca49: sta $0394, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x03a0                     	| [$ca4c: lda $03a0, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	d0,d2                           	| [$ca4f: tay]
	jbsr	l_c9b2                            	| [$ca50: jsr $c9b2]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ca53: lda screen_source_pointer_0010]
	GET_ADDRESS	0x0398                     	| [$ca55: sta $0398, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$ca58: lda $11]
	GET_ADDRESS	0x039c                     	| [$ca5a: sta $039c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	bpl	l_ca67                             	| [$ca5d: bpl $ca67]
	clr.b	d0                               	| [$ca5f: lda #$00]
	GET_ADDRESS	0x0398                     	| [$ca61: sta $0398, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x039c                     	| [$ca64: sta $039c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ca67:
	jra	l_ca7b                             	| [$ca67: jra $ca7b]
l_ca6a:
	clr.b	d0                               	| [$ca6a: lda #$00]
	GET_ADDRESS	0x03a0                     	| [$ca6c: sta $03a0, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0390                     	| [$ca6f: sta $0390, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0394                     	| [$ca72: sta $0394, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0398                     	| [$ca75: sta $0398, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x039c                     	| [$ca78: sta $039c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_ca7b:
	rts                                    	| [$ca7b: rts]
l_ca7c:
	move.b	#0x0d,d0                        	| [$ca7c: lda #$0d]
	jbsr	l_b44a                            	| [$ca7e: jsr $b44a]
	GET_ADDRESS	0x0258                     	| [$ca81: sta $0258]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ca84: sta $00]
	GET_ADDRESS	0x0265                     	| [$ca86: lda $0265]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$ca89: sta $01]
	jbsr	l_b67c                            	| [$ca8b: jsr $b67c]
	jbsr	l_ccf5                            	| [$ca8e: jsr $ccf5]
	clr.b	d1                               	| [$ca91: ldx #$00]
	GET_ADDRESS	0x0258                     	| [$ca93: lda $0258]
	move.b	(a0),d0                         	| [...]
	                           	| [$ca96: clc]
	add.b	#0x20,d0                        	| [$ca97: adc #$20]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ca99: sta $00]
	bpl	l_ca9f                             	| [$ca9b: bpl $ca9f]
	eor.b	#0x80,d0                         	| [$ca9d: eor #$80]
l_ca9f:
	cmp.b	#0x40,d0                         	| [$ca9f: cmp #$40]
	* bcs=>bcc
	jcc	l_caa5                             	| [$caa1: bcs $caa5]
	move.b	#0x03,d1                        	| [$caa3: ldx #$03]
l_caa5:
	GET_ADDRESS	coin_per_credit_0416       	| [$caa5: lda coin_per_credit_0416, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$caa8: sta $00]
	GET_ADDRESS	0x0417                     	| [$caaa: lda $0417, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$caad: sta $01]
	GET_ADDRESS	0x0418                     	| [$caaf: lda $0418, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cab2: sta unpack_mode_and_misc_02]
	bpl	l_cab9                             	| [$cab4: bpl $cab9]
	jbsr	l_cfd6                            	| [$cab6: jsr $cfd6]
l_cab9:
	tst.b	d1                               	| [$cab9: cpx #$00]
	beq	l_cac5                             	| [$cabb: beq $cac5]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$cabd: lda multipurpose_12]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cabf: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$cac1: lda multipurpose_13]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cac3: sta $11]
l_cac5:
	GET_ADDRESS	0x11                       	| [$cac5: bit $11]
	BIT	(a0)                               	| [...]
	bpl	l_cacc                             	| [$cac7: bpl $cacc]
	jbsr	l_cf98                            	| [$cac9: jsr $cf98]
l_cacc:
	jbsr	l_d086                            	| [$cacc: jsr $d086]
l_cacf:
	GET_ADDRESS	0x03e0                     	| [$cacf: ldy $03e0]
	move.b	(a0),d2                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cad2: lda $00]
	                           	| [$cad4: clc]
	GET_ADDRESS	0xcce4                     	| [$cad5: adc $cce4, y]
	add.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x041f                     	| [$cad8: sta $041f]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cadb: sta screen_source_pointer_0010]
	clr.b	d0                               	| [$cadd: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cadf: sta $11]
	GET_ADDRESS	coin_per_credit_0416       	| [$cae1: lda coin_per_credit_0416]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cae4: sta $00]
	GET_ADDRESS	0x0417                     	| [$cae6: lda $0417]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cae9: sta $01]
	GET_ADDRESS	0x0418                     	| [$caeb: lda $0418]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$caee: sta unpack_mode_and_misc_02]
	bpl	l_caf5                             	| [$caf0: bpl $caf5]
	jbsr	l_cfd6                            	| [$caf2: jsr $cfd6]
l_caf5:
	jbsr	l_d086                            	| [$caf5: jsr $d086]
	GET_ADDRESS	0x0418                     	| [$caf8: bit $0418]
	BIT	(a0)                               	| [...]
	bpl	l_cb00                             	| [$cafb: bpl $cb00]
	jbsr	l_cfd6                            	| [$cafd: jsr $cfd6]
l_cb00:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb00: lda $00]
	GET_ADDRESS	0x0272                     	| [$cb02: sta $0272]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb05: lda $01]
	GET_ADDRESS	ball_x_speed_027f          	| [$cb07: sta ball_x_speed_027f]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0419                     	| [$cb0a: lda $0419]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb0d: sta $00]
	GET_ADDRESS	0x041a                     	| [$cb0f: lda $041a]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb12: sta $01]
	GET_ADDRESS	0x041b                     	| [$cb14: lda $041b]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cb17: sta unpack_mode_and_misc_02]
	bpl	l_cb1e                             	| [$cb19: bpl $cb1e]
	jbsr	l_cfd6                            	| [$cb1b: jsr $cfd6]
l_cb1e:
	jbsr	l_d086                            	| [$cb1e: jsr $d086]
	GET_ADDRESS	0x041b                     	| [$cb21: bit $041b]
	BIT	(a0)                               	| [...]
	bpl	l_cb29                             	| [$cb24: bpl $cb29]
	jbsr	l_cfd6                            	| [$cb26: jsr $cfd6]
l_cb29:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb29: lda $00]
	GET_ADDRESS	0x028c                     	| [$cb2b: sta $028c]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb2e: lda $01]
	GET_ADDRESS	0x0299                     	| [$cb30: sta $0299]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x03e0                     	| [$cb33: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$cb36: cmp #$07]
	beq	l_cb42                             	| [$cb38: beq $cb42]
	cmp.b	#0x0a,d0                         	| [$cb3a: cmp #$0a]
	* bcc=>bcs (cmp above)
	jcs	l_cb6b                             	| [$cb3c: bcc $cb6b]
	cmp.b	#0x0c,d0                         	| [$cb3e: cmp #$0c]
	* bcs=>bcc
	jcc	l_cb6b                             	| [$cb40: bcs $cb6b]
l_cb42:
	GET_ADDRESS	0x041c                     	| [$cb42: lda $041c]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb45: sta $00]
	GET_ADDRESS	0x041d                     	| [$cb47: lda $041d]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb4a: sta $01]
	GET_ADDRESS	0x041e                     	| [$cb4c: lda $041e]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cb4f: sta unpack_mode_and_misc_02]
	bpl	l_cb56                             	| [$cb51: bpl $cb56]
	jbsr	l_cfd6                            	| [$cb53: jsr $cfd6]
l_cb56:
	jbsr	l_d086                            	| [$cb56: jsr $d086]
	GET_ADDRESS	0x041e                     	| [$cb59: bit $041e]
	BIT	(a0)                               	| [...]
	bpl	l_cb61                             	| [$cb5c: bpl $cb61]
	jbsr	l_cfd6                            	| [$cb5e: jsr $cfd6]
l_cb61:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb61: lda $00]
	GET_ADDRESS	0x02a6                     	| [$cb63: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb66: lda $01]
	GET_ADDRESS	0x02b3                     	| [$cb68: sta $02b3]
	move.b	d0,(a0)                         	| [...]
l_cb6b:
	GET_ADDRESS	0x0272                     	| [$cb6b: lda $0272]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cb6e: sta screen_source_pointer_0010]
	GET_ADDRESS	ball_x_speed_027f          	| [$cb70: lda ball_x_speed_027f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cb73: sta $11]
	bpl	l_cb7a                             	| [$cb75: bpl $cb7a]
	jbsr	l_cf98                            	| [$cb77: jsr $cf98]
l_cb7a:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cb7a: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cb7c: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cb7e: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cb80: sta $01]
	clr.b	d0                               	| [$cb82: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cb84: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x041f                     	| [$cb86: lda $041f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$cb89: sta $03]
	jbsr	l_d160                            	| [$cb8b: jsr $d160]
	GET_ADDRESS	ball_x_speed_027f          	| [$cb8e: bit ball_x_speed_027f]
	BIT	(a0)                               	| [...]
	bpl	l_cb96                             	| [$cb91: bpl $cb96]
	jbsr	l_cff0                            	| [$cb93: jsr $cff0]
l_cb96:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$cb96: lda ball_logical_x_93]
	                           	| [$cb98: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cb99: adc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cb9b: sta $05]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$cb9d: lda ball_side_a1]
	GET_ADDRESS	0x06                       	| [$cb9f: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cba1: sta $06]
	OP_R_ON_ZP_ADDRESS	move,0x9c,d0 |  [$cba3: lda $9c]
	SET_XC_FLAGS                           	| [$cba5: sec]
	SBC	0x05                               	| [$cba6: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cba8: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0xaa,d0 |  [$cbaa: lda $aa]
	SBC	0x06                               	| [$cbac: sbc $06]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cbae: sta $06]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$cbb0: lda ball_logical_x_93]
	                           	| [$cbb2: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cbb3: adc $05]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$cbb5: sta ball_logical_x_93]
	OP_R_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$cbb7: lda ball_side_a1]
	GET_ADDRESS	0x06                       	| [$cbb9: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$cbbb: sta ball_side_a1]
	GET_ADDRESS	0x028c                     	| [$cbbd: lda $028c]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cbc0: sta screen_source_pointer_0010]
	GET_ADDRESS	0x0299                     	| [$cbc2: lda $0299]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cbc5: sta $11]
	bpl	l_cbcc                             	| [$cbc7: bpl $cbcc]
	jbsr	l_cf98                            	| [$cbc9: jsr $cf98]
l_cbcc:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cbcc: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cbce: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cbd0: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cbd2: sta $01]
	clr.b	d0                               	| [$cbd4: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cbd6: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x041f                     	| [$cbd8: lda $041f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$cbdb: sta $03]
	jbsr	l_d160                            	| [$cbdd: jsr $d160]
	GET_ADDRESS	0x0299                     	| [$cbe0: bit $0299]
	BIT	(a0)                               	| [...]
	bpl	l_cbe8                             	| [$cbe3: bpl $cbe8]
	jbsr	l_cff0                            	| [$cbe5: jsr $cff0]
l_cbe8:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$cbe8: lda ball_logical_y_bd]
	                           	| [$cbea: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cbeb: adc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cbed: sta $05]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$cbef: lda ball_kind_of_z_cb]
	GET_ADDRESS	0x06                       	| [$cbf1: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cbf3: sta $06]
	OP_R_ON_ZP_ADDRESS	move,0xc6,d0 |  [$cbf5: lda $c6]
	SET_XC_FLAGS                           	| [$cbf7: sec]
	SBC	0x05                               	| [$cbf8: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cbfa: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0xd4,d0 |  [$cbfc: lda $d4]
	SBC	0x06                               	| [$cbfe: sbc $06]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cc00: sta $06]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$cc02: lda ball_logical_y_bd]
	                           	| [$cc04: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cc05: adc $05]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$cc07: sta ball_logical_y_bd]
	OP_R_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$cc09: lda ball_kind_of_z_cb]
	GET_ADDRESS	0x06                       	| [$cc0b: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$cc0d: sta ball_kind_of_z_cb]
	GET_ADDRESS	0x03e0                     	| [$cc0f: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$cc12: cmp #$07]
	beq	l_cc1e                             	| [$cc14: beq $cc1e]
	cmp.b	#0x0a,d0                         	| [$cc16: cmp #$0a]
	* bcc=>bcs (cmp above)
	jcs	l_cc7a                             	| [$cc18: bcc $cc7a]
	cmp.b	#0x0c,d0                         	| [$cc1a: cmp #$0c]
	* bcs=>bcc
	jcc	l_cc7a                             	| [$cc1c: bcs $cc7a]
l_cc1e:
	GET_ADDRESS	0x02a6                     	| [$cc1e: lda $02a6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cc21: sta screen_source_pointer_0010]
	GET_ADDRESS	0x02b3                     	| [$cc23: lda $02b3]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cc26: sta $11]
	bpl	l_cc2d                             	| [$cc28: bpl $cc2d]
	jbsr	l_cf98                            	| [$cc2a: jsr $cf98]
l_cc2d:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cc2d: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cc2f: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cc31: lda $11]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cc33: sta $01]
	clr.b	d0                               	| [$cc35: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cc37: sta unpack_mode_and_misc_02]
	GET_ADDRESS	0x041f                     	| [$cc39: lda $041f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$cc3c: sta $03]
	jbsr	l_d160                            	| [$cc3e: jsr $d160]
	GET_ADDRESS	0x02b3                     	| [$cc41: bit $02b3]
	BIT	(a0)                               	| [...]
	bpl	l_cc49                             	| [$cc44: bpl $cc49]
	jbsr	l_cff0                            	| [$cc46: jsr $cff0]
l_cc49:
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$cc49: lda ball_logical_z_e7]
	                           	| [$cc4b: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cc4c: adc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cc4e: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$cc50: lda $f5]
	GET_ADDRESS	0x06                       	| [$cc52: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cc54: sta $06]
	OP_R_ON_ZP_ADDRESS	move,0xf0,d0 |  [$cc56: lda $f0]
	SET_XC_FLAGS                           	| [$cc58: sec]
	SBC	0x05                               	| [$cc59: sbc $05]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cc5b: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0xfe,d0 |  [$cc5d: lda $fe]
	SBC	0x06                               	| [$cc5f: sbc $06]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$cc61: sta $06]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$cc63: lda ball_logical_z_e7]
	                           	| [$cc65: clc]
	OP_R_ON_ZP_ADDRESS	add,0x05,d0 |  [$cc66: adc $05]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$cc68: sta ball_logical_z_e7]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$cc6a: lda $f5]
	GET_ADDRESS	0x06                       	| [$cc6c: adc $06]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$cc6e: sta $f5]
	clr.b	d0                               	| [$cc70: lda #$00]
	GET_ADDRESS	0x02c0                     	| [$cc72: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x02cd                     	| [$cc75: sta $02cd]
	move.b	d0,(a0)                         	| [...]
	bra	l_cce3                             	| [$cc78: beq $cce3]
l_cc7a:
	GET_ADDRESS	0x041f                     	| [$cc7a: lda $041f]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$cc7d: lsr a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cc7e: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cc80: lda $00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cc82: sta screen_source_pointer_0010]
	clr.b	d0                               	| [$cc84: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cc86: sta $11]
	move.b	#0x40,d0                        	| [$cc88: lda #$40]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$cc8a: sta multipurpose_12]
	clr.b	d0                               	| [$cc8c: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$cc8e: sta multipurpose_13]
	jbsr	l_d129                            	| [$cc90: jsr $d129]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$cc93: lda multipurpose_14]
	GET_ADDRESS	0x02a6                     	| [$cc95: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$cc98: lda $15]
	GET_ADDRESS	0x02b3                     	| [$cc9a: sta $02b3]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x041f                     	| [$cc9d: lda $041f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$cca0: sta multipurpose_12]
	clr.b	d0                               	| [$cca2: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$cca4: sta multipurpose_13]
	OP_R_ON_ZP_ADDRESS	move,0xe2,d0 |  [$cca6: lda $e2]
	SET_XC_FLAGS                           	| [$cca8: sec]
	SBC	0xd9                               	| [$cca9: sbc $d9]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ccab: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0xf0,d0 |  [$ccad: lda $f0]
	SBC	ball_logical_z_e7                  	| [$ccaf: sbc ball_logical_z_e7]
	PUSH_SR		| must preserve carry
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ccb1: sta $11]
	POP_SR		| must preserve carry
	jcs	l_ccc1                             	| [$ccb3: bcs $ccc1]
	jbsr	l_cf98                            	| [$ccb5: jsr $cf98]
	jbsr	l_d02e                            	| [$ccb8: jsr $d02e]
	jbsr	l_cf98                            	| [$ccbb: jsr $cf98]
	jra	l_ccc8                             	| [$ccbe: jra $ccc8]
l_ccc1:
	OP_R_ON_ZP_ADDRESS	or,screen_source_pointer_0010,d0 |  [$ccc1: ora screen_source_pointer_0010]
	beq	l_ccd9                             	| [$ccc3: beq $ccd9]
	jbsr	l_d02e                            	| [$ccc5: jsr $d02e]
l_ccc8:
	GET_ADDRESS	0x02a6                     	| [$ccc8: lda $02a6]
	move.b	(a0),d0                         	| [...]
	                           	| [$cccb: clc]
	OP_R_ON_ZP_ADDRESS	add,screen_source_pointer_0010,d0 |  [$cccc: adc screen_source_pointer_0010]
	                     	| [$ccce: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x02b3                     	| [$ccd1: lda $02b3]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x11                       	| [$ccd4: adc $11]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x02b3                     	| [$ccd6: sta $02b3]
	move.b	d0,(a0)                         	| [...]
l_ccd9:
	move.b	#0x40,d0                        	| [$ccd9: lda #$40]
	GET_ADDRESS	0x02c0                     	| [$ccdb: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$ccde: lda #$00]
	GET_ADDRESS	0x02cd                     	| [$cce0: sta $02cd]
	move.b	d0,(a0)                         	| [...]
l_cce3:
	rts                                    	| [$cce3: rts]

l_ccf5:
	OP_R_ON_ZP_ADDRESS	move,0x8e,d0 |  [$ccf5: lda $8e]
	SET_XC_FLAGS                           	| [$ccf7: sec]
	SBC	0x85                               	| [$ccf8: sbc $85]
	GET_ADDRESS	coin_per_credit_0416       	| [$ccfa: sta coin_per_credit_0416]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x9c,d0 |  [$ccfd: lda $9c]
	SBC	ball_logical_x_93                  	| [$ccff: sbc ball_logical_x_93]
	GET_ADDRESS	0x0417                     	| [$cd01: sta $0417]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xaa,d0 |  [$cd04: lda $aa]
	SBC	ball_side_a1                       	| [$cd06: sbc ball_side_a1]
	GET_ADDRESS	0x0418                     	| [$cd08: sta $0418]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xb8,d0 |  [$cd0b: lda $b8]
	SET_XC_FLAGS                           	| [$cd0d: sec]
	SBC	0xaf                               	| [$cd0e: sbc $af]
	GET_ADDRESS	0x0419                     	| [$cd10: sta $0419]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xc6,d0 |  [$cd13: lda $c6]
	SBC	ball_logical_y_bd                  	| [$cd15: sbc ball_logical_y_bd]
	GET_ADDRESS	0x041a                     	| [$cd17: sta $041a]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xd4,d0 |  [$cd1a: lda $d4]
	SBC	ball_kind_of_z_cb                  	| [$cd1c: sbc ball_kind_of_z_cb]
	GET_ADDRESS	0x041b                     	| [$cd1e: sta $041b]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xe2,d0 |  [$cd21: lda $e2]
	SET_XC_FLAGS                           	| [$cd23: sec]
	SBC	0xd9                               	| [$cd24: sbc $d9]
	GET_ADDRESS	0x041c                     	| [$cd26: sta $041c]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xf0,d0 |  [$cd29: lda $f0]
	SBC	ball_logical_z_e7                  	| [$cd2b: sbc ball_logical_z_e7]
	GET_ADDRESS	0x041d                     	| [$cd2d: sta $041d]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0xfe,d0 |  [$cd30: lda $fe]
	SBC	0xf5                               	| [$cd32: sbc $f5]
	GET_ADDRESS	0x041e                     	| [$cd34: sta $041e]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$cd37: rts]
l_cd38:
	move.b	#0x40,d0                        	| [$cd38: lda #$40]
	GET_ADDRESS	0x02c0                     	| [$cd3a: sta $02c0]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cd9f                            	| [$cd3d: jsr $cd9f]
	jbsr	l_cd9f                            	| [$cd40: jsr $cd9f]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$cd43: ldx current_object_index_4c]
	GET_ADDRESS	0x031a                     	| [$cd45: lda $031a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$cd48: and #$7f]
	cmp.b	#0x12,d0                         	| [$cd4a: cmp #$12]
	beq	l_cd56                             	| [$cd4c: beq $cd56]
	cmp.b	#0x15,d0                         	| [$cd4e: cmp #$15]
	beq	l_cd56                             	| [$cd50: beq $cd56]
	cmp.b	#0x16,d0                         	| [$cd52: cmp #$16]
	jne	l_cd59                             	| [$cd54: jne $cd59]
l_cd56:
	jbsr	l_cd9f                            	| [$cd56: jsr $cd9f]
l_cd59:
	GET_ADDRESS	0x02a6                     	| [$cd59: lda $02a6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cd5c: sta screen_source_pointer_0010]
	GET_ADDRESS	0x02b3                     	| [$cd5e: lda $02b3]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cd61: sta $11]
	jbsr	l_cf98                            	| [$cd63: jsr $cf98]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cd66: lda screen_source_pointer_0010]
	GET_ADDRESS	0x02a6                     	| [$cd68: sta $02a6]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cd6b: lda $11]
	GET_ADDRESS	0x02b3                     	| [$cd6d: sta $02b3]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cdad                            	| [$cd70: jsr $cdad]
	jbsr	l_c588                            	| [$cd73: jsr $c588]
	GET_ADDRESS	0x03e9                     	| [$cd76: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$cd79: and #$0f]
	cmp.b	#0x06,d0                         	| [$cd7b: cmp #$06]
	* bcs=>bcc
	jcc	l_cd85                             	| [$cd7d: bcs $cd85]
	 |  [$cd7f: lda $56]
	                        	| [$cd81: and #$df]
	OP_W_ON_ZP_ADDRESS	and,0x56,#0xdf |  [$cd83: sta $56]
l_cd85:
	GET_ADDRESS	0x0409                     	| [$cd85: lda $0409]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$cd88: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_cd9e                             	| [$cd8a: bcc $cd9e]
l_cd8c:
	move.b	#0x22,d0                        	| [$cd8c: lda #$22]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$cd8e: ldx current_object_index_4c]
	GET_ADDRESS	0x0327                     	| [$cd90: sta $0327, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x02,d0                        	| [$cd93: lda #$02]
	GET_ADDRESS	0x0333                     	| [$cd95: sta $0333, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0415                     	| [$cd98: lda $0415]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	player_direction_copy_0254 	| [$cd9b: sta player_direction_copy_0254, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_cd9e:
	rts                                    	| [$cd9e: rts]
l_cd9f:
	CLR_XC_FLAGS                           	| [$cd9f: clc]
	GET_ADDRESS	ball_x_speed_027f          	| [$cda0: bit ball_x_speed_027f]
	BIT	(a0)                               	| [...]
	bpl	l_cda6                             	| [$cda3: bpl $cda6]
	SET_XC_FLAGS                           	| [$cda5: sec]
l_cda6:
	GET_ADDRESS	ball_x_speed_027f          	| [$cda6: ror ball_x_speed_027f]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x0272                     	| [$cda9: ror $0272]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	rts                                    	| [$cdac: rts]
l_cdad:
	CLR_XC_FLAGS                           	| [$cdad: clc]
	GET_ADDRESS	0x0299                     	| [$cdae: bit $0299]
	BIT	(a0)                               	| [...]
	bpl	l_cdb4                             	| [$cdb1: bpl $cdb4]
	SET_XC_FLAGS                           	| [$cdb3: sec]
l_cdb4:
	GET_ADDRESS	0x0299                     	| [$cdb4: ror $0299]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x028c                     	| [$cdb7: ror $028c]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	rts                                    	| [$cdba: rts]
	* seems unreached!
*	CLR_XC_FLAGS                           	| [$cdbb: clc]
*	GET_ADDRESS	0x02b3                     	| [$cdbc: bit $02b3]
*	BIT	(a0)                               	| [...]
*	bpl	l_cdc2                             	| [$cdbf: bpl $cdc2]
*	SET_XC_FLAGS                           	| [$cdc1: sec]
*l_cdc2:
*	GET_ADDRESS	0x02b3                     	| [$cdc2: ror $02b3]
*	move.b	(a0),d4	| [...]
*	roxr.b	#1,d4                         	| [...]
*	move.b	d4,(a0)	| [...]
*	GET_ADDRESS	0x02a6                     	| [$cdc5: ror $02a6]
*	move.b	(a0),d4	| [...]
*	roxr.b	#1,d4                         	| [...]
*	move.b	d4,(a0)	| [...]
*	rts                                    	| [$cdc8: rts]
l_cdc9:
	GET_ADDRESS	0x0272                     	| [$cdc9: lda $0272]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cdcc: sta screen_source_pointer_0010]
	GET_ADDRESS	ball_x_speed_027f          	| [$cdce: lda ball_x_speed_027f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cdd1: sta $11]
	jbsr	l_cf98                            	| [$cdd3: jsr $cf98]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cdd6: lda screen_source_pointer_0010]
	GET_ADDRESS	0x0272                     	| [$cdd8: sta $0272]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cddb: lda $11]
	GET_ADDRESS	ball_x_speed_027f          	| [$cddd: sta ball_x_speed_027f]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$cde0: rts]
l_cde1:
	move.b	#0x03,d1                        	| [$cde1: ldx #$03]
	GET_ADDRESS	0x03a0                     	| [$cde3: lda $03a0, x] early load
l_cde3:
	move.b	(a0,d1.w),d0                    	| [...]
	beq	l_cdeb                             	| [$cde6: beq $cdeb]
	                     	| [$cde8: dec $03a0, x]
    subq.b	#1,(a0,d1.w)                 	| [...]
l_cdeb:
	subq.b	#1,d1                           	| [$cdeb: dex]
	bpl	l_cde3                             	| [$cdec: bpl $cde3]
	GET_ADDRESS	0x03ee                     	| [$cdee: lda $03ee]
	move.b	(a0),d0                         	| [...]
	beq	l_cdf6                             	| [$cdf1: beq $cdf6]
	                     	| [$cdf3: dec $03ee]
	subq.b	#1,(a0)                         	| [...]
l_cdf6:
	GET_ADDRESS	0x03f4                     	| [$cdf6: lda $03f4]
	move.b	(a0),d0                         	| [...]
	beq	l_cdfe                             	| [$cdf9: beq $cdfe]
	                     	| [$cdfb: dec $03f4]
	subq.b	#1,(a0)                         	| [...]
l_cdfe:
	GET_ADDRESS	0x03f9                     	| [$cdfe: lda $03f9]
	move.b	(a0),d0                         	| [...]
	beq	l_ce06                             	| [$ce01: beq $ce06]
	                     	| [$ce03: dec $03f9]
	subq.b	#1,(a0)                         	| [...]
l_ce06:
	GET_ADDRESS	0x03ff                     	| [$ce06: lda $03ff]
	move.b	(a0),d0                         	| [...]
	beq	l_ce0e                             	| [$ce09: beq $ce0e]
	                     	| [$ce0b: dec $03ff]
	subq.b	#1,(a0)                         	| [...]
l_ce0e:
	GET_ADDRESS	0x0406                     	| [$ce0e: lda $0406]
	move.b	(a0),d0                         	| [...]
	beq	l_ce16                             	| [$ce11: beq $ce16]
	                     	| [$ce13: dec $0406]
	subq.b	#1,(a0)                         	| [...]
l_ce16:
	rts                                    	| [$ce16: rts]
l_ce17:
	jra	l_ced8                             	| [$ce17: jra $ced8]
l_ce1a:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$ce1a: lda game_state_bits_46]
	and.b	#0x0f,d0                         	| [$ce1c: and #$0f]
	jne	l_ce17                             	| [$ce1e: jne $ce17]
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$ce20: lda $4f]
	bpl	l_ce17                             	| [$ce22: bpl $ce17]
	GET_ADDRESS	0x03e9                     	| [$ce24: lda $03e9]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$ce27: and #$0f]
	cmp.b	#0x0f,d0                         	| [$ce29: cmp #$0f]
	beq	l_ce17                             	| [$ce2b: beq $ce17]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$ce2d: lda $56]
	and.b	#0x10,d0                         	| [$ce2f: and #$10]
                                         | [$ce31: lsr a]
                                         | [$ce32: lsr a]
                                         | [$ce33: lsr a]
	lsr.b	#4,d0                            	| [$ce34: lsr a]
	move.b	d0,d2                           	| [$ce35: tay]
	GET_ADDRESS	0x0047                     	| [$ce36: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_ce54                             	| [$ce39: bpl $ce54]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$ce3b: lda $56]
	and.b	#0x2f,d0                         	| [$ce3d: and #$2f]
	cmp.b	#0x03,d0                         	| [$ce3f: cmp #$03]
	jne	l_ce54                             	| [$ce41: jne $ce54]
	GET_ADDRESS	0x0411                     	| [$ce43: lda $0411]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x01,d0                         	| [$ce46: eor #$01]
	move.b	d0,d1                           	| [$ce48: tax]
	GET_ADDRESS	0x030a                     	| [$ce49: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_ce54                             	| [$ce4c: bmi $ce54]
	OP_R_ON_ZP_ADDRESS	move,0x53,d0 |  [$ce4e: lda $53]
	cmp.b	#0x01,d0                         	| [$ce50: cmp #$01]
	beq	l_ce17                             	| [$ce52: beq $ce17]
l_ce54:
	clr.b	d1                               	| [$ce54: ldx #$00]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$ce56: lda $56]
	and.b	#0x10,d0                         	| [$ce58: and #$10]
                                         | [$ce5a: lsr a]
                                         | [$ce5b: lsr a]
                                         | [$ce5c: lsr a]
	lsr.b	#4,d0                            	| [$ce5d: lsr a]
	move.b	d0,d2                           	| [$ce5e: tay]
	GET_ADDRESS	0x0047                     	| [$ce5f: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_ce65                             	| [$ce62: bpl $ce65]
	addq.b	#1,d1                           	| [$ce64: inx]
l_ce65:
	OP_W_ON_ZP_ADDRESS	move,0x00,d1 |  [$ce65: stx $00]
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$ce67: lda $37]
	cmp.b	#0x02,d0                         	| [$ce69: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_ce71                             	| [$ce6b: bcc $ce71]
	move.b	#0x02,d0                        	| [$ce6d: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ce6f: sta $00]
l_ce71:
	GET_ADDRESS	0x03e0                     	| [$ce71: lda $03e0]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$ce74: asl a]
											| [$ce75: adc $03e0]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	GET_ADDRESS	0x00                       	| [$ce78: adc $00]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d2                           	| [$ce7a: tay]
	GET_ADDRESS	0xced9                     	| [$ce7b: lda $ced9, y]
	move.b	(a0,d2.w),d0                    	| [...]
	beq	l_ced8                             	| [$ce7e: beq $ced8]
	GET_ADDRESS	0x03ea                     	| [$ce80: lda $03ea]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9b,d0 |  [$ce83: sta $9b]
	                     	| [$ce85: lda $03eb]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xa9,d0 |  [$ce88: sta $a9]
	                     	| [$ce8a: lda $03ec]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc5,d0 |  [$ce8d: sta $c5]
	                     	| [$ce8f: lda $03ed]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xd3,d0 |  [$ce92: sta $d3]
	clr.b	d0                               	| [$ce94: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xef,d0 |  [$ce96: sta $ef]
	OP_W_ON_ZP_ADDRESS	move,0xfd,d0 |  [$ce98: sta $fd]
	GET_ADDRESS	0x03e0                     	| [$ce9a: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x08,d0                         	| [$ce9d: cmp #$08]
	beq	l_ceab                             	| [$ce9f: beq $ceab]
	cmp.b	#0x05,d0                         	| [$cea1: cmp #$05]
	jne	l_cebe                             	| [$cea3: jne $cebe]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$cea5: lda $56]
	and.b	#0x20,d0                         	| [$cea7: and #$20]
	jne	l_cebe                             	| [$cea9: jne $cebe]
l_ceab:
	GET_ADDRESS	0x03fb                     	| [$ceab: lda $03fb]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9b,d0 |  [$ceae: sta $9b]
	                     	| [$ceb0: lda $03fc]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xa9,d0 |  [$ceb3: sta $a9]
	                     	| [$ceb5: lda $03fd]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xc5,d0 |  [$ceb8: sta $c5]
	clr.b	d0                               	| [$ceba: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0xd3,d0 |  [$cebc: sta $d3]
l_cebe:
	move.b	#0x19,d0                        	| [$cebe: lda #$19]
	OP_W_ON_ZP_ADDRESS	move,0x71,d0 |  [$cec0: sta $71]
	move.b	#0x02,d0                        	| [$cec2: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x7f,d0 |  [$cec4: sta $7f]
	GET_ADDRESS	timer_07f5                 	| [$cec6: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$cec9: and #$04]
                                         | [$cecb: lsr a]
	lsr.b	#2,d0                            	| [$cecc: lsr a]
	OP_R_ON_ZP_ADDRESS	or,0x7f,d0 |  [$cecd: ora $7f]
	OP_W_ON_ZP_ADDRESS	move,0x7f,d0 |  [$cecf: sta $7f]
	move.b	#0x0c,d0                        	| [$ced1: lda #$0c]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$ced3: sta current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$ced5: jsr convert_logical_to_screen_coords_dff3]
l_ced8:
	rts                                    	| [$ced8: rts]

l_cf0c:
	move.b	#0x2f,d1                        	| [$cf0c: ldx #$2f]
l_cf0e:
	clr.b	d0                               	| [$cf0e: lda #$00]
	GET_ADDRESS	0x00                       	| [$cf10: sta $00, x]
l_cf10:
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$cf12: inx]
	jne	l_cf10                             	| [$cf13: jne $cf10]
	rts                                    	| [$cf15: rts]
l_cf16:
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cf16: sta unpack_mode_and_misc_02]
	clr.b	d0                               	| [$cf18: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cf1a: sta $00]
	move.b	#0x02,d0                        	| [$cf1c: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cf1e: sta $01]
	clr.b	d2                               	| [$cf20: ldy #$00]
l_cf22:
	NEW_ADDRESS
	GET_INDIRECT_ADDRESS	0x00              	| [$cf24: sta ($00), y] loading early
	clr.b	d0                               	| [$cf22: lda #$00]
l_cf24:
	move.b	d0,(a0,d2.w)                    	| [...]
	addq.b	#1,d2                           	| [$cf26: iny]
	jne	l_cf24                             	| [$cf27: jne $cf24]
	OP_W_ON_ZP_ADDRESS	addq,0x01,#1 |  [$cf29: inc $01]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$cf2b: lda $01]
	OP_R_ON_ZP_ADDRESS	cmp,unpack_mode_and_misc_02,d0 |  [$cf2d: cmp unpack_mode_and_misc_02]
	* bcc=>bcs (cmp above)
	jcs	l_cf22                             	| [$cf2f: bcc $cf22]
	jbsr	handle_cocktail_mode_d88f         	| [$cf31: jsr handle_cocktail_mode_d88f]
	rts                                    	| [$cf34: rts]

clear_screen_cf35:
	clr.b	d2                               	| [$cf35: ldy #$00]
	clr.b	d0                               	| [$cf37: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cf39: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$cf3b: sta multipurpose_12]
	move.b	#0x20,d0                        	| [$cf3d: lda #$20]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cf3f: sta $11]
	move.b	#0x30,d0                        	| [$cf41: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$cf43: sta multipurpose_13]
l_cf45:
	clr.b	d0                               	| [$cf45: lda #$00]
* clear the screen
l_cf47:
	GET_INDIRECT_UNCHECKED_ADDRESS	screen_source_pointer_0010	| [$cf47: sta (screen_source_pointer_0010), y] [unchecked_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_INDIRECT_UNCHECKED_ADDRESS	0x12              	| [$cf49: sta ($12), y] [video_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	add.w	d2,a0 | [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d2                           	| [$cf4b: iny]
	jne	l_cf47                             	| [$cf4c: jne $cf47]
	OP_W_ON_ZP_ADDRESS	addq,0x11,#1 |  [$cf4e: inc $11]
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_13,#1 |  [$cf50: inc multipurpose_13]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cf52: lda $11]
	cmp.b	#0x30,d0                         	| [$cf54: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_cf45                             	| [$cf56: bcc $cf45]
	rts                                    	| [$cf58: rts]

* put the F80000F8 pattern in the last unused
* sprite shadow ram entries
clear_rest_of_sprites_cf59:
	GET_ADDRESS	0x06da                     	| [$cf59: ldx $06da]
	move.b	(a0),d1                         	| [...]
l_cf5c:
	move.b	#0xf8,d0                        	| [$cf5c: lda #$f8] empty sprite
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$cf5e: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06de                     	| [$cf61: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$cf64: lda #$00] empty sprite
	GET_ADDRESS	0x06dc                     	| [$cf66: sta $06dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06dd                     	| [$cf69: sta $06dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
                                         | [$cf6c: inx]
                                         | [$cf6d: inx]
                                         | [$cf6e: inx]
	addq.b	#4,d1                           	| [$cf6f: inx]
	jne	l_cf5c                             	| [$cf70: jne $cf5c]
	rts                                    	| [$cf72: rts]

l_cf73:
	clr.b	d1                               	| [$cf73: ldx #$00]
l_cf75:
	clr.b	d0                               	| [$cf75: lda #$00]
	GET_ADDRESS	0x0801                     	| [$cf77: sta $0801, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06dc                     	| [$cf7a: sta $06dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0802                     	| [$cf7d: sta $0802, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06dd                     	| [$cf80: sta $06dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0xf8,d0                        	| [$cf83: lda #$f8]
	GET_ADDRESS	0x0800                     	| [$cf85: sta $0800, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$cf88: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0803                     	| [$cf8b: sta $0803, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06de                     	| [$cf8e: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
                                         | [$cf91: inx]
                                         | [$cf92: inx]
                                         | [$cf93: inx]
	addq.b	#4,d1                           	| [$cf94: inx]
	jne	l_cf75                             	| [$cf95: jne $cf75]
	rts                                    	| [$cf97: rts]

l_cf98:
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cf98: lda screen_source_pointer_0010]
	not.b	d0                               	| [$cf9a: eor #$ff]
	                           	| [$cf9c: clc]
	add.b	#0x01,d0                        	| [$cf9d: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cf9f: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cfa1: lda $11]
	not.b	d0                               	| [$cfa3: eor #$ff]
	moveq	#0x00,d4	| [$cfa5: adc #$00]
	addx.b	d4,d0                        	| [$cfa5: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cfa7: sta $11]
	rts                                    	| [$cfa9: rts]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$cfaa: lda multipurpose_14]
	not.b	d0                               	| [$cfac: eor #$ff]
	                           	| [$cfae: clc]
	add.b	#0x01,d0                        	| [$cfaf: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$cfb1: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$cfb3: lda $15]
	not.b	d0                               	| [$cfb5: eor #$ff]
	moveq	#0x00,d4	| [$cfb7: adc #$00]
	addx.b	d4,d0                        	| [$cfb7: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$cfb9: sta $15]
	rts                                    	| [$cfbb: rts]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cfbc: lda $00]
	not.b	d0                               	| [$cfbe: eor #$ff]
	                           	| [$cfc0: clc]
	add.b	#0x01,d0                        	| [$cfc1: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cfc3: sta $00]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cfc5: lda screen_source_pointer_0010]
	not.b	d0                               	| [$cfc7: eor #$ff]
	moveq	#0x00,d4	| [$cfc9: adc #$00]
	addx.b	d4,d0                        	| [$cfc9: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$cfcb: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$cfcd: lda $11]
	not.b	d0                               	| [$cfcf: eor #$ff]
	moveq	#0x00,d4	| [$cfd1: adc #$00]
	addx.b	d4,d0                        	| [$cfd1: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$cfd3: sta $11]
	rts                                    	| [$cfd5: rts]

* < compute stuff on $00,$01,$02 (updated)
l_cfd6:
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$cfd6: lda $00]
	not.b	d0                               	| [$cfd8: eor #$ff]
	                           	| [$cfda: clc]
	add.b	#0x01,d0                        	| [$cfdb: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$cfdd: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$cfdf: lda $01]
	not.b	d0                               	| [$cfe1: eor #$ff]
	moveq	#0x00,d4	| [$cfe3: adc #$00]
	addx.b	d4,d0                        	| [$cfe3: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$cfe5: sta $01]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cfe7: lda unpack_mode_and_misc_02]
	not.b	d0                               	| [$cfe9: eor #$ff]
	moveq	#0x00,d4	| [$cfeb: adc #$00]
	addx.b	d4,d0                        	| [$cfeb: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$cfed: sta unpack_mode_and_misc_02]
	rts                                    	| [$cfef: rts]

l_cff0:
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$cff0: lda $04]
	not.b	d0                               	| [$cff2: eor #$ff]
	                           	| [$cff4: clc]
	add.b	#0x01,d0                        	| [$cff5: adc #$01]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$cff7: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$cff9: lda $05]
	not.b	d0                               	| [$cffb: eor #$ff]
	moveq	#0x00,d4	| [$cffd: adc #$00]
	addx.b	d4,d0                        	| [$cffd: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$cfff: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$d001: lda $06]
	not.b	d0                               	| [$d003: eor #$ff]
	moveq	#0x00,d4	| [$d005: adc #$00]
	addx.b	d4,d0                        	| [$d005: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$d007: sta $06]
	rts                                    	| [$d009: rts]

* < A: pseudo-random
pseudo_random_d00a:
	.ifne	OPT_FIXED_RANDOM

	move.b #OPT_FIXED_RANDOM_VALUE,d0
	rts
	.endif
	OP_W_ON_ZP_ADDRESS	move,0x1a,d2 |  [$d00a: sty $1a] save Y
	move.b	#0x04,d2                        	| [$d00c: ldy #$04]
	OP_W_ON_ZP_ADDRESS	addq,random_index_2b,#1 |  [$d00e: inc random_index_2b]
	OP_W_ON_ZP_ADDRESS	addq,random_index_2d,#1 |  [$d010: inc random_index_2d]
* do the following 4 times
l_d012:
	GET_ADDRESS	random_gen_2c              	| [$d012: ror random_gen_2c]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	random_index_2d            	| [$d014: ror random_index_2d]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	random_gen_2e              	| [$d016: ror random_gen_2e]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	jcs	l_d020                             	| [$d018: bcs $d020]
	OP_R_ON_ZP_ADDRESS	move,random_index_2d,d0 |  [$d01a: lda random_index_2d]
	GET_ADDRESS	random_index_2b            	| [$d01c: adc random_index_2b]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,random_index_2d,d0 |  [$d01e: sta random_index_2d]
l_d020:
	PUSH_SR  | preserve X
	subq.b	#1,d2                           	| [$d020: dey]
	POP_SR  | restore X
	tst.b	d2   | check Z
	jne	l_d012                             	| [$d021: jne $d012]
	OP_R_ON_ZP_ADDRESS	move,random_gen_2c,d0 |  [$d023: lda random_gen_2c]
	GET_ADDRESS	random_gen_2e              	| [$d025: adc random_gen_2e]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,random_gen_2e,d0 |  [$d027: sta random_gen_2e]
	GET_ADDRESS	random_index_2d            	| [$d029: adc random_index_2d]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x1a,d2 |  [$d02b: ldy $1a] restore Y
	rts                                    	| [$d02d: rts]

l_d02e:
	move.b	d1,d0                           	| [$d02e: txa]
	movem.w	d0,-(sp)                       	| [$d02f: pha]
	move.b	d2,d0                           	| [$d030: tya]
	movem.w	d0,-(sp)                       	| [$d031: pha]
	clr.b	d0                               	| [$d032: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$d034: sta $15]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d036: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$d038: lda multipurpose_12]
	OP_R_ON_ZP_ADDRESS	or,multipurpose_13,d0 |  [$d03a: ora multipurpose_13]
	jne	l_d044                             	| [$d03c: jne $d044]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$d03e: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$d040: sta $11]
	beq	l_d081                             	| [$d042: beq $d081]
l_d044:
	move.b	#0x10,d1                        	| [$d044: ldx #$10]
	CLR_XC_FLAGS                           	| [$d046: clc]
l_d047:
	GET_ADDRESS	screen_source_pointer_0010 	| [$d047: rol screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x11                       	| [$d049: rol $11]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	scs	d6
	move.b	d4,(a0)	| [...]
	subq.b	#1,d1                           	| [$d04b: dex]
	beq	l_d081                             	| [$d04c: beq $d081]
	CLR_XC_FLAGS
	tst.b	d6  | clear carry/x then test 'carry'
	beq	l_d047                             	| [$d04e: bcc $d047]
	 |  [$d050: lda screen_source_pointer_0010]
	                        	| [$d052: ora #$01]
	OP_W_ON_ZP_ADDRESS	or,screen_source_pointer_0010,#0x01 |  [$d054: sta screen_source_pointer_0010]
	addq.b	#1,d1                           	| [$d056: inx]
	OP_W_ON_ZP_ADDRESS	move,0x00,d1 |  [$d057: stx $00]
	SET_XC_FLAGS   | re-set carry/X then unconditional branch
	bra	l_d060                             	| [$d059: bcs $d060]
l_d05b:
	SET_XC_FLAGS                           	| [$d05b: sec]
	GET_ADDRESS	screen_source_pointer_0010 	| [$d05c: rol screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x11                       	| [$d05e: rol $11]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
l_d060:
	GET_ADDRESS	multipurpose_14            	| [$d060: rol multipurpose_14]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x15                       	| [$d062: rol $15]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d1 |  [$d064: ldx multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d2 |  [$d066: ldy $15]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d068: lda multipurpose_14]
	SET_XC_FLAGS                           	| [$d06a: sec]
	SBC	multipurpose_12                    	| [$d06b: sbc multipurpose_12]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d06d: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$d06f: lda $15]
	SBC	multipurpose_13                    	| [$d071: sbc multipurpose_13]
	PUSH_SR		| preserve carry
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$d073: sta $15]
	POP_SR		| preserve carry
	jcs	l_d07d                             	| [$d075: bcs $d07d]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d1 |  [$d077: stx multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,0x15,d2 |  [$d079: sty $15]
	OP_W_ON_ZP_ADDRESS	subq,screen_source_pointer_0010,#1 |  [$d07b: dec screen_source_pointer_0010]
l_d07d:
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$d07d: dec $00]
	jne	l_d05b                             	| [$d07f: jne $d05b]
l_d081:
	move.w	(sp)+,d0                        	| [$d081: pla]
	move.b	d0,d2                           	| [$d082: tay]
	move.w	(sp)+,d0                        	| [$d083: pla]
	move.b	d0,d1                           	| [$d084: tax]
	rts                                    	| [$d085: rts]
l_d086:
	move.b	d1,d0                           	| [$d086: txa]
	movem.w	d0,-(sp)                       	| [$d087: pha]
	move.b	d2,d0                           	| [$d088: tya]
	movem.w	d0,-(sp)                       	| [$d089: pha]
	clr.b	d0                               	| [$d08a: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$d08c: sta $03]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$d08e: sta $04]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$d090: sta $05]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$d092: lda screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	or,0x11,d0 |  [$d094: ora $11]
	jne	l_d0a0                             	| [$d096: jne $d0a0]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$d098: sta $00]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$d09a: sta $01]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$d09c: sta unpack_mode_and_misc_02]
	bra	l_d0f9                             	| [$d09e: beq $d0f9]
l_d0a0:
	move.b	#0x18,d1                        	| [$d0a0: ldx #$18]
	CLR_XC_FLAGS                           	| [$d0a2: clc]
l_d0a3:
	GET_ADDRESS	0x00                       	| [$d0a3: rol $00]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x01                       	| [$d0a5: rol $01]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$d0a7: rol unpack_mode_and_misc_02]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	scs	d6
	move.b	d4,(a0)	| [...]
	subq.b	#1,d1                           	| [$d0a9: dex]
	beq	l_d0f9                             	| [$d0aa: beq $d0f9]
* testing carry clear from rol!
	CLR_XC_FLAGS
	tst.b	d6  | clear carry/x then test 'carry'
	beq	l_d0a3                             	| [$d0ac: bcc $d0a3]
	 |  [$d0ae: lda $00]
	                         	| [$d0b0: ora #$01]
	OP_W_ON_ZP_ADDRESS	or,0x00,#0x01 |  [$d0b2: sta $00]
	addq.b	#1,d1                           	| [$d0b4: inx]
	OP_W_ON_ZP_ADDRESS	move,0x0f,d1 |  [$d0b5: stx $0f]
* so this branches all the time as the carry is set
	SET_XC_FLAGS   | re-set carry/X then unconditional branch
	bra	l_d0c0                             	| [$d0b7: bcs $d0c0]
l_d0b9:
	SET_XC_FLAGS                           	| [$d0b9: sec]
	GET_ADDRESS	0x00                       	| [$d0ba: rol $00]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x01                       	| [$d0bc: rol $01]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$d0be: rol unpack_mode_and_misc_02]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
l_d0c0:
	GET_ADDRESS	0x03                       	| [$d0c0: rol $03]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x04                       	| [$d0c2: rol $04]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x05                       	| [$d0c4: rol $05]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$d0c6: lda $03]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$d0c8: sta $06]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$d0ca: lda $04]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$d0cc: sta unknown_07]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$d0ce: lda $05]
	OP_W_ON_ZP_ADDRESS	move,0x08,d0 |  [$d0d0: sta $08]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$d0d2: lda $03]
	SET_XC_FLAGS                           	| [$d0d4: sec]
	SBC	screen_source_pointer_0010         	| [$d0d5: sbc screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$d0d7: sta $03]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$d0d9: lda $04]
	SBC	0x11                               	| [$d0db: sbc $11]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$d0dd: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$d0df: lda $05]
	SBC_IMM	0x00                           	| [$d0e1: sbc #$00]
	PUSH_SR  | preserve carry
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$d0e3: sta $05]
	POP_SR  | preserve carry
	jcs	l_d0f5                             	| [$d0e5: bcs $d0f5]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$d0e7: lda $06]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$d0e9: sta $03]
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$d0eb: lda unknown_07]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$d0ed: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x08,d0 |  [$d0ef: lda $08]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$d0f1: sta $05]
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$d0f3: dec $00]
l_d0f5:
	OP_W_ON_ZP_ADDRESS	subq,0x0f,#1 |  [$d0f5: dec $0f]
	jne	l_d0b9                             	| [$d0f7: jne $d0b9]
l_d0f9:
	move.w	(sp)+,d0                        	| [$d0f9: pla]
	move.b	d0,d2                           	| [$d0fa: tay]
	move.w	(sp)+,d0                        	| [$d0fb: pla]
	move.b	d0,d1                           	| [$d0fc: tax]
	rts                                    	| [$d0fd: rts]

* seems unreached, not in jump tables, not reached when playing
	movem.w	d0,-(sp)                       	| [$d0fe: pha] [disabled]
	move.b	d1,d0                           	| [$d0ff: txa] [disabled]
	movem.w	d0,-(sp)                       	| [$d100: pha] [disabled]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$d101: lda $01] [disabled]
	movem.w	d0,-(sp)                       	| [$d103: pha] [disabled]
	clr.b	d0                               	| [$d104: lda #$00] [disabled]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$d106: sta $01] [disabled]
	move.b	#0x10,d1                        	| [$d108: ldx #$10] [disabled]
	CLR_XC_FLAGS                           	| [$d10a: clc] [disabled]
	GET_ADDRESS	screen_source_pointer_0010 	| [$d10b: rol screen_source_pointer_0010] [disabled]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x11                       	| [$d10d: rol $11] [disabled]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
l_d10f:
	GET_ADDRESS	0x01                       	| [$d10f: rol $01] [disabled]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$d111: lda $01] [disabled]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$d113: cmp $00] [disabled]
	* bcc=>bcs (cmp above)
	jcs	l_d11b                             	| [$d115: bcc $d11b] [disabled]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC	0x00                               	| [$d117: sbc $00] [disabled]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$d119: sta $01] [disabled]
l_d11b:
	GET_ADDRESS	screen_source_pointer_0010 	| [$d11b: rol screen_source_pointer_0010] [disabled]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x11                       	| [$d11d: rol $11] [disabled]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	subq.b	#1,d1                           	| [$d11f: dex] [disabled]
	jne	l_d10f                             	| [$d120: jne $d10f] [disabled]
	move.w	(sp)+,d0                        	| [$d122: pla] [disabled]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$d123: sta $01] [disabled]
	move.w	(sp)+,d0                        	| [$d125: pla] [disabled]
	move.b	d0,d1                           	| [$d126: tax] [disabled]
	move.w	(sp)+,d0                        	| [$d127: pla] [disabled]
	rts                                    	| [$d128: rts] [disabled]

l_d129:
	move.b	d1,d0                           	| [$d129: txa]
	movem.w	d0,-(sp)                       	| [$d12a: pha]
	move.b	d2,d0                           	| [$d12b: tya]
	movem.w	d0,-(sp)                       	| [$d12c: pha]
	clr.b	d0                               	| [$d12d: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d12f: sta multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$d131: sta $15]
l_d133:
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$d133: lda $11]
	OP_R_ON_ZP_ADDRESS	or,screen_source_pointer_0010,d0 |  [$d135: ora screen_source_pointer_0010]
	beq	l_d15a                             	| [$d137: beq $d15a]
	GET_ADDRESS	0x11                       	| [$d139: lsr $11]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	screen_source_pointer_0010 	| [$d13b: ror screen_source_pointer_0010]
	move.b	(a0),d4	| [...]
	roxr.b	#1,d4                         	| [...]
	PUSH_SR   | preserve carry
	move.b	d4,(a0)	| [...]
	POP_SR   | preserve carry
	jcc	l_d14e                             	| [$d13d: bcc $d14e]
	                           	| [$d13f: clc]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d140: lda multipurpose_14]
	GET_ADDRESS	multipurpose_12            	| [$d142: adc multipurpose_12]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d144: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$d146: lda $15]
	GET_ADDRESS	multipurpose_13            	| [$d148: adc multipurpose_13]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR    | preserve carry
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$d14a: sta $15]
	POP_SR    | preserve carry
	jcs	l_d154                             	| [$d14c: bcs $d154]
l_d14e:
	GET_ADDRESS	multipurpose_12            	| [$d14e: asl multipurpose_12]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	multipurpose_13            	| [$d150: rol multipurpose_13]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR   | preserve carry
	move.b	d4,(a0)	| [...]
	POP_SR   | preserve carry
	jcc	l_d133                             	| [$d152: bcc $d133]
l_d154:
	move.w	(sp)+,d0                        	| [$d154: pla]
	move.b	d0,d2                           	| [$d155: tay]
	move.w	(sp)+,d0                        	| [$d156: pla]
	move.b	d0,d1                           	| [$d157: tax]
	SET_XC_FLAGS                           	| [$d158: sec]
	rts                                    	| [$d159: rts]
l_d15a:
	move.w	(sp)+,d0                        	| [$d15a: pla]
	move.b	d0,d2                           	| [$d15b: tay]
	move.w	(sp)+,d0                        	| [$d15c: pla]
	move.b	d0,d1                           	| [$d15d: tax]
	CLR_XC_FLAGS                           	| [$d15e: clc]
	rts                                    	| [$d15f: rts]
l_d160:
	move.b	d1,d0                           	| [$d160: txa]
	movem.w	d0,-(sp)                       	| [$d161: pha]
	move.b	d2,d0                           	| [$d162: tya]
	movem.w	d0,-(sp)                       	| [$d163: pha]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$d164: lda $00]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$d166: sta unknown_07]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$d168: lda $01]
	OP_W_ON_ZP_ADDRESS	move,0x08,d0 |  [$d16a: sta $08]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$d16c: lda unpack_mode_and_misc_02]
	OP_W_ON_ZP_ADDRESS	move,0x09,d0 |  [$d16e: sta $09]
	clr.b	d0                               	| [$d170: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$d172: sta $04]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$d174: sta $05]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$d176: sta $06]
l_d178:
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$d178: lda $03]
	beq	l_d1a3                             	| [$d17a: beq $d1a3]
	GET_ADDRESS	0x03                       	| [$d17c: lsr $03]
	move.b	(a0),d4	| [...]
	lsr.b	#1,d4                          	| [...]
	PUSH_SR    | preserve carry
	move.b	d4,(a0)	| [...]
	POP_SR    | preserve carry
	jcc	l_d195                             	| [$d17e: bcc $d195]
	                           	| [$d180: clc]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$d181: lda $04]
	GET_ADDRESS	unknown_07                 	| [$d183: adc unknown_07]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$d185: sta $04]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$d187: lda $05]
	GET_ADDRESS	0x08                       	| [$d189: adc $08]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$d18b: sta $05]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$d18d: lda $06]
	GET_ADDRESS	0x09                       	| [$d18f: adc $09]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	PUSH_SR   | preserve carry
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$d191: sta $06]
	POP_SR   | preserve carry
	jcs	l_d19d                             	| [$d193: bcs $d19d]
l_d195:
	GET_ADDRESS	unknown_07                 	| [$d195: asl unknown_07]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x08                       	| [$d197: rol $08]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	move.b	d4,(a0)	| [...]
	GET_ADDRESS	0x09                       	| [$d199: rol $09]
	move.b	(a0),d4	| [...]
	roxl.b	#1,d4                         	| [...]
	PUSH_SR   | preserve carry
	move.b	d4,(a0)	| [...]
	POP_SR   | preserve carry
	jcc	l_d178                             	| [$d19b: bcc $d178]
l_d19d:
	move.w	(sp)+,d0                        	| [$d19d: pla]
	move.b	d0,d2                           	| [$d19e: tay]
	move.w	(sp)+,d0                        	| [$d19f: pla]
	move.b	d0,d1                           	| [$d1a0: tax]
	SET_XC_FLAGS                           	| [$d1a1: sec]
	rts                                    	| [$d1a2: rts]

l_d1a3:
	move.w	(sp)+,d0                        	| [$d1a3: pla]
	move.b	d0,d2                           	| [$d1a4: tay]
	move.w	(sp)+,d0                        	| [$d1a5: pla]
	move.b	d0,d1                           	| [$d1a6: tax]
	CLR_XC_FLAGS                           	| [$d1a7: clc]
	rts                                    	| [$d1a8: rts]
l_d1a9:
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$d1a9: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$d1ab: sta multipurpose_12]
	clr.b	d0                               	| [$d1ad: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$d1af: sta $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$d1b1: sta multipurpose_13]
	jbsr	l_d129                            	| [$d1b3: jsr $d129]
	rts                                    	| [$d1b6: rts]
	
copy_shadow_sprites_d1b7:
	GET_ADDRESS	sprite_ram_0800
	move.l	a0,a1
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$d1b7: lda sprite_shadow_ram_06db]
	.ifdef	MC68020
	move.w	#0xF,d0
	* source is disaligned but 68020 allows it
0:
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	dbf		d0,0b
	.else
	move.w	#0x3F,d0
0:
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	dbf		d0,0b
	.endif
	rts

* old unoptimized code	
*	GET_ADDRESS	sprite_shadow_ram_06db     	| [$d1b7: lda sprite_shadow_ram_06db]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0800                     	| [$d1ba: sta $0800]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06dc                     	| [$d1bd: lda $06dc]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0801                     	| [$d1c0: sta $0801]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06dd                     	| [$d1c3: lda $06dd]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0802                     	| [$d1c6: sta $0802]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06de                     	| [$d1c9: lda $06de]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0803                     	| [$d1cc: sta $0803]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06df                     	| [$d1cf: lda $06df]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0804                     	| [$d1d2: sta $0804]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e0                     	| [$d1d5: lda $06e0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0805                     	| [$d1d8: sta $0805]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e1                     	| [$d1db: lda $06e1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0806                     	| [$d1de: sta $0806]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e2                     	| [$d1e1: lda $06e2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0807                     	| [$d1e4: sta $0807]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e3                     	| [$d1e7: lda $06e3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0808                     	| [$d1ea: sta $0808]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e4                     	| [$d1ed: lda $06e4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0809                     	| [$d1f0: sta $0809]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e5                     	| [$d1f3: lda $06e5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080a                     	| [$d1f6: sta $080a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e6                     	| [$d1f9: lda $06e6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080b                     	| [$d1fc: sta $080b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e7                     	| [$d1ff: lda $06e7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080c                     	| [$d202: sta $080c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e8                     	| [$d205: lda $06e8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080d                     	| [$d208: sta $080d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06e9                     	| [$d20b: lda $06e9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080e                     	| [$d20e: sta $080e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ea                     	| [$d211: lda $06ea]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x080f                     	| [$d214: sta $080f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06eb                     	| [$d217: lda $06eb]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0810                     	| [$d21a: sta $0810]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ec                     	| [$d21d: lda $06ec]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0811                     	| [$d220: sta $0811]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ed                     	| [$d223: lda $06ed]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0812                     	| [$d226: sta $0812]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ee                     	| [$d229: lda $06ee]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0813                     	| [$d22c: sta $0813]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ef                     	| [$d22f: lda $06ef]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0814                     	| [$d232: sta $0814]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f0                     	| [$d235: lda $06f0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0815                     	| [$d238: sta $0815]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f1                     	| [$d23b: lda $06f1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0816                     	| [$d23e: sta $0816]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f2                     	| [$d241: lda $06f2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0817                     	| [$d244: sta $0817]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f3                     	| [$d247: lda $06f3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0818                     	| [$d24a: sta $0818]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f4                     	| [$d24d: lda $06f4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0819                     	| [$d250: sta $0819]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f5                     	| [$d253: lda $06f5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081a                     	| [$d256: sta $081a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f6                     	| [$d259: lda $06f6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081b                     	| [$d25c: sta $081b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f7                     	| [$d25f: lda $06f7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081c                     	| [$d262: sta $081c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f8                     	| [$d265: lda $06f8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081d                     	| [$d268: sta $081d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06f9                     	| [$d26b: lda $06f9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081e                     	| [$d26e: sta $081e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06fa                     	| [$d271: lda $06fa]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x081f                     	| [$d274: sta $081f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06fb                     	| [$d277: lda $06fb]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0820                     	| [$d27a: sta $0820]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06fc                     	| [$d27d: lda $06fc]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0821                     	| [$d280: sta $0821]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06fd                     	| [$d283: lda $06fd]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0822                     	| [$d286: sta $0822]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06fe                     	| [$d289: lda $06fe]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0823                     	| [$d28c: sta $0823]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x06ff                     	| [$d28f: lda $06ff]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0824                     	| [$d292: sta $0824]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0700                     	| [$d295: lda $0700]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0825                     	| [$d298: sta $0825]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0701                     	| [$d29b: lda $0701]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0826                     	| [$d29e: sta $0826]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0702                     	| [$d2a1: lda $0702]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0827                     	| [$d2a4: sta $0827]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0703                     	| [$d2a7: lda $0703]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0828                     	| [$d2aa: sta $0828]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0704                     	| [$d2ad: lda $0704]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0829                     	| [$d2b0: sta $0829]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0705                     	| [$d2b3: lda $0705]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082a                     	| [$d2b6: sta $082a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0706                     	| [$d2b9: lda $0706]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082b                     	| [$d2bc: sta $082b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0707                     	| [$d2bf: lda $0707]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082c                     	| [$d2c2: sta $082c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0708                     	| [$d2c5: lda $0708]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082d                     	| [$d2c8: sta $082d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0709                     	| [$d2cb: lda $0709]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082e                     	| [$d2ce: sta $082e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070a                     	| [$d2d1: lda $070a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x082f                     	| [$d2d4: sta $082f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070b                     	| [$d2d7: lda $070b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0830                     	| [$d2da: sta $0830]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070c                     	| [$d2dd: lda $070c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0831                     	| [$d2e0: sta $0831]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070d                     	| [$d2e3: lda $070d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0832                     	| [$d2e6: sta $0832]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070e                     	| [$d2e9: lda $070e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0833                     	| [$d2ec: sta $0833]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x070f                     	| [$d2ef: lda $070f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0834                     	| [$d2f2: sta $0834]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0710                     	| [$d2f5: lda $0710]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0835                     	| [$d2f8: sta $0835]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0711                     	| [$d2fb: lda $0711]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0836                     	| [$d2fe: sta $0836]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0712                     	| [$d301: lda $0712]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0837                     	| [$d304: sta $0837]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0713                     	| [$d307: lda $0713]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0838                     	| [$d30a: sta $0838]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0714                     	| [$d30d: lda $0714]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0839                     	| [$d310: sta $0839]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0715                     	| [$d313: lda $0715]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083a                     	| [$d316: sta $083a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0716                     	| [$d319: lda $0716]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083b                     	| [$d31c: sta $083b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0717                     	| [$d31f: lda $0717]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083c                     	| [$d322: sta $083c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0718                     	| [$d325: lda $0718]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083d                     	| [$d328: sta $083d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0719                     	| [$d32b: lda $0719]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083e                     	| [$d32e: sta $083e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071a                     	| [$d331: lda $071a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x083f                     	| [$d334: sta $083f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071b                     	| [$d337: lda $071b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0840                     	| [$d33a: sta $0840]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071c                     	| [$d33d: lda $071c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0841                     	| [$d340: sta $0841]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071d                     	| [$d343: lda $071d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0842                     	| [$d346: sta $0842]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071e                     	| [$d349: lda $071e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0843                     	| [$d34c: sta $0843]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x071f                     	| [$d34f: lda $071f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0844                     	| [$d352: sta $0844]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0720                     	| [$d355: lda $0720]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0845                     	| [$d358: sta $0845]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0721                     	| [$d35b: lda $0721]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0846                     	| [$d35e: sta $0846]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0722                     	| [$d361: lda $0722]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0847                     	| [$d364: sta $0847]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0723                     	| [$d367: lda $0723]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0848                     	| [$d36a: sta $0848]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0724                     	| [$d36d: lda $0724]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0849                     	| [$d370: sta $0849]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0725                     	| [$d373: lda $0725]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084a                     	| [$d376: sta $084a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0726                     	| [$d379: lda $0726]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084b                     	| [$d37c: sta $084b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0727                     	| [$d37f: lda $0727]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084c                     	| [$d382: sta $084c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0728                     	| [$d385: lda $0728]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084d                     	| [$d388: sta $084d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0729                     	| [$d38b: lda $0729]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084e                     	| [$d38e: sta $084e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072a                     	| [$d391: lda $072a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x084f                     	| [$d394: sta $084f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072b                     	| [$d397: lda $072b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0850                     	| [$d39a: sta $0850]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072c                     	| [$d39d: lda $072c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0851                     	| [$d3a0: sta $0851]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072d                     	| [$d3a3: lda $072d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0852                     	| [$d3a6: sta $0852]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072e                     	| [$d3a9: lda $072e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0853                     	| [$d3ac: sta $0853]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x072f                     	| [$d3af: lda $072f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0854                     	| [$d3b2: sta $0854]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0730                     	| [$d3b5: lda $0730]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0855                     	| [$d3b8: sta $0855]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0731                     	| [$d3bb: lda $0731]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0856                     	| [$d3be: sta $0856]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0732                     	| [$d3c1: lda $0732]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0857                     	| [$d3c4: sta $0857]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0733                     	| [$d3c7: lda $0733]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0858                     	| [$d3ca: sta $0858]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0734                     	| [$d3cd: lda $0734]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0859                     	| [$d3d0: sta $0859]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0735                     	| [$d3d3: lda $0735]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085a                     	| [$d3d6: sta $085a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0736                     	| [$d3d9: lda $0736]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085b                     	| [$d3dc: sta $085b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0737                     	| [$d3df: lda $0737]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085c                     	| [$d3e2: sta $085c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0738                     	| [$d3e5: lda $0738]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085d                     	| [$d3e8: sta $085d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0739                     	| [$d3eb: lda $0739]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085e                     	| [$d3ee: sta $085e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073a                     	| [$d3f1: lda $073a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x085f                     	| [$d3f4: sta $085f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073b                     	| [$d3f7: lda $073b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0860                     	| [$d3fa: sta $0860]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073c                     	| [$d3fd: lda $073c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0861                     	| [$d400: sta $0861]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073d                     	| [$d403: lda $073d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0862                     	| [$d406: sta $0862]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073e                     	| [$d409: lda $073e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0863                     	| [$d40c: sta $0863]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x073f                     	| [$d40f: lda $073f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0864                     	| [$d412: sta $0864]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0740                     	| [$d415: lda $0740]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0865                     	| [$d418: sta $0865]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0741                     	| [$d41b: lda $0741]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0866                     	| [$d41e: sta $0866]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0742                     	| [$d421: lda $0742]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0867                     	| [$d424: sta $0867]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0743                     	| [$d427: lda $0743]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0868                     	| [$d42a: sta $0868]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0744                     	| [$d42d: lda $0744]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0869                     	| [$d430: sta $0869]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0745                     	| [$d433: lda $0745]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086a                     	| [$d436: sta $086a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0746                     	| [$d439: lda $0746]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086b                     	| [$d43c: sta $086b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0747                     	| [$d43f: lda $0747]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086c                     	| [$d442: sta $086c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0748                     	| [$d445: lda $0748]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086d                     	| [$d448: sta $086d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0749                     	| [$d44b: lda $0749]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086e                     	| [$d44e: sta $086e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074a                     	| [$d451: lda $074a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x086f                     	| [$d454: sta $086f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074b                     	| [$d457: lda $074b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0870                     	| [$d45a: sta $0870]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074c                     	| [$d45d: lda $074c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0871                     	| [$d460: sta $0871]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074d                     	| [$d463: lda $074d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0872                     	| [$d466: sta $0872]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074e                     	| [$d469: lda $074e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0873                     	| [$d46c: sta $0873]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x074f                     	| [$d46f: lda $074f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0874                     	| [$d472: sta $0874]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0750                     	| [$d475: lda $0750]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0875                     	| [$d478: sta $0875]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0751                     	| [$d47b: lda $0751]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0876                     	| [$d47e: sta $0876]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0752                     	| [$d481: lda $0752]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0877                     	| [$d484: sta $0877]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0753                     	| [$d487: lda $0753]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0878                     	| [$d48a: sta $0878]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0754                     	| [$d48d: lda $0754]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0879                     	| [$d490: sta $0879]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0755                     	| [$d493: lda $0755]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087a                     	| [$d496: sta $087a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0756                     	| [$d499: lda $0756]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087b                     	| [$d49c: sta $087b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0757                     	| [$d49f: lda $0757]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087c                     	| [$d4a2: sta $087c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0758                     	| [$d4a5: lda $0758]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087d                     	| [$d4a8: sta $087d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0759                     	| [$d4ab: lda $0759]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087e                     	| [$d4ae: sta $087e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075a                     	| [$d4b1: lda $075a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x087f                     	| [$d4b4: sta $087f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075b                     	| [$d4b7: lda $075b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0880                     	| [$d4ba: sta $0880]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075c                     	| [$d4bd: lda $075c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0881                     	| [$d4c0: sta $0881]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075d                     	| [$d4c3: lda $075d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0882                     	| [$d4c6: sta $0882]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075e                     	| [$d4c9: lda $075e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0883                     	| [$d4cc: sta $0883]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x075f                     	| [$d4cf: lda $075f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0884                     	| [$d4d2: sta $0884]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0760                     	| [$d4d5: lda $0760]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0885                     	| [$d4d8: sta $0885]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0761                     	| [$d4db: lda $0761]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0886                     	| [$d4de: sta $0886]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0762                     	| [$d4e1: lda $0762]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0887                     	| [$d4e4: sta $0887]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0763                     	| [$d4e7: lda $0763]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0888                     	| [$d4ea: sta $0888]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0764                     	| [$d4ed: lda $0764]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0889                     	| [$d4f0: sta $0889]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0765                     	| [$d4f3: lda $0765]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088a                     	| [$d4f6: sta $088a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0766                     	| [$d4f9: lda $0766]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088b                     	| [$d4fc: sta $088b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0767                     	| [$d4ff: lda $0767]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088c                     	| [$d502: sta $088c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0768                     	| [$d505: lda $0768]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088d                     	| [$d508: sta $088d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0769                     	| [$d50b: lda $0769]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088e                     	| [$d50e: sta $088e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076a                     	| [$d511: lda $076a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x088f                     	| [$d514: sta $088f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076b                     	| [$d517: lda $076b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0890                     	| [$d51a: sta $0890]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076c                     	| [$d51d: lda $076c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0891                     	| [$d520: sta $0891]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076d                     	| [$d523: lda $076d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0892                     	| [$d526: sta $0892]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076e                     	| [$d529: lda $076e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0893                     	| [$d52c: sta $0893]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x076f                     	| [$d52f: lda $076f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0894                     	| [$d532: sta $0894]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0770                     	| [$d535: lda $0770]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0895                     	| [$d538: sta $0895]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0771                     	| [$d53b: lda $0771]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0896                     	| [$d53e: sta $0896]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0772                     	| [$d541: lda $0772]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0897                     	| [$d544: sta $0897]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0773                     	| [$d547: lda $0773]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0898                     	| [$d54a: sta $0898]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0774                     	| [$d54d: lda $0774]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x0899                     	| [$d550: sta $0899]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0775                     	| [$d553: lda $0775]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089a                     	| [$d556: sta $089a]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0776                     	| [$d559: lda $0776]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089b                     	| [$d55c: sta $089b]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0777                     	| [$d55f: lda $0777]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089c                     	| [$d562: sta $089c]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0778                     	| [$d565: lda $0778]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089d                     	| [$d568: sta $089d]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0779                     	| [$d56b: lda $0779]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089e                     	| [$d56e: sta $089e]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077a                     	| [$d571: lda $077a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x089f                     	| [$d574: sta $089f]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077b                     	| [$d577: lda $077b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a0                     	| [$d57a: sta $08a0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077c                     	| [$d57d: lda $077c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a1                     	| [$d580: sta $08a1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077d                     	| [$d583: lda $077d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a2                     	| [$d586: sta $08a2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077e                     	| [$d589: lda $077e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a3                     	| [$d58c: sta $08a3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x077f                     	| [$d58f: lda $077f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a4                     	| [$d592: sta $08a4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0780                     	| [$d595: lda $0780]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a5                     	| [$d598: sta $08a5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0781                     	| [$d59b: lda $0781]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a6                     	| [$d59e: sta $08a6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0782                     	| [$d5a1: lda $0782]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a7                     	| [$d5a4: sta $08a7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0783                     	| [$d5a7: lda $0783]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a8                     	| [$d5aa: sta $08a8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0784                     	| [$d5ad: lda $0784]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08a9                     	| [$d5b0: sta $08a9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0785                     	| [$d5b3: lda $0785]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08aa                     	| [$d5b6: sta $08aa]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0786                     	| [$d5b9: lda $0786]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ab                     	| [$d5bc: sta $08ab]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0787                     	| [$d5bf: lda $0787]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ac                     	| [$d5c2: sta $08ac]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0788                     	| [$d5c5: lda $0788]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ad                     	| [$d5c8: sta $08ad]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0789                     	| [$d5cb: lda $0789]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ae                     	| [$d5ce: sta $08ae]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078a                     	| [$d5d1: lda $078a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08af                     	| [$d5d4: sta $08af]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078b                     	| [$d5d7: lda $078b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b0                     	| [$d5da: sta $08b0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078c                     	| [$d5dd: lda $078c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b1                     	| [$d5e0: sta $08b1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078d                     	| [$d5e3: lda $078d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b2                     	| [$d5e6: sta $08b2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078e                     	| [$d5e9: lda $078e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b3                     	| [$d5ec: sta $08b3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x078f                     	| [$d5ef: lda $078f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b4                     	| [$d5f2: sta $08b4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0790                     	| [$d5f5: lda $0790]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b5                     	| [$d5f8: sta $08b5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0791                     	| [$d5fb: lda $0791]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b6                     	| [$d5fe: sta $08b6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0792                     	| [$d601: lda $0792]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b7                     	| [$d604: sta $08b7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0793                     	| [$d607: lda $0793]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b8                     	| [$d60a: sta $08b8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0794                     	| [$d60d: lda $0794]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08b9                     	| [$d610: sta $08b9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0795                     	| [$d613: lda $0795]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ba                     	| [$d616: sta $08ba]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0796                     	| [$d619: lda $0796]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08bb                     	| [$d61c: sta $08bb]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0797                     	| [$d61f: lda $0797]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08bc                     	| [$d622: sta $08bc]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0798                     	| [$d625: lda $0798]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08bd                     	| [$d628: sta $08bd]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x0799                     	| [$d62b: lda $0799]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08be                     	| [$d62e: sta $08be]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079a                     	| [$d631: lda $079a]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08bf                     	| [$d634: sta $08bf]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079b                     	| [$d637: lda $079b]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c0                     	| [$d63a: sta $08c0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079c                     	| [$d63d: lda $079c]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c1                     	| [$d640: sta $08c1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079d                     	| [$d643: lda $079d]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c2                     	| [$d646: sta $08c2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079e                     	| [$d649: lda $079e]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c3                     	| [$d64c: sta $08c3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x079f                     	| [$d64f: lda $079f]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c4                     	| [$d652: sta $08c4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a0                     	| [$d655: lda $07a0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c5                     	| [$d658: sta $08c5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a1                     	| [$d65b: lda $07a1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c6                     	| [$d65e: sta $08c6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a2                     	| [$d661: lda $07a2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c7                     	| [$d664: sta $08c7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a3                     	| [$d667: lda $07a3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c8                     	| [$d66a: sta $08c8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a4                     	| [$d66d: lda $07a4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08c9                     	| [$d670: sta $08c9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a5                     	| [$d673: lda $07a5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ca                     	| [$d676: sta $08ca]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a6                     	| [$d679: lda $07a6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08cb                     	| [$d67c: sta $08cb]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a7                     	| [$d67f: lda $07a7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08cc                     	| [$d682: sta $08cc]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a8                     	| [$d685: lda $07a8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08cd                     	| [$d688: sta $08cd]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07a9                     	| [$d68b: lda $07a9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ce                     	| [$d68e: sta $08ce]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07aa                     	| [$d691: lda $07aa]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08cf                     	| [$d694: sta $08cf]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ab                     	| [$d697: lda $07ab]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d0                     	| [$d69a: sta $08d0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ac                     	| [$d69d: lda $07ac]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d1                     	| [$d6a0: sta $08d1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ad                     	| [$d6a3: lda $07ad]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d2                     	| [$d6a6: sta $08d2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ae                     	| [$d6a9: lda $07ae]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d3                     	| [$d6ac: sta $08d3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07af                     	| [$d6af: lda $07af]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d4                     	| [$d6b2: sta $08d4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b0                     	| [$d6b5: lda $07b0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d5                     	| [$d6b8: sta $08d5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b1                     	| [$d6bb: lda $07b1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d6                     	| [$d6be: sta $08d6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b2                     	| [$d6c1: lda $07b2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d7                     	| [$d6c4: sta $08d7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b3                     	| [$d6c7: lda $07b3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d8                     	| [$d6ca: sta $08d8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b4                     	| [$d6cd: lda $07b4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08d9                     	| [$d6d0: sta $08d9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b5                     	| [$d6d3: lda $07b5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08da                     	| [$d6d6: sta $08da]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b6                     	| [$d6d9: lda $07b6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08db                     	| [$d6dc: sta $08db]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b7                     	| [$d6df: lda $07b7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08dc                     	| [$d6e2: sta $08dc]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b8                     	| [$d6e5: lda $07b8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08dd                     	| [$d6e8: sta $08dd]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07b9                     	| [$d6eb: lda $07b9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08de                     	| [$d6ee: sta $08de]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ba                     	| [$d6f1: lda $07ba]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08df                     	| [$d6f4: sta $08df]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07bb                     	| [$d6f7: lda $07bb]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e0                     	| [$d6fa: sta $08e0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07bc                     	| [$d6fd: lda $07bc]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e1                     	| [$d700: sta $08e1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07bd                     	| [$d703: lda $07bd]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e2                     	| [$d706: sta $08e2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07be                     	| [$d709: lda $07be]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e3                     	| [$d70c: sta $08e3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07bf                     	| [$d70f: lda $07bf]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e4                     	| [$d712: sta $08e4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c0                     	| [$d715: lda $07c0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e5                     	| [$d718: sta $08e5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c1                     	| [$d71b: lda $07c1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e6                     	| [$d71e: sta $08e6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c2                     	| [$d721: lda $07c2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e7                     	| [$d724: sta $08e7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c3                     	| [$d727: lda $07c3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e8                     	| [$d72a: sta $08e8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c4                     	| [$d72d: lda $07c4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08e9                     	| [$d730: sta $08e9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c5                     	| [$d733: lda $07c5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ea                     	| [$d736: sta $08ea]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c6                     	| [$d739: lda $07c6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08eb                     	| [$d73c: sta $08eb]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c7                     	| [$d73f: lda $07c7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ec                     	| [$d742: sta $08ec]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c8                     	| [$d745: lda $07c8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ed                     	| [$d748: sta $08ed]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07c9                     	| [$d74b: lda $07c9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ee                     	| [$d74e: sta $08ee]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ca                     	| [$d751: lda $07ca]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ef                     	| [$d754: sta $08ef]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07cb                     	| [$d757: lda $07cb]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f0                     	| [$d75a: sta $08f0]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07cc                     	| [$d75d: lda $07cc]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f1                     	| [$d760: sta $08f1]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07cd                     	| [$d763: lda $07cd]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f2                     	| [$d766: sta $08f2]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07ce                     	| [$d769: lda $07ce]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f3                     	| [$d76c: sta $08f3]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07cf                     	| [$d76f: lda $07cf]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f4                     	| [$d772: sta $08f4]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d0                     	| [$d775: lda $07d0]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f5                     	| [$d778: sta $08f5]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d1                     	| [$d77b: lda $07d1]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f6                     	| [$d77e: sta $08f6]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d2                     	| [$d781: lda $07d2]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f7                     	| [$d784: sta $08f7]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d3                     	| [$d787: lda $07d3]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f8                     	| [$d78a: sta $08f8]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d4                     	| [$d78d: lda $07d4]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08f9                     	| [$d790: sta $08f9]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d5                     	| [$d793: lda $07d5]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08fa                     	| [$d796: sta $08fa]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d6                     	| [$d799: lda $07d6]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08fb                     	| [$d79c: sta $08fb]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d7                     	| [$d79f: lda $07d7]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08fc                     	| [$d7a2: sta $08fc]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d8                     	| [$d7a5: lda $07d8]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08fd                     	| [$d7a8: sta $08fd]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07d9                     	| [$d7ab: lda $07d9]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08fe                     	| [$d7ae: sta $08fe]
*	move.b	d0,(a0)                         	| [...]
*	GET_ADDRESS	0x07da                     	| [$d7b1: lda $07da]
*	move.b	(a0),d0                         	| [...]
*	GET_ADDRESS	0x08ff                     	| [$d7b4: sta $08ff]
*	move.b	d0,(a0)                         	| [...]
*	rts                                    	| [$d7b7: rts]

queue_sound_d7b8:
	GET_ADDRESS	sound_to_queue_07f2        	| [$d7b8: sta sound_to_queue_07f2]
	move.b	d0,(a0)                         	| [...]
	move.b	d1,d0                           	| [$d7bb: txa]
	movem.w	d0,-(sp)                       	| [$d7bc: pha]
	GET_ADDRESS	nb_queued_sounds_07e9      	| [$d7bd: ldx nb_queued_sounds_07e9]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x08,d1                         	| [$d7c0: cpx #$08]
	* bcs=>bcc
	jcc	l_d7cd                             	| [$d7c2: bcs $d7cd]
	GET_ADDRESS	sound_to_queue_07f2        	| [$d7c4: lda sound_to_queue_07f2]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	sound_queue_07ea           	| [$d7c7: sta sound_queue_07ea, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	nb_queued_sounds_07e9      	| [$d7ca: inc nb_queued_sounds_07e9]
	addq.b	#1,(a0)                         	| [...]
l_d7cd:
	move.w	(sp)+,d0                        	| [$d7cd: pla]
	move.b	d0,d1                           	| [$d7ce: tax]
	rts                                    	| [$d7cf: rts]


play_sound_if_needed_d7d0:
	GET_ADDRESS	nb_queued_sounds_07e9      	| [$d7d0: lda nb_queued_sounds_07e9]
	move.b	(a0),d0                         	| [...]
	beq	l_d7fa                             	| [$d7d3: beq $d7fa]
	OP_R_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$d7d5: lda game_playing_flag_36]
	jne	l_d7de                             	| [$d7d7: jne $d7de] game playing: force play
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw2_1004
	jbsr	osd_read_dsw2 |  [$d7d9: bit dsw2_1004]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bpl	l_d7ea                             	| [$d7dc: bpl $d7ea] demo sounds off => skip
l_d7de:
	GET_ADDRESS	sound_queue_07ea           	| [$d7de: lda sound_queue_07ea]
	move.b	(a0),d0                         	| [...]
	beq	l_d7ea                             	| [$d7e1: beq $d7ea]
	cmp.b	#0x52,d0                         	| [$d7e3: cmp #$52]
	* bcs=>bcc
	jcc	l_d7ea                             	| [$d7e5: bcs $d7ea] out of range!
	jbsr	osd_sound_start |  [$d7e7: sta sound_100d] send sound command
l_d7ea:
	clr.b	d1                               	| [$d7ea: ldx #$00]
l_d7ec:
	GET_ADDRESS	0x07eb                     	| [$d7ec: lda $07eb, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	sound_queue_07ea           	| [$d7ef: sta sound_queue_07ea, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$d7f2: inx]
	cmp.b	#0x07,d1                         	| [$d7f3: cpx #$07]
	* bcc=>bcs (cmp above)
	jcs	l_d7ec                             	| [$d7f5: bcc $d7ec]
	GET_ADDRESS	nb_queued_sounds_07e9      	| [$d7f7: dec nb_queued_sounds_07e9]
	subq.b	#1,(a0)                         	| [...]
l_d7fa:
	rts                                    	| [$d7fa: rts]
	asl.b	#1,d0                            	| [$d7fb: asl a]
	GET_ADDRESS	0x00                       	| [$d7fc: adc $00]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	move.b	d0,d1                           	| [$d7fe: tax]
	SET_Z_FLAG  | required as abcd doesn't set Z on 0 result
	GET_ADDRESS	coin_per_credit_0416       	| [$d800: lda coin_per_credit_0416]
	move.b	(a0),d0                         	| [...]
	CLR_XC_FLAGS                           	| [$d803: clc]
	GET_ADDRESS	0x3c                       	| [$d804: adc $3c, x]
	move.b	(a0,d1.w),d4	| [...]
	abcd	d4,d0                    	| [...]
	                       	| [$d806: sta $3c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0417                     	| [$d808: lda $0417]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3d                       	| [$d80b: adc $3d, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	                       	| [$d80d: sta $3d, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x0418                     	| [$d80f: lda $0418]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3e                       	| [$d812: adc $3e, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	                       	| [$d814: sta $3e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	 |  [$d816: cld]
	SET_C_FROM_X
	jcc	l_d821                             	| [$d817: bcc $d821]
	move.b	#0x99,d0                        	| [$d819: lda #$99]
	GET_ADDRESS	0x3c                       	| [$d81b: sta $3c, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                       	| [$d81d: sta $3d, x]
    move.b	d0,(1,a0,d1.w)                 	| [...]
	                       	| [$d81f: sta $3e, x]
    move.b	d0,(2,a0,d1.w)                 	| [...]
l_d821:
	rts                                    	| [$d821: rts]
sync_d822:
	move.b	#0x5a,d0                        	| [$d822: lda #$5a]
	OP_W_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$d824: sta toggle_timer_2f]
l_d826:
	OP_R_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$d826: lda toggle_timer_2f]
	jne	l_d826                             	| [$d828: jne $d826]
	rts                                    	| [$d82a: rts]

l_d82b:
	GET_ADDRESS	0x07f6                     	| [$d82b: sta $07f6]
	move.b	d0,(a0)                         	| [...]
	move.b	d1,d0                           	| [$d82e: txa]
	movem.w	d0,-(sp)                       	| [$d82f: pha]
	move.b	d2,d0                           	| [$d830: tya]
	movem.w	d0,-(sp)                       	| [$d831: pha]
l_d832:
	jbsr	sync_d822                         	| [$d832: jsr sync_d822]
	                     	| [$d835: dec $07f6]
	subq.b	#1,(a0)                         	| [...]
	jne	l_d832                             	| [$d838: jne $d832]
	move.w	(sp)+,d0                        	| [$d83a: pla]
	move.b	d0,d2                           	| [$d83b: tay]
	move.w	(sp)+,d0                        	| [$d83c: pla]
	move.b	d0,d1                           	| [$d83d: tax]
	rts                                    	| [$d83e: rts]
l_d83f:
	GET_ADDRESS	0x07f6                     	| [$d83f: sta $07f6]
	move.b	d0,(a0)                         	| [...]
	move.b	d1,d0                           	| [$d842: txa]
	movem.w	d0,-(sp)                       	| [$d843: pha]
	move.b	d2,d0                           	| [$d844: tya]
	movem.w	d0,-(sp)                       	| [$d845: pha]
l_d846:
	jbsr	sync_d822                         	| [$d846: jsr sync_d822]
	jbsr	osd_read_p2_inputs |  [$d849: lda p2_1001]
	move.b	d0,d4
	jbsr	osd_read_p1_inputs |  [$d84c: and p1_1000]
	and.b	d4,d0 |  [...]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw1_1003
	jbsr	osd_read_dsw1 |  [$d84f: bit dsw1_1003]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bmi	l_d85a                             	| [$d852: bmi $d85a]
	 |  [$d854: and p3_1005]
	 |  [$d857: and p4_1006]
l_d85a:
	and.b	#0xf0,d0                         	| [$d85a: and #$f0]
	cmp.b	#0xf0,d0                         	| [$d85c: cmp #$f0]
	jne	l_d865                             	| [$d85e: jne $d865]
	GET_ADDRESS	0x07f6                     	| [$d860: dec $07f6]
	subq.b	#1,(a0)                         	| [...]
	jne	l_d846                             	| [$d863: jne $d846]
l_d865:
	move.w	(sp)+,d0                        	| [$d865: pla]
	move.b	d0,d2                           	| [$d866: tay]
	move.w	(sp)+,d0                        	| [$d867: pla]
	move.b	d0,d1                           	| [$d868: tax]
	rts                                    	| [$d869: rts]
	* unreached                     	| [$d86a: sta $07f6]
	                      	| [...]
l_d86d:
	jbsr	sync_d822                         	| [$d86d: jsr sync_d822]
	GET_ADDRESS	0x07f6                     	| [$d870: dec $07f6]
	subq.b	#1,(a0)                         	| [...]
	jne	l_d86d                             	| [$d873: jne $d86d]
	rts                                    	| [$d875: rts]
	
cpu_delay_for_scrolling_d876:
	movem.w	d0-d2,-(sp)                       	| [$d876: pha]
	                        	| [$d877: txa]
	                       	| [$d878: pha]
	                        	| [$d879: tya]
	                       	| [$d87a: pha]
	move.b	#0x7e,d1                        	| [$d87b: ldx #$7e]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$d87d: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$d880: and #$01]
	beq	l_d886                             	| [$d882: beq $d886]
	move.b	#0xb0,d1                        	| [$d884: ldx #$b0]
l_d886:
	subq.b	#1,d1                           	| [$d886: dex]
	jne	l_d886                             	| [$d887: jne $d886]
	movem.w	(sp)+,d0-d2                        	| [$d889: pla]
	                       	| [$d88a: tay]
	                       	| [$d88b: pla]
	                       	| [$d88c: tax]
	                       	| [$d88d: pla]
	rts                                    	| [$d88e: rts]

handle_cocktail_mode_d88f:
	rts |  [$d88f: lda scrollx_hi_copy_022c]
	and.b	#0xfe,d0                         	| [$d892: and #$fe]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw2_1004
	jbsr	osd_read_dsw2 |  [$d894: bit dsw2_1004]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bvs	l_d89b                             	| [$d897: bvs $d89b]
	or.b	#0x01,d0                          	| [$d899: ora #$01] enable flip screen
l_d89b:
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$d89b: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$d89e: sta scrollx_hi_1008]
	rts                                    	| [$d8a1: rts]

update_prom_banks_d8a2:
	NEW_ADDRESS
	GET_ADDRESS	sprite_prom_bank_07f4      	| [$d8a2: lda sprite_prom_bank_07f4]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$d8a5: and #$07]
                                         | [$d8a7: asl a]
                                         | [$d8a8: asl a]
	asl.b	#3,d0                            	| [$d8a9: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$d8aa: sta $00]
	GET_ADDRESS	tile_prom_bank_07f3        	| [$d8ac: lda tile_prom_bank_07f3]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$d8af: and #$07]
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$d8b1: ora $00]
                                         | [$d8b3: asl a]
	asl.b	#2,d0                            	| [$d8b4: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$d8b5: sta $00]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$d8b7: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$d8ba: and #$03] keep lower bits (flip screen, scroll)
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$d8bc: ora $00]
	       	| [$d8be: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$d8c1: sta scrollx_hi_1008]
	rts                                    	| [$d8c4: rts]

update_sprite_prom_bank_d8c5:
	NEW_ADDRESS
	GET_ADDRESS	sprite_prom_bank_07f4      	| [$d8c5: lda sprite_prom_bank_07f4]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$d8c8: and #$07]
                                         | [$d8ca: asl a]
                                         | [$d8cb: asl a]
                                         | [$d8cc: asl a]
                                         | [$d8cd: asl a]
	asl.b	#5,d0                            	| [$d8ce: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$d8cf: sta $00]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$d8d1: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0x1f,d0                         	| [$d8d4: and #$1f] keep lower bits (flip screen, scroll, tile prom bank)
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$d8d6: ora $00]
	       	| [$d8d8: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$d8db: sta scrollx_hi_1008]
	rts                                    	| [$d8de: rts]

set_bank_d8df:
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$d8df: sta $00] save A in temp
	NEW_ADDRESS
	GET_ADDRESS	bankswitch_copy_022d       	| [$d8e1: lda bankswitch_copy_022d] get old value
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$d8e4: and #$f8] remove 3 low bits
	OP_R_ON_ZP_ADDRESS	or,0x00,d0 |  [$d8e6: ora $00] set A bits
									| [$d8e8: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	jbra	osd_set_bank |  [$d8eb: sta bankswitch_1009] set bank value
	                                    	| [$d8ee: rts]


l_d8ef:
	move.b	d2,d0                           	| [$d8ef: tya]
	movem.w	d0,-(sp)                       	| [$d8f0: pha]
	GET_ADDRESS	player_1_controls_022e     	| [$d8f1: lda player_1_controls_022e]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	previous_player_1_controls_0236	| [$d8f4: sta previous_player_1_controls_0236]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_read_p1_inputs |  [$d8f7: lda p1_1000]
	not.b	d0                               	| [$d8fa: eor #$ff]
	GET_ADDRESS	player_1_controls_022e     	| [$d8fc: sta player_1_controls_022e]
	move.b	d0,(a0)                         	| [...]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw1_1003
	jbsr	osd_read_dsw1 |  [$d8ff: bit dsw1_1003]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bmi	l_d914                             	| [$d902: bmi $d914]
	bvs	l_d914                             	| [$d904: bvs $d914]
	and.b	#0x0f,d0                         	| [$d906: and #$0f]
	move.b	d0,d2                           	| [$d908: tay]
	GET_ADDRESS	player_1_controls_022e     	| [$d909: lda player_1_controls_022e]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$d90c: and #$f0]
	GET_ADDRESS	0xd986                     	| [$d90e: ora $d986, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	player_1_controls_022e     	| [$d911: sta player_1_controls_022e]
	move.b	d0,(a0)                         	| [...]
l_d914:
	GET_ADDRESS	player_2_controls_022f     	| [$d914: lda player_2_controls_022f]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	previous_player_2_controls_0237	| [$d917: sta previous_player_2_controls_0237]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_read_p2_inputs |  [$d91a: lda p2_1001]
	not.b	d0                               	| [$d91d: eor #$ff]
	GET_ADDRESS	player_2_controls_022f     	| [$d91f: sta player_2_controls_022f]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0230                     	| [$d922: lda $0230]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0238                     	| [$d925: sta $0238]
	move.b	d0,(a0)                         	| [...]
	 |  [$d928: lda p3_1005]
	clr.b	d0 |  [$d92b: eor #$ff]
	GET_ADDRESS	0x0230                     	| [$d92d: sta $0230]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0231                     	| [$d930: lda $0231]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0239                     	| [$d933: sta $0239]
	move.b	d0,(a0)                         	| [...]
	 |  [$d936: lda p4_1006]
	clr.b	d0 |  [$d939: eor #$ff]
	GET_ADDRESS	0x0231                     	| [$d93b: sta $0231]
	move.b	d0,(a0)                         	| [...]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw1_1003
	jbsr	osd_read_dsw1 |  [$d93e: bit dsw1_1003]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bmi	l_d953                             	| [$d941: bmi $d953]
	bvs	l_d953                             	| [$d943: bvs $d953]
	and.b	#0x0f,d0                         	| [$d945: and #$0f]
	move.b	d0,d2                           	| [$d947: tay]
	GET_ADDRESS	0x0231                     	| [$d948: lda $0231]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$d94b: and #$f0]
	GET_ADDRESS	0xd996                     	| [$d94d: ora $d996, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	0x0231                     	| [$d950: sta $0231]
	move.b	d0,(a0)                         	| [...]
l_d953:
	GET_ADDRESS	previous_player_1_controls_0236	| [$d953: lda previous_player_1_controls_0236]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	player_1_controls_022e     	| [$d956: and player_1_controls_022e]
	and.b	(a0),d0                          	| [...]
	     	| [$d959: eor player_1_controls_022e]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x0232                     	| [$d95c: sta $0232]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	previous_player_2_controls_0237	| [$d95f: lda previous_player_2_controls_0237]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	player_2_controls_022f     	| [$d962: and player_2_controls_022f]
	and.b	(a0),d0                          	| [...]
	     	| [$d965: eor player_2_controls_022f]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x0233                     	| [$d968: sta $0233]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0238                     	| [$d96b: lda $0238]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0230                     	| [$d96e: and $0230]
	and.b	(a0),d0                          	| [...]
	                     	| [$d971: eor $0230]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x0234                     	| [$d974: sta $0234]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x0239                     	| [$d977: lda $0239]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x0231                     	| [$d97a: and $0231]
	and.b	(a0),d0                          	| [...]
	                     	| [$d97d: eor $0231]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	GET_ADDRESS	0x0235                     	| [$d980: sta $0235]
	move.b	d0,(a0)                         	| [...]
	move.w	(sp)+,d0                        	| [$d983: pla]
	move.b	d0,d2                           	| [$d984: tay]
	rts                                    	| [$d985: rts]

l_d9a6:
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$d9a6: sta $0c]
	move.b	d1,d0                           	| [$d9a8: txa]
	movem.w	d0,-(sp)                       	| [$d9a9: pha]
	move.b	d2,d0                           	| [$d9aa: tya]
	movem.w	d0,-(sp)                       	| [$d9ab: pha]
	OP_R_ON_ZP_ADDRESS	move,0x0c,d0 |  [$d9ac: lda $0c]
                                         | [$d9ae: asl a]
                                         | [$d9af: asl a]
	asl.b	#3,d0                            	| [$d9b0: asl a]
	SET_XC_FLAGS                           	| [$d9b1: sec]
	SBC	0x0c                               	| [$d9b2: sbc $0c]
	move.b	d0,d2                           	| [$d9b4: tay]
	GET_ADDRESS	0xda47                     	| [$d9b5: lda $da47, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$d9b8: sta screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$d9ba: sta multipurpose_12]
	GET_ADDRESS	0xda48                     	| [$d9bc: lda $da48, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$d9bf: sta $11]
	                           	| [$d9c1: clc]
	add.b	#0x10,d0                        	| [$d9c2: adc #$10]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$d9c4: sta multipurpose_13]
	GET_ADDRESS	0xda49                     	| [$d9c6: lda $da49, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0e,d0 |  [$d9c9: sta $0e]
	OP_W_ON_ZP_ADDRESS	subq,0x0e,#1 |  [$d9cb: dec $0e]
	lsr.b	#1,d0                            	| [$d9cd: lsr a]
	PUSH_SR                                	| [$d9ce: php]
	moveq	#0x00,d4	| [$d9cf: adc #$00]
	addx.b	d4,d0                        	| [$d9cf: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0f,d0 |  [$d9d1: sta $0f]
	GET_ADDRESS	0xda4a                     	| [$d9d3: lda $da4a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$d9d6: sta multipurpose_14]
	GET_ADDRESS	0xda4b                     	| [$d9d8: lda $da4b, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$d9db: sta $15]
	GET_ADDRESS	0xda4c                     	| [$d9dd: lda $da4c, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d0 |  [$d9e0: sta $0d]
	GET_ADDRESS	0xda4d                     	| [$d9e2: lda $da4d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0b,d0 |  [$d9e5: sta $0b]
	clr.b	d0                               	| [$d9e7: lda #$00]
	POP_SR                                 	| [$d9e9: plp]
	SET_C_FROM_X
	jcc	l_d9ee                             	| [$d9ea: bcc $d9ee]
	st.b	d0                        	| [$d9ec: lda #$ff]
l_d9ee:
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$d9ee: sta $0c]
l_d9f0:
	OP_R_ON_ZP_ADDRESS	move,0x0f,d2 |  [$d9f0: ldy $0f]
	subq.b	#1,d2                           	| [$d9f2: dey]
	GET_INDIRECT_ADDRESS	0x14              	| [$d9f3: lda ($14), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0c                       	| [$d9f5: bit $0c]
	BIT	(a0)                               	| [...]
	bmi	l_da02                             	| [$d9f7: bmi $da02]
	movem.w	d0,-(sp)                       	| [$d9f9: pha]
                                         | [$d9fa: lsr a]
                                         | [$d9fb: lsr a]
                                         | [$d9fc: lsr a]
	lsr.b	#4,d0                            	| [$d9fd: lsr a]
	jbsr	l_da12                            	| [$d9fe: jsr $da12]
	move.w	(sp)+,d0                        	| [$da01: pla]
l_da02:
	jbsr	l_da12                            	| [$da02: jsr $da12]
	clr.b	d0                               	| [$da05: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$da07: sta $0c]
	OP_W_ON_ZP_ADDRESS	subq,0x0f,#1 |  [$da09: dec $0f]
	jne	l_d9f0                             	| [$da0b: jne $d9f0]
	move.w	(sp)+,d0                        	| [$da0d: pla]
	move.b	d0,d2                           	| [$da0e: tay]
	move.w	(sp)+,d0                        	| [$da0f: pla]
	move.b	d0,d1                           	| [$da10: tax]
	rts                                    	| [$da11: rts]
l_da12:
	and.b	#0x0f,d0                         	| [$da12: and #$0f]
	beq	l_da1a                             	| [$da14: beq $da1a]
	clr.b	d2                               	| [$da16: ldy #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0e,d2 |  [$da18: sty $0e]
l_da1a:
	OP_R_ON_ZP_ADDRESS	move,0x0e,d2 |  [$da1a: ldy $0e]
	beq	l_da25                             	| [$da1c: beq $da25]
	OP_W_ON_ZP_ADDRESS	subq,0x0e,#1 |  [$da1e: dec $0e]
	clr.b	d0                               	| [$da20: lda #$00]
	jra	l_da32                             	| [$da22: jra $da32]
l_da25:
	                           	| [$da25: clc]
	cmp.b	#0x0a,d0                         	| [$da26: cmp #$0a]
	* bcc=>bcs (cmp above)
	jcs	l_da2e                             	| [$da28: bcc $da2e]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	move.b	#0x16,d4	| [$da2a: adc #$16]
	addx.b	d4,d0                        	| [$da2a: adc #$16]
	jne	l_da30                             	| [$da2c: jne $da30]
l_da2e:
	move.b	#0x10,d4	| [$da2e: adc #$10]
	addx.b	d4,d0                        	| [$da2e: adc #$10]
l_da30:
	GET_ADDRESS	0x0d                       	| [$da30: adc $0d]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
l_da32:
	clr.b	d2                               	| [$da32: ldy #$00]
	GET_INDIRECT_UNCHECKED_ADDRESS	screen_source_pointer_0010	| [$da34: sta (screen_source_pointer_0010), y]  [unchecked_address] write to video
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x0b,d0 |  [$da36: lda $0b]
	GET_INDIRECT_UNCHECKED_ADDRESS	0x12              	| [$da38: sta ($12), y] [video_address] attrib
	move.b	d0,(a0,d2.w)                    	| [...]
	add.w	d2,a0 | [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_ZP_ADDRESS	addq,screen_source_pointer_0010,#1 |  [$da3a: inc screen_source_pointer_0010]
	jne	l_da40                             	| [$da3c: jne $da40]
	OP_W_ON_ZP_ADDRESS	addq,0x11,#1 |  [$da3e: inc $11]
l_da40:
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_12,#1 |  [$da40: inc multipurpose_12]
	jne	l_da46                             	| [$da42: jne $da46]
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_13,#1 |  [$da44: inc multipurpose_13]
l_da46:
	rts                                    	| [$da46: rts]

* < A: message id (plus modifiers on higher bits)
write_message_da7f:
	OP_W_ON_ZP_ADDRESS	move,0x0f,d0 |  [$da7f: sta $0f]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$da81: sta screen_source_pointer_0010]
	move.b	d1,d0                           	| [$da83: txa]
	movem.w	d0,-(sp)                       	| [$da84: pha]
	move.b	d2,d0                           	| [$da85: tya]
	movem.w	d0,-(sp)                       	| [$da86: pha]
	OP_R_ON_ZP_ADDRESS	move,0x0f,d0 |  [$da87: lda $0f]
	and.b	#0x3f,d0                         	| [$da89: and #$3f]
	asl.b	#1,d0                            	| [$da8b: asl a]
	move.b	d0,d1                           	| [$da8c: tax]
	GET_ADDRESS	message_table_db51         	| [$da8d: lda message_table_db51, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$da90: sta screen_source_pointer_0010]
	GET_ADDRESS	0xdb52                     	| [$da92: lda $db52, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$da95: sta $11]
	clr.b	d2                               	| [$da97: ldy #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0e,d2 |  [$da99: sty $0e]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$da9b: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$da9d: iny]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d0 |  [$da9e: sta $0d]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$daa0: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$daa2: iny]
	OP_W_ON_ZP_ADDRESS	move,0x0b,d0 |  [$daa3: sta $0b]
l_daa5:
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$daa5: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$daa7: iny]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$daa8: sta multipurpose_12]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$daaa: sta multipurpose_14]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$daac: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$daae: iny]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$daaf: sta multipurpose_13]
	                           	| [$dab1: clc]
	add.b	#0x10,d0                        	| [$dab2: adc #$10]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$dab4: sta $15]
l_dab6:
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$dab6: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$dab8: iny]
	cmp.b	#0xff,d0                         	| [$dab9: cmp #$ff]
	jne	l_dac0                             	| [$dabb: jne $dac0]
	jra	l_db4c                             	| [$dabd: jra $db4c]
l_dac0:
	cmp.b	#0xfe,d0                         	| [$dac0: cmp #$fe]
	beq	l_daa5                             	| [$dac2: beq $daa5]
	cmp.b	#0xfd,d0                         	| [$dac4: cmp #$fd]
	jne	l_dad0                             	| [$dac6: jne $dad0]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$dac8: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$daca: iny]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d0 |  [$dacb: sta $0d]
	jra	l_dab6                             	| [$dacd: jra $dab6]
l_dad0:
	cmp.b	#0xfc,d0                         	| [$dad0: cmp #$fc]
	jne	l_dae0                             	| [$dad2: jne $dae0]
	move.b	#0x80,d0                        	| [$dad4: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,0x0e,d0 |  [$dad6: sta $0e]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$dad8: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$dada: iny]
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$dadb: sta $0c]
	jra	l_dab6                             	| [$dadd: jra $dab6]
l_dae0:
	cmp.b	#0xfb,d0                         	| [$dae0: cmp #$fb]
	jne	l_daeb                             	| [$dae2: jne $daeb]
	clr.b	d0                               	| [$dae4: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0e,d0 |  [$dae6: sta $0e]
	jra	l_dab6                             	| [$dae8: jra $dab6]
l_daeb:
	cmp.b	#0xfa,d0                         	| [$daeb: cmp #$fa]
	jne	l_db02                             	| [$daed: jne $db02]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$daef: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$daf1: iny]
	                           	| [$daf2: clc]
	OP_R_ON_ZP_ADDRESS	add,multipurpose_12,d0 |  [$daf3: adc multipurpose_12]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$daf5: sta multipurpose_12]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$daf7: sta multipurpose_14]
	SET_C_FROM_X
	jcc	l_daff                             	| [$daf9: bcc $daff]
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_13,#1 |  [$dafb: inc multipurpose_13]
	OP_W_ON_ZP_ADDRESS	addq,0x15,#1 |  [$dafd: inc $15]
l_daff:
	jra	l_dab6                             	| [$daff: jra $dab6]
l_db02:
	GET_ADDRESS	0x0f                       	| [$db02: bit $0f]
	BIT	(a0)                               	| [...]
	bpl	l_db0c                             	| [$db04: bpl $db0c]
	clr.b	d0                               	| [$db06: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d0 |  [$db08: sta $0d]
	move.b	#0x20,d0                        	| [$db0a: lda #$20]
l_db0c:
	clr.b	d1                               	| [$db0c: ldx #$00]
	                           	| [$db0e: sec]
	sub.b	#0x20,d0	| [$db0f: sbc #$20]
	beq	l_db16                             	| [$db11: beq $db16]
	                           	| [$db13: clc]
	OP_R_ON_ZP_ADDRESS	add,0x0d,d0 |  [$db14: adc $0d]
l_db16:
	GET_UNCHECKED_ADDRESS_X	0x12                     	| [$db16: sta ($12, x)] [unchecked_address]
    move.b	d0,(a0)                      	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x0b,d0 |  [$db18: lda $0b]
	GET_UNCHECKED_ADDRESS_X	0x14                     	| [$db1a: sta ($14, x)] [video_address]
    move.b	d0,(a0)                      	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_12,#1 |  [$db1c: inc multipurpose_12]
	jne	l_db22                             	| [$db1e: jne $db22]
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_13,#1 |  [$db20: inc multipurpose_13]
l_db22:
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_14,#1 |  [$db22: inc multipurpose_14]
	jne	l_db28                             	| [$db24: jne $db28]
	OP_W_ON_ZP_ADDRESS	addq,0x15,#1 |  [$db26: inc $15]
l_db28:
	GET_ADDRESS	0x0e                       	| [$db28: bit $0e]
	BIT	(a0)                               	| [...]
	bmi	l_db2f                             	| [$db2a: bmi $db2f]
	jra	l_dab6                             	| [$db2c: jra $dab6]
l_db2f:
	GET_ADDRESS	0x0f                       	| [$db2f: bit $0f]
	BIT	(a0)                               	| [...]
	bpl	l_db36                             	| [$db31: bpl $db36]
	jra	l_dab6                             	| [$db33: jra $dab6]
l_db36:
	OP_R_ON_ZP_ADDRESS	move,0x0c,d1 |  [$db36: ldx $0c]
l_db38:
	jbsr	osd_read_system |  [$db38: lda system_1002]
	and.b	#0x01,d0                         	| [$db3b: and #$01]
	beq	l_db38                             	| [$db3d: beq $db38]
l_db3f:
	jbsr	osd_read_system |  [$db3f: lda system_1002]
	and.b	#0x01,d0                         	| [$db42: and #$01]
	jne	l_db3f                             	| [$db44: jne $db3f]
	subq.b	#1,d1                           	| [$db46: dex]
	bpl	l_db38                             	| [$db47: bpl $db38]
	jra	l_dab6                             	| [$db49: jra $dab6]
l_db4c:
	move.w	(sp)+,d0                        	| [$db4c: pla]
	move.b	d0,d2                           	| [$db4d: tay]
	move.w	(sp)+,d0                        	| [$db4e: pla]
	move.b	d0,d1                           	| [$db4f: tax]
	rts                                    	| [$db50: rts]

* this region contains ascii strings

* convert X/Y/Z isometric to X,Y screen
* < current_object_index_4c: object index
* > writes directly to shadow ram
convert_logical_to_screen_coords_dff3:
	move.b	#0x01,d0                        	| [$dff3: lda #$01]
	jbsr	set_bank_d8df                     	| [$dff5: jsr set_bank_d8df]
	GET_ADDRESS	0x06da                     	| [$dff8: lda $06da]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xfc,d0                         	| [$dffb: cmp #$fc]
	* bcc=>bcs (cmp above)
	jcs	l_e002                             	| [$dffd: bcc $e002]
	jra	l_e17e                             	| [$dfff: jra $e17e]
l_e002:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e002: ldx current_object_index_4c]
	GET_ADDRESS	0x65                       	| [$e004: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$e006: asl a]
	move.b	d0,d2                           	| [$e007: tay]
	GET_BANK_ADDRESS	0x4000                     	| [$e008: lda $4000, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$e00b: sta $00]
	GET_BANK_ADDRESS	0x4001                     	| [$e00d: lda $4001, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e010: sta $01]
	GET_ADDRESS	0x73                       	| [$e012: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$e014: asl a]
	move.b	d0,d2                           	| [$e015: tay]
	GET_INDIRECT_BANK_ADDRESS	0x00              	| [$e016: lda ($00), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e018: sta screen_source_pointer_0010]
	addq.b	#1,d2                           	| [$e01a: iny]
	GET_INDIRECT_BANK_ADDRESS	0x00              	| [$e01b: lda ($00), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e01d: sta $11]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$e01f: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e021: clc]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e022: adc objects_logical_z_array_e3, x]
	add.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$e024: sta unpack_mode_and_misc_02]
* extended Z?
	GET_ADDRESS	0xc7                       	| [$e026: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xf1                       	| [$e028: adc $f1, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$e02a: sta $03]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$e02c: lda unpack_mode_and_misc_02]
	SET_XC_FLAGS                           	| [$e02e: sec]
	SBC	logical_y_scroll_07e0              	| [$e02f: sbc logical_y_scroll_07e0]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$e032: sta unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$e034: lda $03]
	SBC	0x07e1                             	| [$e036: sbc $07e1]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$e039: sta $03]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$e03b: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$e03d: sec]
	SBC	logical_scroll_value_lsb_07de      	| [$e03e: sbc logical_scroll_value_lsb_07de]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$e041: sta $00]
	GET_ADDRESS	objects_side_array_9d      	| [$e043: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC	logical_scroll_value_msb_07df      	| [$e045: sbc logical_scroll_value_msb_07df]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e048: sta $01]
	GET_ADDRESS	0x73                       	| [$e04a: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$e04c: lsr a]
	and.b	#0x40,d0                         	| [$e04d: and #$40]
	eor.b	#0x40,d0                         	| [$e04f: eor #$40]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$e051: sta $04]
	GET_ADDRESS	0x65                       	| [$e053: ldy $65, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xe184                     	| [$e055: lda $e184, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$e058: sta $05]
l_e05a:
	clr.b	d2                               	| [$e05a: ldy #$00]
l_e05c:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e05c: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$e05e: sta $0c]
	jne	l_e065                             	| [$e060: jne $e065]
	jra	l_e17e                             	| [$e062: jra $e17e]
l_e065:
	addq.b	#1,d2                           	| [$e065: iny]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e066: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$e068: sta $06]
	addq.b	#1,d2                           	| [$e06a: iny]
	GET_ADDRESS	0x06                       	| [$e06b: bit $06]
	BIT	(a0)                               	| [...]
	PUSH_SR   | save overflow flag
	bpl	l_e074                             	| [$e06d: bpl $e074]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e06f: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$e071: sta unknown_07]
	addq.b	#1,d2                           	| [$e073: iny]
l_e074:
	POP_SR   | from bit, for bvc
	bvc	l_e07b                             	| [$e074: bvc $e07b]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e076: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x08,d0 |  [$e078: sta $08]
	addq.b	#1,d2                           	| [$e07a: iny]
l_e07b:
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e07b: lda $06]
	and.b	#0x08,d0                         	| [$e07d: and #$08]
	beq	l_e096                             	| [$e07f: beq $e096]
	GET_ADDRESS	0x023a                     	| [$e081: bit $023a]
	BIT	(a0)                               	| [...]
	bmi	l_e094                             	| [$e084: bmi $e094]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e086: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e088: pha]
	addq.b	#1,d2                           	| [$e089: iny]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e08a: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e08c: sta $11]
	move.w	(sp)+,d0                        	| [$e08e: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e08f: sta screen_source_pointer_0010]
	jra	l_e05a                             	| [$e091: jra $e05a]
l_e094:
                                         | [$e094: iny]
	addq.b	#2,d2                           	| [$e095: iny]
l_e096:
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e096: lda $06]
	and.b	#0x30,d0                         	| [$e098: and #$30]
	beq	l_e0aa                             	| [$e09a: beq $e0aa]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e09c: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e09e: sta multipurpose_12]
	addq.b	#1,d2                           	| [$e0a0: iny]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e0a1: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e0a3: sta multipurpose_13]
	addq.b	#1,d2                           	| [$e0a5: iny]
	clr.b	d0                               	| [$e0a6: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x09,d0 |  [$e0a8: sta $09]
l_e0aa:
	GET_ADDRESS	0x06da                     	| [$e0aa: ldx $06da]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$e0ad: lda unknown_07]
	GET_ADDRESS	0x06                       	| [$e0af: bit $06]
	BIT	(a0)                               	| [...]
	PUSH_SR   | save overflow flag
	bmi	l_e0b6                             	| [$e0b1: bmi $e0b6]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e0b3: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e0b5: iny]
l_e0b6:
	OP_R_ON_ZP_ADDRESS	or,0x05,d0 |  [$e0b6: ora $05]
	GET_ADDRESS	0x04                       	| [$e0b8: eor $04]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	eor.b	#0x40,d0                         	| [$e0ba: eor #$40]
	GET_ADDRESS	0x06dc                     	| [$e0bc: sta $06dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0a,d0 |  [$e0bf: sta $0a]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e0c1: lda $06]
	and.b	#0x08,d0                         	| [$e0c3: and #$08]
	beq	l_e0d1                             	| [$e0c5: beq $e0d1]
	                     	| [$e0c7: lda $06dc, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0xc7,d0                         	| [$e0ca: and #$c7]
	or.b	#0x30,d0                          	| [$e0cc: ora #$30]
	                     	| [$e0ce: sta $06dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_e0d1:
	POP_SR   | from bit, for bvc
	bvc	l_e0e0                             	| [$e0d1: bvc $e0e0]
	OP_R_ON_ZP_ADDRESS	move,0x08,d0 |  [$e0d3: lda $08]
	OP_W_ON_ZP_ADDRESS	addq,0x08,#1 |  [$e0d5: inc $08]
	GET_ADDRESS	0x0a                       	| [$e0d7: bit $0a]
	BIT	(a0)                               	| [...]
	bpl	l_e0e3                             	| [$e0d9: bpl $e0e3]
	OP_W_ON_ZP_ADDRESS	addq,0x08,#1 |  [$e0db: inc $08]
	jra	l_e0e3                             	| [$e0dd: jra $e0e3]
l_e0e0:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e0e0: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e0e2: iny]
l_e0e3:
	GET_ADDRESS	0x06dd                     	| [$e0e3: sta $06dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d2 |  [$e0e6: sty $0d]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e0e8: lda $06]
	and.b	#0x20,d0                         	| [$e0ea: and #$20]
	jne	l_e0f8                             	| [$e0ec: jne $e0f8]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e0ee: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e0f0: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$e0f2: lda $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e0f4: sta multipurpose_13]
	OP_W_ON_ZP_ADDRESS	move,0x09,d2 |  [$e0f6: sty $09]
l_e0f8:
	OP_R_ON_ZP_ADDRESS	move,0x09,d2 |  [$e0f8: ldy $09]
	GET_INDIRECT_BANK_ADDRESS	0x12              	| [$e0fa: lda ($12), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e0fc: iny]
	GET_ADDRESS	0x04                       	| [$e0fd: bit $04]
	BIT	(a0)                               	| [...]
	bvc	l_e106                             	| [$e0ff: bvc $e106]
	not.b	d0                               	| [$e101: eor #$ff]
	                           	| [$e103: clc]
	add.b	#0x01,d0                        	| [$e104: adc #$01]
l_e106:
	                           	| [$e106: clc]
	and.b	#0xff,d0                         	| [$e107: and #$ff]
	PUSH_SR                                	| [$e109: php]
	GET_ADDRESS	0x00                       	| [$e10a: adc $00]
	add.b	(a0),d0	| [...]
	GET_ADDRESS	0x06de                     	| [$e10c: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$e10f: lda $01]
	moveq	#0x00,d4	| [$e111: adc #$00]
	addx.b	d4,d0                        	| [$e111: adc #$00]
	POP_SR                                 	| [$e113: plp]
	bpl	l_e118                             	| [$e114: bpl $e118]
	st.b	d4	| [$e116: adc #$ff]
	add.b	d4,d0                        	| [$e116: adc #$ff]
l_e118:
	OP_W_ON_ZP_ADDRESS	move,0x0e,d0 |  [$e118: sta $0e]
	GET_INDIRECT_BANK_ADDRESS	0x12              	| [$e11a: lda ($12), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	PUSH_SR                                	| [$e11c: php]
	addq.b	#1,d2                           	| [$e11d: iny]
	                           	| [$e11e: clc]
	OP_R_ON_ZP_ADDRESS	add,unpack_mode_and_misc_02,d0 |  [$e11f: adc unpack_mode_and_misc_02]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e121: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$e124: lda $03]
	moveq	#0x00,d4	| [$e126: adc #$00]
	addx.b	d4,d0                        	| [$e126: adc #$00]
	POP_SR                                 	| [$e128: plp]
	bpl	l_e12d                             	| [$e129: bpl $e12d]
	st.b	d4	| [$e12b: adc #$ff]
	addx.b	d4,d0                        	| [$e12b: adc #$ff]
l_e12d:
	OP_W_ON_ZP_ADDRESS	move,0x0f,d0 |  [$e12d: sta $0f]
	OP_R_ON_ZP_ADDRESS	move,0x0e,d0 |  [$e12f: lda $0e]
	OP_R_ON_ZP_ADDRESS	or,0x0f,d0 |  [$e131: ora $0f]
	jne	l_e16a                             	| [$e133: jne $e16a]
	GET_ADDRESS	0x0a                       	| [$e135: bit $0a]
	BIT	(a0)                               	| [...]
	bpl	l_e144                             	| [$e137: bpl $e144]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e139: lda sprite_shadow_ram_06db, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x08,d0                         	| [$e13c: cmp #$08]
	* bcc=>bcs (cmp above)
	jcs	l_e16a                             	| [$e13e: bcc $e16a]
	cmp.b	#0xf9,d0                         	| [$e140: cmp #$f9]
	* bcs=>bcc
	jcc	l_e16a                             	| [$e142: bcs $e16a]
l_e144:
	GET_ADDRESS	0x06de                     	| [$e144: lda $06de, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e147: sec]
	sub.b	#0x08,d0	| [$e148: sbc #$08]
	                     	| [$e14a: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e14d: lda sprite_shadow_ram_06db, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e150: sec]
	sub.b	#0x07,d0	| [$e151: sbc #$07]
	GET_ADDRESS	0x0a                       	| [$e153: bit $0a]
	BIT	(a0)                               	| [...]
	bpl	l_e15a                             	| [$e155: bpl $e15a]
	                           	| [$e157: sec]
	sub.b	#0x08,d0	| [$e158: sbc #$08]
l_e15a:
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e15a: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06da                     	| [$e15d: lda $06da]
	move.b	(a0),d0                         	| [...]
	                           	| [$e160: clc]
	add.b	#0x04,d0                        	| [$e161: adc #$04]
	                     	| [$e163: sta $06da]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0xfc,d0                         	| [$e166: cmp #$fc]
	* bcs=>bcc
	jcc	l_e17e                             	| [$e168: bcs $e17e]
l_e16a:
	OP_W_ON_ZP_ADDRESS	move,0x09,d2 |  [$e16a: sty $09]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e16c: lda $06]
	and.b	#0x20,d0                         	| [$e16e: and #$20]
	beq	l_e174                             	| [$e170: beq $e174]
	OP_R_ON_ZP_ADDRESS	move,0x0d,d2 |  [$e172: ldy $0d]
l_e174:
	OP_W_ON_ZP_ADDRESS	subq,0x0c,#1 |  [$e174: dec $0c]
	beq	l_e17b                             	| [$e176: beq $e17b]
	jra	l_e0aa                             	| [$e178: jra $e0aa]
l_e17b:
	jra	l_e05c                             	| [$e17b: jra $e05c]
l_e17e:
	clr.b	d0                               	| [$e17e: lda #$00]
	jbsr	set_bank_d8df                     	| [$e180: jsr set_bank_d8df]
	rts                                    	| [$e183: rts]

* just display players (movement is handled somewhere else!)
display_sprites_e1b5:
	move.b	#0x01,d0                        	| [$e1b5: lda #$01]
	jbsr	set_bank_d8df                     	| [$e1b7: jsr set_bank_d8df]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$e1ba: lda current_object_index_4c]
	move.b	d0,d1                           	| [$e1bc: tax]
	asl.b	#1,d0                            	| [$e1bd: asl a]
	move.b	d0,d2                           	| [$e1be: tay]
	OP_W_ON_ZP_ADDRESS	move,0x0b,d0 |  [$e1bf: sta $0b]
	cmp.b	#0x0d,d1                         	| [$e1c1: cpx #$0d]
	* bcc=>bcs (cmp above)
	jcs	l_e1cc                             	| [$e1c3: bcc $e1cc]
	move.b	d2,d0                           	| [$e1c5: tya]
	                           	| [$e1c6: clc]
	OP_R_ON_ZP_ADDRESS	add,0x01,d0 |  [$e1c7: adc $01]
	move.b	d0,d2                           	| [$e1c9: tay]
	OP_W_ON_ZP_ADDRESS	move,0x0b,d0 |  [$e1ca: sta $0b]
l_e1cc:
	GET_ADDRESS	0xe47e                     	| [$e1cc: lda $e47e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e1cf: sta multipurpose_14]
	GET_ADDRESS	0xe47f                     	| [$e1d1: lda $e47f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e1d4: sta $15]
	GET_ADDRESS	0x023a                     	| [$e1d6: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x20,d0                         	| [$e1d9: and #$20]
	jne	l_e1e5                             	| [$e1db: jne $e1e5]
	clr.b	d2                               	| [$e1dd: ldy #$00]
	GET_INDIRECT_ADDRESS	0x14              	| [$e1df: lda ($14), y]
	move.b	(a0,d2.w),d0                    	| [...]
	or.b	#0x80,d0                          	| [$e1e1: ora #$80]
	GET_INDIRECT_ADDRESS	0x14              	| [$e1e3: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
l_e1e5:
	GET_ADDRESS	objects_logical_x_array_8f 	| [$e1e5: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	#0x01,d2                        	| [$e1e7: ldy #$01]
	GET_INDIRECT_ADDRESS	0x14              	| [$e1e9: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$e1eb: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e1ed: and #$0f]
	addq.b	#1,d2                           	| [$e1ef: iny]
	GET_INDIRECT_ADDRESS	0x14              	| [$e1f0: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$e1f2: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e1f4: clc]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e1f5: adc objects_logical_z_array_e3, x]
	addq.b	#1,d2                           	| [$e1f7: iny]
	add.b	(a0,d1.w),d0                    	| [...]
	GET_INDIRECT_ADDRESS	0x14              	| [$e1f8: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	0xc7                       	| [$e1fa: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xf1                       	| [$e1fc: adc $f1, x]
	move.b	(a0,d1.w),d4	| [...]
	addx.b	d4,d0                    	| [...]
	move.b	#0x02,d2                        	| [$e1fe: ldy #$02]
                                         | [$e200: asl a]
                                         | [$e201: asl a]
                                         | [$e202: asl a]
	asl.b	#4,d0                            	| [$e203: asl a]
	GET_INDIRECT_ADDRESS	0x14              	| [$e204: ora ($14), y]
	or.b	(a0,d2.w),d0                      	| [...]
	              	| [$e206: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$e208: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	move.b	#0x04,d2                        	| [$e20a: ldy #$04]
	GET_INDIRECT_ADDRESS	0x14              	| [$e20c: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	GET_ADDRESS	0xc7                       	| [$e20e: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_e216                             	| [$e210: bpl $e216]
	clr.b	d0                               	| [$e212: lda #$00]
	GET_INDIRECT_ADDRESS	0x14              	| [$e214: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
l_e216:
	beq	l_e21c                             	| [$e216: beq $e21c]
	st.b	d0                        	| [$e218: lda #$ff]
	GET_INDIRECT_ADDRESS	0x14              	| [$e21a: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
l_e21c:
	jbsr	l_e43d                            	| [$e21c: jsr $e43d]
	GET_ADDRESS	0x023a                     	| [$e21f: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x01,d0                         	| [$e222: and #$01]
	jne	l_e230                             	| [$e224: jne $e230]
	                     	| [$e226: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x02,d0                         	| [$e229: and #$02]
	beq	l_e238                             	| [$e22b: beq $e238]
	jra	l_e36d                             	| [$e22d: jra $e36d]
l_e230:
	                     	| [$e230: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	or.b	#0x02,d0                          	| [$e233: ora #$02]
	                     	| [$e235: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_e238:
	GET_ADDRESS	0x65                       	| [$e238: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$e23a: asl a]
	move.b	d0,d2                           	| [$e23b: tay]
	GET_BANK_ADDRESS	0x4000                     	| [$e23c: lda $4000, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$e23f: sta $00]
	GET_BANK_ADDRESS	0x4001                     	| [$e241: lda $4001, y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e244: sta $01]
	GET_ADDRESS	0x73                       	| [$e246: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$e248: asl a]
	move.b	d0,d2                           	| [$e249: tay]
	GET_INDIRECT_BANK_ADDRESS	0x00              	| [$e24a: lda ($00), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e24c: sta screen_source_pointer_0010]
	addq.b	#1,d2                           	| [$e24e: iny]
	GET_INDIRECT_BANK_ADDRESS	0x00              	| [$e24f: lda ($00), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e251: sta $11]
	GET_ADDRESS	0x73                       	| [$e253: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	lsr.b	#1,d0                            	| [$e255: lsr a]
	and.b	#0x40,d0                         	| [$e256: and #$40]
	eor.b	#0x40,d0                         	| [$e258: eor #$40]
	OP_W_ON_ZP_ADDRESS	move,0x04,d0 |  [$e25a: sta $04]
	GET_ADDRESS	0x65                       	| [$e25c: ldy $65, x]
	move.b	(a0,d1.w),d2                    	| [...]
	GET_ADDRESS	0xe184                     	| [$e25e: lda $e184, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x05,d0 |  [$e261: sta $05]
	clr.b	d0                               	| [$e263: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e265: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e267: lda multipurpose_14]
	                           	| [$e269: clc]
	add.b	#0x06,d0                        	| [$e26a: adc #$06]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e26c: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$e26e: lda $15]
	moveq	#0x00,d4	| [$e270: adc #$00]
	addx.b	d4,d0                        	| [$e270: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e272: sta $15]
l_e274:
	clr.b	d2                               	| [$e274: ldy #$00]
l_e276:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e276: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x0c,d0 |  [$e278: sta $0c]
	jne	l_e27f                             	| [$e27a: jne $e27f]
	jra	l_e357                             	| [$e27c: jra $e357]
l_e27f:
	addq.b	#1,d2                           	| [$e27f: iny]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e280: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x06,d0 |  [$e282: sta $06]
	addq.b	#1,d2                           	| [$e284: iny]
	GET_ADDRESS	0x06                       	| [$e285: bit $06]
	BIT	(a0)                               	| [...]
	PUSH_SR   | save overflow flag
	bpl	l_e28e                             	| [$e287: bpl $e28e]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e289: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$e28b: sta unknown_07]
	addq.b	#1,d2                           	| [$e28d: iny]
l_e28e:
	POP_SR   | from bit, for bvc
	bvc	l_e295                             	| [$e28e: bvc $e295]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e290: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x08,d0 |  [$e292: sta $08]
	addq.b	#1,d2                           	| [$e294: iny]
l_e295:
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e295: lda $06]
	and.b	#0x08,d0                         	| [$e297: and #$08]
	beq	l_e2b2                             	| [$e299: beq $e2b2]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e29b: ldx current_object_index_4c]
	GET_ADDRESS	0x023a                     	| [$e29d: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_e2b0                             	| [$e2a0: bmi $e2b0]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e2a2: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e2a4: pha]
	addq.b	#1,d2                           	| [$e2a5: iny]
		| [$e2a6: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e2a8: sta $11]
	move.w	(sp)+,d0                        	| [$e2aa: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e2ab: sta screen_source_pointer_0010]
	jra	l_e274                             	| [$e2ad: jra $e274]
l_e2b0:
                                         | [$e2b0: iny]
	addq.b	#2,d2                           	| [$e2b1: iny]
l_e2b2:
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e2b2: lda $06]
	and.b	#0x30,d0                         	| [$e2b4: and #$30]
	beq	l_e2c6                             	| [$e2b6: beq $e2c6]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e2b8: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e2ba: sta multipurpose_12]
	addq.b	#1,d2                           	| [$e2bc: iny]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e2bd: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e2bf: sta multipurpose_13]
	addq.b	#1,d2                           	| [$e2c1: iny]
	clr.b	d0                               	| [$e2c2: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x09,d0 |  [$e2c4: sta $09]
l_e2c6:
	OP_R_ON_ZP_ADDRESS	move,unknown_07,d0 |  [$e2c6: lda unknown_07]
	NEW_ADDRESS
	GET_ADDRESS	0x06                       	| [$e2c8: bit $06]
	BIT	(a0)                               	| [...]
	PUSH_SR   | save overflow flag
	bmi	l_e2cf                             	| [$e2ca: bmi $e2cf]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e2cc: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e2ce: iny]
l_e2cf:
	OP_R_ON_ZP_ADDRESS	or,0x05,d0 |  [$e2cf: ora $05]
	GET_ADDRESS	0x04                       	| [$e2d1: eor $04]
	move.b	(a0),d4	| [...]
	eor.b	d4,d0                          	| [...]
	eor.b	#0x40,d0                         	| [$e2d3: eor #$40]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e2d5: sta $01]
	OP_W_ON_ZP_ADDRESS	move,0x0a,d0 |  [$e2d7: sta $0a]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e2d9: lda $06]
	and.b	#0x08,d0                         	| [$e2db: and #$08]
	beq	l_e2e7                             	| [$e2dd: beq $e2e7]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$e2df: lda $01]
	and.b	#0xc7,d0                         	| [$e2e1: and #$c7]
	or.b	#0x30,d0                          	| [$e2e3: ora #$30]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e2e5: sta $01]
l_e2e7:
	POP_SR   | from bit, for bvc
	bvc	l_e2f6                             	| [$e2e7: bvc $e2f6]
	OP_R_ON_ZP_ADDRESS	move,0x08,d0 |  [$e2e9: lda $08]
	OP_W_ON_ZP_ADDRESS	addq,0x08,#1 |  [$e2eb: inc $08]
	GET_ADDRESS	0x0a                       	| [$e2ed: bit $0a]
	BIT	(a0)                               	| [...]
	bpl	l_e2f9                             	| [$e2ef: bpl $e2f9]
	OP_W_ON_ZP_ADDRESS	addq,0x08,#1 |  [$e2f1: inc $08]
	jra	l_e2f9                             	| [$e2f3: jra $e2f9]
l_e2f6:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$e2f6: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e2f8: iny]
l_e2f9:
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$e2f9: sta unpack_mode_and_misc_02]
	OP_W_ON_ZP_ADDRESS	move,0x0d,d2 |  [$e2fb: sty $0d]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e2fd: lda $06]
	and.b	#0x20,d0                         	| [$e2ff: and #$20]
	jne	l_e30d                             	| [$e301: jne $e30d]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e303: lda screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e305: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$e307: lda $11]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e309: sta multipurpose_13]
	OP_W_ON_ZP_ADDRESS	move,0x09,d2 |  [$e30b: sty $09]
l_e30d:
	OP_R_ON_ZP_ADDRESS	move,0x09,d2 |  [$e30d: ldy $09]
	GET_INDIRECT_BANK_ADDRESS	0x12              	| [$e30f: lda ($12), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e311: iny]
	GET_ADDRESS	0x04                       	| [$e312: bit $04]
	BIT	(a0)                               	| [...]
	bvc	l_e31b                             	| [$e314: bvc $e31b]
	not.b	d0                               	| [$e316: eor #$ff]
	                           	| [$e318: clc]
	add.b	#0x01,d0                        	| [$e319: adc #$01]
l_e31b:
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$e31b: sta $03]
	GET_INDIRECT_BANK_ADDRESS	0x12              	| [$e31d: lda ($12), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e31f: iny]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$e320: sta $00]
	move.b	d2,d0                           	| [$e322: tya]
	movem.w	d0,-(sp)                       	| [$e323: pha]
	clr.b	d1                               	| [$e324: ldx #$00]
	clr.b	d2                               	| [$e326: ldy #$00]
l_e328:
	GET_ADDRESS	0x00                       	| [$e328: lda $00, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_INDIRECT_ADDRESS	0x14              	| [$e32a: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	addq.b	#1,d1                           	| [$e32c: inx]
	addq.b	#1,d2                           	| [$e32d: iny]
	cmp.b	#0x04,d1                         	| [$e32e: cpx #$04]
	* bcc=>bcs (cmp above)
	jcs	l_e328                             	| [$e330: bcc $e328]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e332: lda multipurpose_14]
	                           	| [$e334: clc]
	add.b	#0x04,d0                        	| [$e335: adc #$04]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e337: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$e339: lda $15]
	moveq	#0x00,d4	| [$e33b: adc #$00]
	addx.b	d4,d0                        	| [$e33b: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e33d: sta $15]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$e33f: inc $1b]
	move.w	(sp)+,d0                        	| [$e341: pla]
	move.b	d0,d2                           	| [$e342: tay]
	OP_W_ON_ZP_ADDRESS	move,0x09,d2 |  [$e343: sty $09]
	OP_R_ON_ZP_ADDRESS	move,0x06,d0 |  [$e345: lda $06]
	and.b	#0x20,d0                         	| [$e347: and #$20]
	beq	l_e34d                             	| [$e349: beq $e34d]
	OP_R_ON_ZP_ADDRESS	move,0x0d,d2 |  [$e34b: ldy $0d]
l_e34d:
	OP_W_ON_ZP_ADDRESS	subq,0x0c,#1 |  [$e34d: dec $0c]
	beq	l_e354                             	| [$e34f: beq $e354]
	jra	l_e2c6                             	| [$e351: jra $e2c6]
l_e354:
	jra	l_e276                             	| [$e354: jra $e276]
l_e357:
	OP_R_ON_ZP_ADDRESS	move,0x0b,d1 |  [$e357: ldx $0b]
	GET_ADDRESS	0xe47e                     	| [$e359: lda $e47e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e35c: sta multipurpose_14]
	GET_ADDRESS	0xe47f                     	| [$e35e: lda $e47f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e361: sta $15]
	clr.b	d1                               	| [$e363: ldx #$00]
	GET_ADDRESS_X	0x14                     	| [$e365: lda ($14, x)]
	move.b	(a0),d0                         	| [...]
	and.b	#0x80,d0                         	| [$e367: and #$80]
	OP_R_ON_ZP_ADDRESS	or,0x1b,d0 |  [$e369: ora $1b]
	                     	| [$e36b: sta ($14, x)]
    move.b	d0,(a0)                      	| [...]
l_e36d:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e36d: ldx current_object_index_4c]
	GET_ADDRESS	0x65                       	| [$e36f: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x16,d0                         	| [$e371: cmp #$16]
	jne	l_e384                             	| [$e373: jne $e384]
	GET_ADDRESS	0x0373                     	| [$e375: lda $0373, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x0f,d0                         	| [$e378: and #$0f]
	cmp.b	#0x0f,d0                         	| [$e37a: cmp #$0f]
	beq	l_e3c0                             	| [$e37c: beq $e3c0]
	move.b	#0x01,d0                        	| [$e37e: lda #$01]
	move.b	d0,d2                           	| [$e380: tay]
	jra	l_e396                             	| [$e381: jra $e396]
l_e384:
	cmp.b	#0x16,d0                         	| [$e384: cmp #$16]
	* bcs=>bcc
	jcc	l_e3c0                             	| [$e386: bcs $e3c0]
	GET_ADDRESS	0x030e                     	| [$e388: lda $030e, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_e3c0                             	| [$e38b: bpl $e3c0]
	GET_ADDRESS	0x73                       	| [$e38d: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$e38f: and #$7f]
	move.b	d0,d2                           	| [$e391: tay]
	GET_ADDRESS	0xe4a0                     	| [$e392: lda $e4a0, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$e395: tay]
l_e396:
	GET_ADDRESS	0x65                       	| [$e396: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e398: pha]
	GET_ADDRESS	0x73                       	| [$e399: lda $73, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e39b: pha]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e39c: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e39e: pha]
	GET_ADDRESS	0xf1                       	| [$e39f: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e3a1: pha]
	move.b	#0x1b,d0                        	| [$e3a2: lda #$1b]
	GET_ADDRESS	0x65                       	| [$e3a4: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	d2,d0                           	| [$e3a6: tya]
	GET_ADDRESS	0x73                       	| [$e3a7: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$e3a9: lda #$00]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e3ab: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0xf1                       	| [$e3ad: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	convert_logical_to_screen_coords_dff3	| [$e3af: jsr convert_logical_to_screen_coords_dff3]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e3b2: ldx current_object_index_4c]
	move.w	(sp)+,d0                        	| [$e3b4: pla]
	GET_ADDRESS	0xf1                       	| [$e3b5: sta $f1, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$e3b7: pla]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e3b8: sta objects_logical_z_array_e3, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$e3ba: pla]
	GET_ADDRESS	0x73                       	| [$e3bb: sta $73, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$e3bd: pla]
	GET_ADDRESS	0x65                       	| [$e3be: sta $65, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_e3c0:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e3c0: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x65                       	| [$e3c2: lda $65, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x16,d0                         	| [$e3c4: cmp #$16]
	* bcs=>bcc
	jcc	l_e42d                             	| [$e3c6: bcs $e42d]
	GET_ADDRESS	0x023a                     	| [$e3c8: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x40,d0                         	| [$e3cb: and #$40]
	beq	l_e42d                             	| [$e3cd: beq $e42d]
	move.b	#0x30,d0                        	| [$e3cf: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,0x72,d0 |  [$e3d1: sta $72]
	jbsr	l_f7b7                            	| [$e3d3: jsr $f7b7]
	movem.w	d0,-(sp)                       	| [$e3d6: pha]
	move.b	d1,d0                           	| [$e3d7: txa]
	lsr.b	#1,d0                            	| [$e3d8: lsr a]
	move.b	d0,d2                           	| [$e3d9: tay]
	move.w	(sp)+,d0                        	| [$e3da: pla]
	GET_ADDRESS	0x47                       	| [$e3db: ldx $47, y]
	move.b	(a0,d2.w),d1                    	| [...]
	bmi	l_e3e1                             	| [$e3dd: bmi $e3e1]
	move.b	#0x04,d0                        	| [$e3df: lda #$04]
l_e3e1:
	                           	| [$e3e1: clc]
	add.b	#0x8a,d0                        	| [$e3e2: adc #$8a]
	OP_W_ON_ZP_ADDRESS	move,0x80,d0 |  [$e3e4: sta $80]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e3e6: ldx current_object_index_4c]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$e3e8: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x9c,d0 |  [$e3ea: sta $9c]
	GET_ADDRESS	objects_side_array_9d      	| [$e3ec: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0xaa,d0 |  [$e3ee: sta $aa]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$e3f0: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$e3f2: sec]
	SET_XC_FLAGS |  [$e3f3: sec]
	SBC_IMM	0x01	| [$e3f4: sbc #$01] [do not optimize sub!]
	OP_W_ON_ZP_ADDRESS	move,0xc6,d0 |  [$e3f6: sta $c6]
	GET_ADDRESS	0xc7                       	| [$e3f8: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC_IMM	0x00                           	| [$e3fa: sbc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xd4,d0 |  [$e3fc: sta $d4]
	GET_ADDRESS	objects_logical_z_array_e3 	| [$e3fe: lda objects_logical_z_array_e3, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e400: clc]
	add.b	#0x48,d0                        	| [$e401: adc #$48]
	OP_W_ON_ZP_ADDRESS	move,0xf0,d0 |  [$e403: sta $f0]
	GET_ADDRESS	0xf1                       	| [$e405: lda $f1, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$e407: adc #$00]
	addx.b	d4,d0                        	| [$e407: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0xfe,d0 |  [$e409: sta $fe]
	move.b	#0x01,d0                        	| [$e40b: lda #$01]
	GET_ADDRESS	0x0247                     	| [$e40d: sta $0247]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	timer_07f5                 	| [$e410: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	and.b	#0x08,d0                         	| [$e413: and #$08]
                                         | [$e415: asl a]
	asl.b	#2,d0                            	| [$e416: asl a]
	GET_ADDRESS	0x0247                     	| [$e417: ora $0247]
	or.b	(a0),d0                           	| [...]
	                     	| [$e41a: sta $0247]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$e41d: lda current_object_index_4c]
	movem.w	d0,-(sp)                       	| [$e41f: pha]
	asl.b	#1,d0                            	| [$e420: asl a]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e421: sta $01]
	move.b	#0x0d,d0                        	| [$e423: lda #$0d]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$e425: sta current_object_index_4c]
	jbsr	display_sprites_e1b5              	| [$e427: jsr display_sprites_e1b5]
	move.w	(sp)+,d0                        	| [$e42a: pla]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$e42b: sta current_object_index_4c]
l_e42d:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$e42d: ldx current_object_index_4c]
	NEW_ADDRESS
	GET_ADDRESS	0x023a                     	| [$e42f: lda $023a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x02,d0                         	| [$e432: and #$02]
	                     	| [$e434: sta $023a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$e437: lda #$00]
	jbsr	set_bank_d8df                     	| [$e439: jsr set_bank_d8df]
	rts                                    	| [$e43c: rts]

l_e43d:
	NEW_ADDRESS
	GET_ADDRESS	0xc7                       	| [$e43d: lda $c7, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_e477                             	| [$e43f: bmi $e477]
	jne	l_e473                             	| [$e441: jne $e473]
	GET_ADDRESS	objects_logical_y_array_b9 	| [$e443: lda objects_logical_y_array_b9, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x80,d0                         	| [$e445: cmp #$80]
	* bcs=>bcc
	jcc	l_e473                             	| [$e447: bcs $e473]
	cmp.b	#0x18,d0                         	| [$e449: cmp #$18]
	* bcc=>bcs (cmp above)
	jcs	l_e477                             	| [$e44b: bcc $e477]
	GET_ADDRESS	objects_side_array_9d      	| [$e44d: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_e477                             	| [$e44f: bmi $e477]
	cmp.b	#0x02,d0                         	| [$e451: cmp #$02]
	* bcs=>bcc
	jcc	l_e473                             	| [$e453: bcs $e473]
	move.b	#0x80,d0                        	| [$e455: lda #$80]
	SET_XC_FLAGS                           	| [$e457: sec]
	SBC_X	objects_logical_y_array_b9       	| [$e458: sbc objects_logical_y_array_b9, x]
                                         | [$e45a: lsr a]
                                         | [$e45b: lsr a]
	lsr.b	#3,d0                            	| [$e45c: lsr a]
	                           	| [$e45d: clc]
	add.b	#0xfc,d0                        	| [$e45e: adc #$fc]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$e460: sta screen_attribute_dest_address_16]
	clr.b	d0                               	| [$e462: lda #$00]
	moveq	#0x00,d4	| [$e464: adc #$00]
	addx.b	d4,d0                        	| [$e464: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$e466: sta $17]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$e468: lda objects_logical_x_array_8f, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SET_XC_FLAGS                           	| [$e46a: sec]
	SBC	screen_attribute_dest_address_16   	| [$e46b: sbc screen_attribute_dest_address_16]
	GET_ADDRESS	objects_side_array_9d      	| [$e46d: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	SBC	0x17                               	| [$e46f: sbc $17]
	jcc	l_e477                             	| [$e471: bcc $e477]
l_e473:
	clr.b	d0                               	| [$e473: lda #$00]
	beq	l_e479                             	| [$e475: beq $e479]
l_e477:
	move.b	#0x01,d0                        	| [$e477: lda #$01]
l_e479:
	move.b	#0x05,d2                        	| [$e479: ldy #$05]
	GET_INDIRECT_ADDRESS	0x14              	| [$e47b: sta ($14), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	rts                                    	| [$e47d: rts]

l_e4e8:
	clr.b	d0                               	| [$e4e8: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e4ea: sta $1b]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$e4ec: sta $1c]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$e4ee: sta base_screen_pointer_list_001d]
l_e4f0:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e4f0: lda $1b]
	cmp.b	#0x06,d0                         	| [$e4f2: cmp #$06]
	beq	l_e520                             	| [$e4f4: beq $e520]
	asl.b	#1,d0                            	| [$e4f6: asl a]
	move.b	d0,d2                           	| [$e4f7: tay]
	GET_ADDRESS	0xe47e                     	| [$e4f8: lda $e47e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e4fb: sta screen_source_pointer_0010]
	                     	
	move.b	(1,a0,d2.w),d0    | [$e4fd: lda $e47f, y]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e500: sta $11]
	clr.b	d2                               	| [$e502: ldy #$00]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e504: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_e520                             	| [$e506: bpl $e520]
	move.b	#0x05,d2                        	| [$e508: ldy #$05]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e50a: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	jne	l_e529                             	| [$e50c: jne $e529]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$e50e: lda $1c]
	asl.b	#1,d0                            	| [$e510: asl a]
	move.b	d0,d1                           	| [$e511: tax]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e512: lda $1b]
	GET_ADDRESS	0x0200                     	| [$e514: sta $0200, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d2                        	| [$e517: ldy #$04]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e519: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0201                     	| [$e51b: sta $0201, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	addq,0x1c,#1 |  [$e51e: inc $1c]
l_e520:
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$e520: inc $1b]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e522: lda $1b]
	cmp.b	#0x11,d0                         	| [$e524: cmp #$11]
	* bcc=>bcs (cmp above)
	jcs	l_e4f0                             	| [$e526: bcc $e4f0]
	rts                                    	| [$e528: rts]
l_e529:
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$e529: lda base_screen_pointer_list_001d]
	asl.b	#1,d0                            	| [$e52b: asl a]
	move.b	d0,d1                           	| [$e52c: tax]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e52d: lda $1b]
	GET_ADDRESS	0x0216                     	| [$e52f: sta $0216, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0x04,d2                        	| [$e532: ldy #$04]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e534: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x0217                     	| [$e536: sta $0217, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	addq,base_screen_pointer_list_001d,#1 |  [$e539: inc base_screen_pointer_list_001d]
	jra	l_e520                             	| [$e53b: jra $e520]
l_e53e:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$e53e: lda $1c]
	beq	l_e54c                             	| [$e540: beq $e54c]
	cmp.b	#0x02,d0                         	| [$e542: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_e549                             	| [$e544: bcc $e549]
	jbsr	l_e56a                            	| [$e546: jsr $e56a]
l_e549:
	jbsr	l_e5bb                            	| [$e549: jsr $e5bb]
l_e54c:
	move.b	#0x06,d0                        	| [$e54c: lda #$06]
	jbsr	update_sprite_shadow_ram_e5db     	| [$e54e: jsr update_sprite_shadow_ram_e5db]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$e551: lda base_screen_pointer_list_001d]
	beq	l_e55f                             	| [$e553: beq $e55f]
	cmp.b	#0x02,d0                         	| [$e555: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_e55c                             	| [$e557: bcc $e55c]
	jbsr	l_e560                            	| [$e559: jsr $e560]
l_e55c:
	jbsr	l_e5b1                            	| [$e55c: jsr $e5b1]
l_e55f:
	rts                                    	| [$e55f: rts]
l_e560:
	move.b	#0x16,d0                        	| [$e560: lda #$16]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$e562: sta $1f]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$e564: lda base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$e566: sta $20]
	jne	l_e572                             	| [$e568: jne $e572]
l_e56a:
	clr.b	d0                               	| [$e56a: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1f,d0 |  [$e56c: sta $1f]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$e56e: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,0x20,d0 |  [$e570: sta $20]
l_e572:
	OP_R_ON_ZP_ADDRESS	move,0x1f,d1 |  [$e572: ldx $1f]
	clr.b	d0                               	| [$e574: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e576: sta $1b]
	move.b	#0x01,d0                        	| [$e578: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$e57a: sta $1e]
l_e57c:
	GET_ADDRESS	0x0201                     	| [$e57c: lda $0201, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0x0203                     	| [$e57f: cmp $0203, x]
	cmp.b	(a0,d1.w),d0                     	| [...]
	* bcs=>bcc
	jcc	l_e5a2                             	| [$e582: bcs $e5a2]
	GET_ADDRESS	0x0200                     	| [$e584: lda $0200, x]
	move.b	(a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e587: pha]
	                     	| [$e588: lda $0201, x]
	move.b	(1,a0,d1.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e58b: pha]
	                    	| [$e58c: lda $0202, x]
	move.b	(2,a0,d1.w),d0                    	| [...]
	                     	| [$e58f: sta $0200, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                     	| [$e592: lda $0203, x]
	move.b	(3,a0,d1.w),d0                    	| [...]
	                     	| [$e595: sta $0201, x]
    move.b	d0,(1,a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$e598: pla]
	                     	| [$e599: sta $0203, x]
    move.b	d0,(3,a0,d1.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$e59c: pla]
	                    	| [$e59d: sta $0202, x]
    move.b	d0,(2,a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$e5a0: inc $1b]
l_e5a2:
                                         | [$e5a2: inx]
	addq.b	#2,d1                           	| [$e5a3: inx]
	OP_W_ON_ZP_ADDRESS	addq,0x1e,#1 |  [$e5a4: inc $1e]
	OP_R_ON_ZP_ADDRESS	move,0x1e,d0 |  [$e5a6: lda $1e]
	OP_R_ON_ZP_ADDRESS	cmp,0x20,d0 |  [$e5a8: cmp $20]
	* bcc=>bcs (cmp above)
	jcs	l_e57c                             	| [$e5aa: bcc $e57c]
	OP_R_ON_ZP_ADDRESS	move,0x1b,d0 |  [$e5ac: lda $1b]
	jne	l_e572                             	| [$e5ae: jne $e572]
	rts                                    	| [$e5b0: rts]
l_e5b1:
	move.b	#0x16,d1                        	| [$e5b1: ldx #$16]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$e5b3: lda base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$e5b5: sta $1e]
	jne	l_e5c3                             	| [$e5b7: jne $e5c3]
	bra	l_e5da                             	| [$e5b9: beq $e5da]
l_e5bb:
	clr.b	d1                               	| [$e5bb: ldx #$00]
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$e5bd: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$e5bf: sta $1e]
	beq	l_e5da                             	| [$e5c1: beq $e5da]
l_e5c3:
	clr.b	d2                               	| [$e5c3: ldy #$00]
l_e5c5:
	                           	| [$e5c5: txa]
	movem.w	d1/d2,-(sp)                       	| [$e5c6: pha]
	                        	| [$e5c7: tya]
	                       	| [$e5c8: pha]
	GET_ADDRESS	0x0200                     	| [$e5c9: lda $0200, x]
	move.b	(a0,d1.w),d0                    	| [...]
	jbsr	update_sprite_shadow_ram_e5db     	| [$e5cc: jsr update_sprite_shadow_ram_e5db]
	movem.w	(sp)+,d1/d2                       	| [$e5cf: pla]
	                      	| [$e5d0: tay]
	                      	| [$e5d1: pla]
	                      	| [$e5d2: tax]
                                         | [$e5d3: inx]
	addq.b	#2,d1                           	| [$e5d4: inx]
	addq.b	#1,d2                           	| [$e5d5: iny]
	OP_R_ON_ZP_ADDRESS	cmp,0x1e,d2 |  [$e5d6: cpy $1e]
	* bcc=>bcs (cmp above)
	jcs	l_e5c5                             	| [$e5d8: bcc $e5c5]
l_e5da:
	rts                                    	| [$e5da: rts]

* where the game updates the sprite shadow ram according to display
* priority that changes constantly depending on objects logical y coordinate
* (not isometric but simpler)

update_sprite_shadow_ram_e5db:
	movem.w	d0,-(sp)                       	| [$e5db: pha]
	move.b	#0x01,d0                        	| [$e5dc: lda #$01]
	jbsr	set_bank_d8df                     	| [$e5de: jsr set_bank_d8df]
	move.w	(sp)+,d0                        	| [$e5e1: pla]
	GET_ADDRESS	0x06da                     	| [$e5e2: ldx $06da]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xfc,d1                         	| [$e5e5: cpx #$fc]
	* bcc=>bcs (cmp above)
	jcs	l_e5ec                             	| [$e5e7: bcc $e5ec]
	jra	l_e6c6                             	| [$e5e9: jra $e6c6]
l_e5ec:
	asl.b	#1,d0                            	| [$e5ec: asl a]
	move.b	d0,d2                           	| [$e5ed: tay]
	GET_ADDRESS	0xe47e                     	| [$e5ee: lda $e47e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e5f1: sta screen_source_pointer_0010]
	GET_ADDRESS	0xe47f                     	| [$e5f3: lda $e47f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e5f6: sta $11]
	clr.b	d2                               	| [$e5f8: ldy #$00]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e5fa: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x7f,d0                         	| [$e5fc: and #$7f]
		| [$e5fe: sta (screen_source_pointer_0010), y]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$e600: sta $00]
	addq.b	#1,d2                           	| [$e602: iny]
		| [$e603: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e605: sta multipurpose_12]
	addq.b	#1,d2                           	| [$e607: iny]
		| [$e608: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$e60a: pha]
	and.b	#0x0f,d0                         	| [$e60b: and #$0f]
	cmp.b	#0x08,d0                         	| [$e60d: cmp #$08]
	* bcc=>bcs (cmp above)
	jcs	l_e613                             	| [$e60f: bcc $e613]
	or.b	#0xf0,d0                          	| [$e611: ora #$f0]
l_e613:
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e613: sta multipurpose_13]
	move.w	(sp)+,d0                        	| [$e615: pla]
                                         | [$e616: lsr a]
                                         | [$e617: lsr a]
                                         | [$e618: lsr a]
	lsr.b	#4,d0                            	| [$e619: lsr a]
	cmp.b	#0x08,d0                         	| [$e61a: cmp #$08]
	* bcc=>bcs (cmp above)
	jcs	l_e620                             	| [$e61c: bcc $e620]
	or.b	#0xf0,d0                          	| [$e61e: ora #$f0]
l_e620:
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e620: sta $15]
	addq.b	#1,d2                           	| [$e622: iny]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e623: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e625: sta multipurpose_14]
	addq.b	#1,d2                           	| [$e627: iny]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e628: lda multipurpose_12]
	SET_XC_FLAGS                           	| [$e62a: sec]
	SBC	logical_scroll_value_lsb_07de      	| [$e62b: sbc logical_scroll_value_lsb_07de]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$e62e: sta multipurpose_12]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e630: lda multipurpose_13]
	SBC	logical_scroll_value_msb_07df      	| [$e632: sbc logical_scroll_value_msb_07df]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e635: sta multipurpose_13]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e637: lda multipurpose_14]
	SET_XC_FLAGS                           	| [$e639: sec]
	SBC	logical_y_scroll_07e0              	| [$e63a: sbc logical_y_scroll_07e0]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$e63d: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$e63f: lda $15]
	SBC	0x07e1                             	| [$e641: sbc $07e1]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$e644: sta $15]
                                         | [$e646: iny]
	addq.b	#2,d2                           	| [$e647: iny]
l_e648:
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e648: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	 |  [$e64a: clc]
	PUSH_SR                                	| [$e64b: php]
	addq.b	#1,d2                           	| [$e64c: iny]
	GET_ADDRESS	multipurpose_14            	| [$e64d: adc multipurpose_14]
	move.b	(a0),d4	| [...]
	add.b	d4,d0                         	| [...]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e64f: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$e652: lda $15]
	moveq	#0x00,d4	| [$e654: adc #$00]
	addx.b	d4,d0                        	| [$e654: adc #$00]
	POP_SR                                 	| [$e656: plp]
	bpl	l_e65b                             	| [$e657: bpl $e65b]
	st.b	d4	| [$e659: adc #$ff]
	addx.b	d4,d0                        	| [$e659: adc #$ff]
l_e65b:
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$e65b: sta $01]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e65d: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e65f: iny]
	GET_ADDRESS	0x06dc                     	| [$e660: sta $06dc, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e663: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$e665: iny]
* write sprite code (lower byte)
	GET_ADDRESS	0x06dd                     	| [$e666: sta $06dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_INDIRECT_ADDRESS	screen_source_pointer_0010	| [$e669: lda (screen_source_pointer_0010), y]
	move.b	(a0,d2.w),d0                    	| [...]
	 |  [$e66b: clc]
	PUSH_SR                                	| [$e66c: php]
	addq.b	#1,d2                           	| [$e66d: iny]
	GET_ADDRESS	multipurpose_12            	| [$e66e: adc multipurpose_12]
	add.b	(a0),d0	| [...]
	GET_ADDRESS	0x06de                     	| [$e670: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$e673: lda multipurpose_13]
	moveq	#0x00,d4	| [$e675: adc #$00]
	addx.b	d4,d0                        	| [$e675: adc #$00]
	POP_SR                                 	| [$e677: plp]
	bpl	l_e67c                             	| [$e678: bpl $e67c]
	st.b	d4	| [$e67a: adc #$ff]
	addx.b	d4,d0                        	| [$e67a: adc #$ff]
l_e67c:
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$e67c: sta unpack_mode_and_misc_02]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$e67e: lda $01]
	OP_R_ON_ZP_ADDRESS	or,unpack_mode_and_misc_02,d0 |  [$e680: ora unpack_mode_and_misc_02]
	jne	l_e6bf                             	| [$e682: jne $e6bf]
	GET_ADDRESS	0x03                       	| [$e684: bit $03]
	BIT	(a0)                               	| [...]
	bpl	l_e693                             	| [$e686: bpl $e693]
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e688: lda sprite_shadow_ram_06db, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	#0x08,d0                         	| [$e68b: cmp #$08]
	* bcc=>bcs (cmp above)
	jcs	l_e6bf                             	| [$e68d: bcc $e6bf]
	cmp.b	#0xf9,d0                         	| [$e68f: cmp #$f9]
	* bcs=>bcc
	jcc	l_e6bf                             	| [$e691: bcs $e6bf]
l_e693:
	GET_ADDRESS	0x06de                     	| [$e693: lda $06de, x]
	move.b	(a0,d1.w),d0                    	| [...]
	                           	| [$e696: sec]
	subq.b	#0x08,d0	| [$e697: sbc #$08]
											| [$e699: sta $06de, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	                     	| [$e69c: lda $06dc, x]
	move.b	(-2,a0,d1.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$e69f: sta $03]
								| [$e6a1: lda sprite_shadow_ram_06db, x]
	move.b	(-3,a0,d1.w),d0                    	| [...]
	                           	| [$e6a4: sec]
	sub.b	#0x07,d0	| [$e6a5: sbc #$07]
	GET_ADDRESS	0x03                       	| [$e6a7: bit $03]
	BIT	(a0)                               	| [...]
	bpl	l_e6ae                             	| [$e6a9: bpl $e6ae]
	                           	| [$e6ab: sec]
	subq.b	#0x08,d0	| [$e6ac: sbc #$08]
l_e6ae:
	GET_ADDRESS	sprite_shadow_ram_06db     	| [$e6ae: sta sprite_shadow_ram_06db, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x06da                     	| [$e6b1: lda $06da]
	move.b	(a0),d0                         	| [...]
	                           	| [$e6b4: clc]
	add.b	#0x04,d0                        	| [$e6b5: adc #$04]
										| [$e6b7: sta $06da]
	move.b	d0,(a0)                         	| [...]
	move.b	d0,d1                           	| [$e6ba: tax]
	cmp.b	#0xfc,d0                         	| [$e6bb: cmp #$fc]
	* bcs=>bcc
	jcc	l_e6c6                             	| [$e6bd: bcs $e6c6]
l_e6bf:
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$e6bf: dec $00]
	beq	l_e6c6                             	| [$e6c1: beq $e6c6]
	jra	l_e648                             	| [$e6c3: jra $e648]
l_e6c6:
	clr.b	d0                               	| [$e6c6: lda #$00]
	jbra	set_bank_d8df                     	| [$e6c8: jsr set_bank_d8df]
	                                    	| [$e6cb: rts]

l_e6cc:
	jbsr	l_e4e8                            	| [$e6cc: jsr $e4e8]
	jbsr	l_e53e                            	| [$e6cf: jsr $e53e]
	rts                                    	| [$e6d2: rts]
l_e6d3:
	                           	| [$e6d3: txa]
	movem.w	d1/d2,-(sp)                       	| [$e6d4: pha]
	                           	| [$e6d5: tya]
	                       	| [$e6d6: pha]
	jbsr	l_e71c                            	| [$e6d7: jsr $e71c]
	jbsr	l_e784                            	| [$e6da: jsr $e784]
	movem.w	(sp)+,d1/d2                        	| [$e6dd: pla]
									| [$e6de: tay]
									| [$e6df: pla]
									| [$e6e0: tax]
	rts                                    	| [$e6e1: rts]
l_e6e2:
	                           	| [$e6e2: txa]
	movem.w	d1/d2,-(sp)                       	| [$e6e3: pha]
	                           	| [$e6e4: tya]
	                       	| [$e6e5: pha]
	jbsr	l_e6f1                            	| [$e6e6: jsr $e6f1]
	jbsr	l_e76f                            	| [$e6e9: jsr $e76f]
	movem.w	(sp)+,d1/d2                        	| [$e6ec: pla]
	                        	| [$e6ed: tay]
	                        	| [$e6ee: pla]
	                        	| [$e6ef: tax]
	rts                                    	| [$e6f0: rts]
l_e6f1:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$e6f1: lda game_state_bits_46]
	and.b	#0x0a,d0                         	| [$e6f3: and #$0a]
	jne	l_e764                             	| [$e6f5: jne $e764]
	OP_W_ON_ZP_ADDRESS	addq,0x49,#1 |  [$e6f7: inc $49]
	OP_R_ON_ZP_ADDRESS	move,0x49,d0 |  [$e6f9: lda $49]
	cmp.b	#0x1f,d0                         	| [$e6fb: cmp #$1f]
	* bcc=>bcs (cmp above)
	jcs	l_e764                             	| [$e6fd: bcc $e764]
	clr.b	d0                               	| [$e6ff: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x49,d0 |  [$e701: sta $49]
	 |  [$e704: sec]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e705: lda time_seconds_4a]
	moveq	#1,d4
	sbcd	d4,d0 |  [$e707: sbc #$01]
	PUSH_SR		| save carry
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e709: sta time_seconds_4a]
	POP_SR		| restore carry
	 |  [$e70b: cld]
	jcc	l_e71c |  [$e70c: bpl $e71c]
	move.b	#0x59,d0                        	| [$e70e: lda #$59] put 59 seconds again
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e710: sta time_seconds_4a]
	OP_W_ON_ZP_ADDRESS	subq,time_minutes_4b,#1 |  [$e712: dec time_minutes_4b] decrease minutes
	bpl	l_e71c                             	| [$e714: bpl $e71c]
	clr.b	d0                               	| [$e716: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e718: sta time_seconds_4a]
	OP_W_ON_ZP_ADDRESS	move,time_minutes_4b,d0 |  [$e71a: sta time_minutes_4b]
l_e71c:
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$e71c: lda $37]
	beq	l_e72f                             	| [$e71e: beq $e72f]
	OP_R_ON_ZP_ADDRESS	move,time_minutes_4b,d0 |  [$e720: lda time_minutes_4b]
	jne	l_e72f                             	| [$e722: jne $e72f]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e724: lda time_seconds_4a]
	cmp.b	#0x29,d0                         	| [$e726: cmp #$29]
	jne	l_e72f                             	| [$e728: jne $e72f]
	move.b	#0x03,d0                        	| [$e72a: lda #$03]
	jbsr	queue_sound_d7b8                  	| [$e72c: jsr queue_sound_d7b8] stressful level end music!
l_e72f:
	clr.b	d0                               	| [$e72f: lda #$00]
	GET_UNCHECKED_ADDRESS	0x3cc0                     	| [$e731: sta $3cc0] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e734: sta $3cc1] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e737: sta $3cc2] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e73a: sta $3cc3] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,time_minutes_4b,d2 |  [$e73d: ldy time_minutes_4b]
	GET_ADDRESS	0xe765                     	| [$e73f: lda $e765, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2cc0                     	| [$e742: sta $2cc0] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0xc4,d0                        	| [$e745: lda #$c4]
	addq	#1,a0                     	| [$e747: sta $2cc1] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e74a: lda time_seconds_4a]
	and.b	#0xf0,d0                         	| [$e74c: and #$f0]
                                         | [$e74e: lsr a]
                                         | [$e74f: lsr a]
                                         | [$e750: lsr a]
	lsr.b	#4,d0                            	| [$e751: lsr a]
	move.b	d0,d2                           	| [$e752: tay]
	GET_ADDRESS	0xe765                     	| [$e753: lda $e765, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2cc2                     	| [$e756: sta $2cc2] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$e759: lda time_seconds_4a]
	and.b	#0x0f,d0                         	| [$e75b: and #$0f]
	move.b	d0,d2                           	| [$e75d: tay]
	GET_ADDRESS	0xe765                     	| [$e75e: lda $e765, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2cc3                     	| [$e761: sta $2cc3] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_e764:
	rts                                    	| [$e764: rts]

l_e76f:
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$e76f: lda score_array_57]
	OP_R_ON_ZP_ADDRESS	cmp,0x59,d0 |  [$e771: cmp $59]
	jne	l_e77c                             	| [$e773: jne $e77c]
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$e775: lda $58]
	OP_R_ON_ZP_ADDRESS	cmp,0x5a,d0 |  [$e777: cmp $5a]
	jne	l_e77c                             	| [$e779: jne $e77c]
	rts                                    	| [$e77b: rts]
l_e77c:
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$e77c: lda score_array_57]
	OP_W_ON_ZP_ADDRESS	move,0x59,d0 |  [$e77e: sta $59]
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$e780: lda $58]
	OP_W_ON_ZP_ADDRESS	move,0x5a,d0 |  [$e782: sta $5a]
l_e784:
	clr.b	d0                               	| [$e784: lda #$00]
	GET_UNCHECKED_ADDRESS	0x389d                     	| [$e786: sta $389d] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e789: sta $389e] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x38bd                     	| [$e78c: sta $38bd] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e78f: sta $38be] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x3c81                     	| [$e792: sta $3c81] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e795: sta $3c82] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x3ca1                     	| [$e798: sta $3ca1] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e79b: sta $3ca2] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$e79e: lda score_array_57]
	and.b	#0xf0,d0                         	| [$e7a0: and #$f0]
                                         | [$e7a2: lsr a]
                                         | [$e7a3: lsr a]
	lsr.b	#3,d0                            	| [$e7a4: lsr a]
	move.b	d0,d2                           	| [$e7a5: tay]
	jne	l_e7aa                             	| [$e7a6: jne $e7aa]
	move.b	#0x14,d2                        	| [$e7a8: ldy #$14]
l_e7aa:
	GET_ADDRESS	0xe892                     	| [$e7aa: lda $e892, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x289d                     	| [$e7ad: sta $289d] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe893                     	| [$e7b0: lda $e893, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x28bd                     	| [$e7b3: sta $28bd] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d0 |  [$e7b6: lda score_array_57]
	and.b	#0x0f,d0                         	| [$e7b8: and #$0f]
	asl.b	#1,d0                            	| [$e7ba: asl a]
	move.b	d0,d2                           	| [$e7bb: tay]
	GET_ADDRESS	0xe892                     	| [$e7bc: lda $e892, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x289e                     	| [$e7bf: sta $289e] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe893                     	| [$e7c2: lda $e893, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x28be                     	| [$e7c5: sta $28be] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$e7c8: lda $58]
	and.b	#0xf0,d0                         	| [$e7ca: and #$f0]
                                         | [$e7cc: lsr a]
                                         | [$e7cd: lsr a]
	lsr.b	#3,d0                            	| [$e7ce: lsr a]
	move.b	d0,d2                           	| [$e7cf: tay]
	jne	l_e7d4                             	| [$e7d0: jne $e7d4]
	move.b	#0x14,d2                        	| [$e7d2: ldy #$14]
l_e7d4:
	GET_ADDRESS	0xe892                     	| [$e7d4: lda $e892, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2c81                     	| [$e7d7: sta $2c81] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe893                     	| [$e7da: lda $e893, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2ca1                     	| [$e7dd: sta $2ca1] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,0x58,d0 |  [$e7e0: lda $58]
	and.b	#0x0f,d0                         	| [$e7e2: and #$0f]
	asl.b	#1,d0                            	| [$e7e4: asl a]
	move.b	d0,d2                           	| [$e7e5: tay]
	GET_ADDRESS	0xe892                     	| [$e7e6: lda $e892, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2c82                     	| [$e7e9: sta $2c82] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe893                     	| [$e7ec: lda $e893, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2ca2                     	| [$e7ef: sta $2ca2] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	clr.b	d0                               	| [$e7f2: lda #$00]
	GET_UNCHECKED_ADDRESS	0x389c                     	| [$e7f4: sta $389c] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x38bc                     	| [$e7f7: sta $38bc] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x3c83                     	| [$e7fa: sta $3c83] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x3ca3                     	| [$e7fd: sta $3ca3] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0xc6,d0                        	| [$e800: lda #$c6]
	GET_UNCHECKED_ADDRESS	0x289c                     	| [$e802: sta $289c] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x28bc                     	| [$e805: sta $28bc] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x2c83                     	| [$e808: sta $2c83] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x2ca3                     	| [$e80b: sta $2ca3] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	clr.b	d0                               	| [$e80e: lda #$00]
	GET_UNCHECKED_ADDRESS	0x387c                     	| [$e810: sta $387c] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e813: sta $387d] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e816: sta $387e] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e819: sta $387f] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x3c60                     	| [$e81c: sta $3c60] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e81f: sta $3c61] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e822: sta $3c62] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#1,a0                     	| [$e825: sta $3c63] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0xc6,d0                        	| [$e828: lda #$c6]
	GET_UNCHECKED_ADDRESS	0x287c                     	| [$e82a: sta $287c] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#3,a0                     	| [$e82d: sta $287f] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x2c60                     	| [$e830: sta $2c60] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq	#3,a0                     	| [$e833: sta $2c63] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$e836: lda $37]
	cmp.b	#0x02,d0                         	| [$e838: cmp #$02]
	beq	l_e869                             	| [$e83a: beq $e869]
	OP_R_ON_ZP_ADDRESS	move,0x47,d0 |  [$e83c: lda $47]
	bpl	l_e847                             	| [$e83e: bpl $e847]
	move.b	#0x1f,d0                        	| [$e840: lda #$1f]
	OP_W_ON_ZP_ADDRESS	move,0x5b,d0 |  [$e842: sta $5b]
	jra	l_e851                             	| [$e844: jra $e851]
l_e847:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$e847: lda current_level_38]
	and.b	#0x0f,d0                         	| [$e849: and #$0f]
	move.b	d0,d2                           	| [$e84b: tay]
	GET_ADDRESS	0xe8ae                     	| [$e84c: lda $e8ae, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x5b,d0 |  [$e84f: sta $5b]
l_e851:
	OP_R_ON_ZP_ADDRESS	move,0x48,d0 |  [$e851: lda $48]
	bpl	l_e85c                             	| [$e853: bpl $e85c]
	move.b	#0x29,d0                        	| [$e855: lda #$29]
	OP_W_ON_ZP_ADDRESS	move,0x5c,d0 |  [$e857: sta $5c]
	jra	l_e871                             	| [$e859: jra $e871]
l_e85c:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$e85c: lda current_level_38]
	and.b	#0x0f,d0                         	| [$e85e: and #$0f]
	move.b	d0,d2                           	| [$e860: tay]
	NEW_ADDRESS
	GET_ADDRESS	0xe8ae                     	| [$e861: lda $e8ae, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x5c,d0 |  [$e864: sta $5c]
	jra	l_e871                             	| [$e866: jra $e871]
l_e869:
	move.b	#0x35,d0                        	| [$e869: lda #$35]
	OP_W_ON_ZP_ADDRESS	move,0x5b,d0 |  [$e86b: sta $5b]
	move.b	#0x35,d0                        	| [$e86d: lda #$35]
	OP_W_ON_ZP_ADDRESS	move,0x5c,d0 |  [$e86f: sta $5c]
l_e871:
	OP_R_ON_ZP_ADDRESS	move,0x5b,d0 |  [$e871: lda $5b]
	asl.b	#1,d0                            	| [$e873: asl a]
	move.b	d0,d2                           	| [$e874: tay]
	GET_ADDRESS	0xe8b7                     	| [$e875: lda $e8b7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x287d                     	| [$e878: sta $287d] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe8b8                     	| [$e87b: lda $e8b8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x287e                     	| [$e87e: sta $287e] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_ZP_ADDRESS	move,0x5c,d0 |  [$e881: lda $5c]
	asl.b	#1,d0                            	| [$e883: asl a]
	move.b	d0,d2                           	| [$e884: tay]
	GET_ADDRESS	0xe8b7                     	| [$e885: lda $e8b7, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2c61                     	| [$e888: sta $2c61] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0xe8b8                     	| [$e88b: lda $e8b8, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_UNCHECKED_ADDRESS	0x2c62                     	| [$e88e: sta $2c62] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$e891: rts]

l_e923:
	GET_ADDRESS	scroll_lock_07db                     	| [$e923: lda $07db]
	move.b	(a0),d0                         	| [...]
	jne	l_e929                             	| [$e926: jne $e929]
	rts                                    	| [$e928: rts]
l_e929:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$e929: lda game_state_bits_46]
	and.b	#0x0b,d0                         	| [$e92b: and #$0b]
	beq	set_scroll_when_serving_e93c       	| [$e92d: beq set_scroll_when_serving_e93c]
* center the screen on the net
	move.b	#0x80,d0                        	| [$e92f: lda #$80]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$e931: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$e934: lda #$00]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$e936: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
	jra	continue_ea23                      	| [$e939: jra continue_ea23]
set_scroll_when_serving_e93c:
	OP_R_ON_ZP_ADDRESS	move,0x4f,d0 |  [$e93c: lda $4f]
	bmi	l_e952                             	| [$e93e: bmi $e952]
	and.b	#0x02,d0                         	| [$e940: and #$02]
	move.b	d0,d2                           	| [$e942: tay]
* set start scroll values from ROM tables
	GET_ADDRESS	scroll_values_table_ea5d   	| [$e943: lda scroll_values_table_ea5d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$e946: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xea5e                     	| [$e949: lda $ea5e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$e94c: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
	jra	continue_ea23                      	| [$e94f: jra continue_ea23]
l_e952:
	GET_ADDRESS	0x03e0                     	| [$e952: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0d,d0                         	| [$e955: cmp #$0d]
	* bcc=>bcs (cmp above)
	jcs	l_e95c                             	| [$e957: bcc $e95c]
	jra	l_e9dd                             	| [$e959: jra $e9dd]
l_e95c:
	cmp.b	#0x0a,d0                         	| [$e95c: cmp #$0a]
	* bcs=>bcc
	jcc	l_e976                             	| [$e95e: bcs $e976]
	cmp.b	#0x05,d0                         	| [$e960: cmp #$05]
	* bcs=>bcc
	jcc	l_e98d                             	| [$e962: bcs $e98d]
	tst.b	d0                               	| [$e964: cmp #$00]
	jne	l_e976                             	| [$e966: jne $e976]
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$e968: lda $56]
	and.b	#0x20,d0                         	| [$e96a: and #$20]
	beq	l_e976                             	| [$e96c: beq $e976]
	GET_ADDRESS	0x03e9                     	| [$e96e: lda $03e9]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x10,d0                         	| [$e971: eor #$10]
	jra	l_e978                             	| [$e973: jra $e978]
l_e976:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$e976: lda $56]
l_e978:
	and.b	#0x10,d0                         	| [$e978: and #$10]
                                         | [$e97a: lsr a]
                                         | [$e97b: lsr a]
	lsr.b	#3,d0                            	| [$e97c: lsr a]
	move.b	d0,d2                           	| [$e97d: tay]
	GET_ADDRESS	0xea61                     	| [$e97e: lda $ea61, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x07e2                     	| [$e981: sta $07e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xea62                     	| [$e984: lda $ea62, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x07e3                     	| [$e987: sta $07e3]
	move.b	d0,(a0)                         	| [...]
	jra	l_e9dd                             	| [$e98a: jra $e9dd]
l_e98d:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$e98d: lda $56]
	and.b	#0x20,d0                         	| [$e98f: and #$20]
	beq	l_e9b1                             	| [$e991: beq $e9b1]
	GET_ADDRESS	0x03e1                     	| [$e993: lda $03e1]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0b,d0                         	| [$e996: cmp #$0b]
	beq	l_e9b1                             	| [$e998: beq $e9b1]
	GET_ADDRESS	0x0411                     	| [$e99a: lda $0411]
	move.b	(a0),d0                         	| [...]
	bmi	l_e9b1                             	| [$e99d: bmi $e9b1]
	and.b	#0x02,d0                         	| [$e99f: and #$02]
	move.b	d0,d2                           	| [$e9a1: tay]
	GET_ADDRESS	scroll_values_table_ea5d   	| [$e9a2: lda scroll_values_table_ea5d, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x07e2                     	| [$e9a5: sta $07e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xea5e                     	| [$e9a8: lda $ea5e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	0x07e3                     	| [$e9ab: sta $07e3]
	move.b	d0,(a0)                         	| [...]
	jra	l_e9dd                             	| [$e9ae: jra $e9dd]
l_e9b1:
	OP_R_ON_ZP_ADDRESS	move,0x56,d0 |  [$e9b1: lda $56]
	and.b	#0x10,d0                         	| [$e9b3: and #$10]
                                         | [$e9b5: lsr a]
                                         | [$e9b6: lsr a]
                                         | [$e9b7: lsr a]
	lsr.b	#4,d0                            	| [$e9b8: lsr a]
	move.b	d0,d2                           	| [$e9b9: tay]
	GET_ADDRESS	0x005f                     	| [$e9ba: lda $005f, y]
	move.b	(a0,d2.w),d0                    	| [...]
	eor.b	#0x01,d0                         	| [$e9bd: eor #$01]
	move.b	d0,d1                           	| [$e9bf: tax]
	GET_ADDRESS	0xea69                     	| [$e9c0: lda $ea69, y]
	move.b	(a0,d2.w),d0                    	| [...]
	 |  [$e9c3: clc]
	PUSH_SR                                	| [$e9c4: php]
	GET_ADDRESS	objects_logical_x_array_8f 	| [$e9c5: adc objects_logical_x_array_8f, x]
	add.b	(a0,d1.w),d0	| [...]
	GET_ADDRESS	0x07e2                     	| [$e9c7: sta $07e2]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	objects_side_array_9d      	| [$e9ca: lda objects_side_array_9d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	moveq	#0x00,d4	| [$e9cc: adc #$00]
	addx.b	d4,d0                        	| [$e9cc: adc #$00]
	POP_SR                                 	| [$e9ce: plp]
	bpl	l_e9d3                             	| [$e9cf: bpl $e9d3]
	st.b	d4	| [$e9d1: adc #$ff]
	addx.b	d4,d0                        	| [$e9d1: adc #$ff]
l_e9d3:
	GET_ADDRESS	0x07e3                     	| [$e9d3: sta $07e3]
	move.b	d0,(a0)                         	| [...]
	tst.b	d2                               	| [$e9d6: cpy #$00]
	beq	l_e9dd                             	| [$e9d8: beq $e9dd]
	                     	| [$e9da: dec $07e3]
	subq.b	#1,(a0)                         	| [...]
l_e9dd:
	clr.b	d2                               	| [$e9dd: ldy #$00]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$e9df: lda logical_scroll_value_lsb_07de]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS                           	| [$e9e2: sec]
	SBC	0x07e2                             	| [$e9e3: sbc $07e2]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e9e6: sta screen_source_pointer_0010]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$e9e8: lda logical_scroll_value_msb_07df]
	move.b	(a0),d0                         	| [...]
	SBC	0x07e3                             	| [$e9eb: sbc $07e3]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$e9ee: sta $11]
	bpl	l_e9f7                             	| [$e9f0: bpl $e9f7]
	move.b	#0x02,d2                        	| [$e9f2: ldy #$02]
	jbsr	l_cf98                            	| [$e9f4: jsr $cf98]
l_e9f7:
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$e9f7: lda $11]
	jne	l_ea10                             	| [$e9f9: jne $ea10]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$e9fb: lda screen_source_pointer_0010]
	cmp.b	#0x09,d0                         	| [$e9fd: cmp #$09]
	* bcs=>bcc
	jcc	l_ea10                             	| [$e9ff: bcs $ea10]
	GET_ADDRESS	0x07e2                     	| [$ea01: lda $07e2]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$ea04: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x07e3                     	| [$ea07: lda $07e3]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$ea0a: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
	jra	continue_ea23                      	| [$ea0d: jra continue_ea23]
l_ea10:
	GET_ADDRESS	0xea65                     	| [$ea10: lda $ea65, y]
	move.b	(a0,d2.w),d0                    	| [...]
	                           	| [$ea13: clc]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$ea14: adc logical_scroll_value_lsb_07de]
	add.b	(a0),d0                         	| [...]
		| [$ea17: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0xea66                     	| [$ea1a: lda $ea66, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$ea1d: adc logical_scroll_value_msb_07df]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
		| [$ea20: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
continue_ea23:
	clr.b	d2                               	| [$ea23: ldy #$00]
	GET_ADDRESS	0x03e0                     	| [$ea25: lda $03e0]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x08,d0                         	| [$ea28: cmp #$08]
	jne	l_ea59                             	| [$ea2a: jne $ea59]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$ea2c: lda game_state_bits_46]
	and.b	#0x02,d0                         	| [$ea2e: and #$02]
	jne	l_ea59                             	| [$ea30: jne $ea59]
	OP_R_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$ea32: lda ball_logical_z_e7]
	                           	| [$ea34: clc]
	OP_R_ON_ZP_ADDRESS	add,ball_logical_y_bd,d0 |  [$ea35: adc ball_logical_y_bd]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ea37: sta $00]
	OP_R_ON_ZP_ADDRESS	move,0xf5,d0 |  [$ea39: lda $f5]
	GET_ADDRESS	ball_kind_of_z_cb          	| [$ea3b: adc ball_kind_of_z_cb]
	move.b	(a0),d4	| [...]
	addx.b	d4,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$ea3d: sta $01]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$ea3f: lda $00]
	                           	| [$ea41: clc]
	add.b	#0x20,d0                        	| [$ea42: adc #$20]
	move.b	d0,d1                           	| [$ea44: tax]
	OP_R_ON_ZP_ADDRESS	move,0x01,d0 |  [$ea45: lda $01]
	moveq	#0x00,d4	| [$ea47: adc #$00]
	addx.b	d4,d0                        	| [$ea47: adc #$00]
	bmi	l_ea59                             	| [$ea49: bmi $ea59]
	beq	l_ea59                             	| [$ea4b: beq $ea59]
	cmp.b	#0x02,d0                         	| [$ea4d: cmp #$02]
	* bcs=>bcc
	jcc	l_ea55                             	| [$ea4f: bcs $ea55]
	cmp.b	#0x21,d1                         	| [$ea51: cpx #$21]
	* bcc=>bcs (cmp above)
	jcs	l_ea57                             	| [$ea53: bcc $ea57]
l_ea55:
	move.b	#0x20,d1                        	| [$ea55: ldx #$20]
l_ea57:
	move.b	d1,d0                           	| [$ea57: txa]
	move.b	d0,d2                           	| [$ea58: tay]
l_ea59:
	GET_ADDRESS	logical_y_scroll_07e0      	| [$ea59: sty logical_y_scroll_07e0]
	move.b	d2,(a0)                         	| [...]
	rts                                    	| [$ea5c: rts]

l_ea6b:
	GET_ADDRESS	scroll_lock_07db                     	| [$ea6b: lda $07db]
	move.b	(a0),d0                         	| [...]
	bmi	l_ea77                             	| [$ea6e: bmi $ea77]
	cmp.b	#0x01,d0                         	| [$ea70: cmp #$01]
	beq	l_ea78                             	| [$ea72: beq $ea78]
* this should not be called when showing map as it temporarily resets scrolling
* but immediately scrollx is set to $17C (Hawaii). Hardware doesn't
* register the small X change and settles with $17C
	jbsr	reset_scrolling_eae2              	| [$ea74: jsr reset_scrolling_eae2]
l_ea77:
	rts                                    	| [$ea77: rts]
l_ea78:
	jbsr	l_eb06                            	| [$ea78: jsr $eb06]
	rts                                    	| [$ea7b: rts]

update_scrolling_ea7c:
	                           	| [$ea7c: tya]
	move.w	d2,-(sp)                       	| [$ea7d: pha]
	NEW_ADDRESS
	GET_ADDRESS	scroll_lock_07db                     	| [$ea7e: lda $07db]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$ea81: cmp #$02]
	jne	update_scroll_out_eab7                             	| [$ea83: jne $eab7]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$ea85: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$ea88: and #$01]
	move.b	d0,d2                           	| [$ea8a: tay]
	OP_R_ON_ZP_ADDRESS	move,irq_07_counter_31,d0 |  [$ea8b: lda irq_07_counter_31]
	GET_ADDRESS	0xeade                     	| [$ea8d: cmp $eade, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	jne	l_eaba                             	| [$ea90: jne $eaba]
	
* this hardware seems to be not so great with scrolling, the software seems
* to "race the beam" to try to make it correct
* we can safely remove this and it saves a lot of CPU
	*jbsr	cpu_delay_for_scrolling_d876                            	| [$ea92: jsr $d876]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$ea95: lda logical_scroll_value_lsb_07de]
	move.b	(a0)+,d0                         	| [...]
	SET_XC_FLAGS |  [$ea98: sec]
	SBC_IMM	0x04	| [$ea99: sbc #$04] [do not optimize sub!]
	jbsr	osd_set_scrollx_lo |  [$ea9b: sta scrollx_lo_100c]
	* (a0)+ above does the job					| [$ea9e: lda logical_scroll_value_msb_07df]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x00                           	| [$eaa1: sbc #$00]
	and.b	#0x01,d0                         	| [$eaa3: and #$01]
	asl.b	#1,d0                            	| [$eaa5: asl a]
	GET_ADDRESS	scroll_hi_copy_07f8        	| [$eaa6: sta scroll_hi_copy_07f8]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eaa9: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfd,d0                         	| [$eaac: and #$fd]
	GET_ADDRESS	scroll_hi_copy_07f8        	| [$eaae: ora scroll_hi_copy_07f8]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eab1: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$eab4: sta scrollx_hi_1008]
update_scroll_out_eab7:
	move.w	(sp)+,d2                        	| [$eab7: pla]
	                           	| [$eab8: tay]
	rts                                    	| [$eab9: rts]
l_eaba:
	GET_ADDRESS	0xeae0                     	| [$eaba: cmp $eae0, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	jne	update_scroll_out_eab7                             	| [$eabd: jne $eab7]
	*jbsr	cpu_delay_for_scrolling_d876                            	| [$eabf: jsr $d876]
	* cpu-timed delay! no way!!!!
	                        	| [$eac2: ldy #$28]
l_eac4:
	 |  [$eac4: nop]
	                           	| [$eac5: dey]
	                             	| [$eac6: bpl $eac4]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eac8: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	move.b	#0xfc,d0                        	| [$eacb: lda #$fc]
	jbsr	osd_set_scrollx_lo |  [$eacd: sta scrollx_lo_100c]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$ead0: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	or.b	#0x02,d0                          	| [$ead3: ora #$02]
	       	| [$ead5: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$ead8: sta scrollx_hi_1008]
	jra	update_scroll_out_eab7                             	| [$eadb: jra $eab7]

reset_scrolling_eae2:
	 |  [$eae2: lda scrollx_hi_copy_022c] [disable] useless lda
	move.b	#0xfc,d0                        	| [$eae5: lda #$fc]
	jbsr	osd_set_scrollx_lo |  [$eae7: sta scrollx_lo_100c]
	NEW_ADDRESS
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eaea: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	or.b	#0x02,d0                          	| [$eaed: ora #$02]
	       	| [$eaef: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$eaf2: sta scrollx_hi_1008]
	clr.b	d0                               	| [$eaf5: lda #$00]
	jbsr	osd_set_scrolly_lo |  [$eaf7: sta scrolly_lo_100e]
	GET_ADDRESS	bankswitch_copy_022d       	| [$eafa: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	or.b	#0x40,d0                          	| [$eafd: ora #$40]
	jbsr	osd_set_bank |  [$eaff: sta bankswitch_1009]
	       	| [$eb02: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$eb05: rts]
l_eb06:
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$eb06: lda logical_scroll_value_lsb_07de]
	move.b	(a0),d0                         	| [...]
	SET_XC_FLAGS |  [$eb09: sec]
	SBC_IMM	0x04	| [$eb0a: sbc #$04] [do not optimize sub!]
	jbsr	osd_set_scrollx_lo |  [$eb0c: sta scrollx_lo_100c]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$eb0f: lda logical_scroll_value_msb_07df]
	move.b	(a0),d0                         	| [...]
	SBC_IMM	0x00                           	| [$eb12: sbc #$00]
	and.b	#0x01,d0                         	| [$eb14: and #$01]
	asl.b	#1,d0                            	| [$eb16: asl a]
	GET_ADDRESS	scroll_hi_copy_07f8        	| [$eb17: sta scroll_hi_copy_07f8]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eb1a: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfd,d0                         	| [$eb1d: and #$fd]
	GET_ADDRESS	scroll_hi_copy_07f8        	| [$eb1f: ora scroll_hi_copy_07f8]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eb22: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$eb25: sta scrollx_hi_1008]
	GET_ADDRESS	logical_y_scroll_07e0      	| [$eb28: lda logical_y_scroll_07e0]
	move.b	(a0),d0                         	| [...]
	beq	l_eb41                             	| [$eb2b: beq $eb41]
* non-null Y scroll value
	GET_ADDRESS	bankswitch_copy_022d       	| [$eb2d: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	and.b	#0xbf,d0                         	| [$eb30: and #$bf]
	       	| [$eb32: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_bank |  [$eb35: sta bankswitch_1009]
	GET_ADDRESS	logical_y_scroll_07e0      	| [$eb38: lda logical_y_scroll_07e0]
	move.b	(a0),d0                         	| [...]
	not.b	d0                               	| [$eb3b: eor #$ff]
	jbsr	osd_set_scrolly_lo |  [$eb3d: sta scrolly_lo_100e]
	rts                                    	| [$eb40: rts]
l_eb41:
	GET_ADDRESS	bankswitch_copy_022d       	| [$eb41: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	or.b	#0x40,d0                          	| [$eb44: ora #$40]
	       	| [$eb46: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_bank |  [$eb49: sta bankswitch_1009]
	clr.b	d0                               	| [$eb4c: lda #$00]
	jbsr	osd_set_scrolly_lo |  [$eb4e: sta scrolly_lo_100e]
	rts                                    	| [$eb51: rts]

* reads screen_id_07e4 to know which screen to unpack (check on top for details)
setup_background_screen_eb52:
	jbsr	set_context_scroll_and_prom_banks_eb5e	| [$eb52: jsr set_context_scroll_and_prom_banks_eb5e]
	jbsr	unpack_background_screen_ec9d     	| [$eb55: jsr unpack_background_screen_ec9d]
	clr.b	d0                               	| [$eb58: lda #$00]
	GET_ADDRESS	scroll_lock_07db                     	| [$eb5a: sta $07db]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$eb5d: rts]

* before setting up a background picture, setup scrolling X/Y
* and tiles and sprites prom bank

set_context_scroll_and_prom_banks_eb5e:
	jbsr	handle_cocktail_mode_d88f         	| [$eb5e: jsr handle_cocktail_mode_d88f]
	NEW_ADDRESS
	GET_ADDRESS	scroll_lock_07db                     	| [$eb61: lda $07db]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x07dc                     	| [$eb64: sta $07dc]
	move.b	d0,(a0)                         	| [...]
	st.b	d0                        	| [$eb67: lda #$ff]
	GET_ADDRESS	scroll_lock_07db                     	| [$eb69: sta $07db]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	bankswitch_copy_022d       	| [$eb6c: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	and.b	#0xbf,d0                         	| [$eb6f: and #$bf]
	jbsr	osd_set_bank |  [$eb71: sta bankswitch_1009]
	       	| [$eb74: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	jbsr	clear_screen_cf35                 	| [$eb77: jsr clear_screen_cf35]
	GET_ADDRESS	screen_id_07e4             	| [$eb7a: ldy screen_id_07e4]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eb7d: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0xe3,d0                         	| [$eb80: and #$e3]
	GET_ADDRESS	0xebcb                     	| [$eb82: ora $ebcb, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eb85: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$eb88: sta scrollx_hi_1008]
	GET_ADDRESS	bankswitch_copy_022d       	| [$eb8b: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	and.b	#0xdf,d0                         	| [$eb8e: and #$df]
	GET_ADDRESS	0xebde                     	| [$eb90: ora $ebde, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	bankswitch_copy_022d       	| [$eb93: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_bank |  [$eb96: sta bankswitch_1009]
	rts                                    	| [$eb99: rts]

l_eb9a:
	GET_ADDRESS	0x07dc                     	| [$eb9a: ldy $07dc]
	move.b	(a0),d2                         	| [...]
	GET_ADDRESS	scroll_lock_07db                     	| [$eb9d: sty $07db]
	move.b	d2,(a0)                         	| [...]
	GET_ADDRESS	0xebc5                     	| [$eba0: lda $ebc5, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	osd_set_scrollx_lo |  [$eba3: sta scrollx_lo_100c]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$eba6: lda scrollx_hi_copy_022c]
	move.b	(a0),d0                         	| [...]
	and.b	#0xfd,d0                         	| [$eba9: and #$fd]
	GET_ADDRESS	0xebc8                     	| [$ebab: ora $ebc8, y]
	or.b	(a0,d2.w),d0                      	| [...]
	GET_ADDRESS	scrollx_hi_copy_022c       	| [$ebae: sta scrollx_hi_copy_022c]
	move.b	d0,(a0)                         	| [...]
	jbsr	osd_set_scrollx_hi |  [$ebb1: sta scrollx_hi_1008]
	clr.b	d0                               	| [$ebb4: lda #$00]
	jbsr	osd_set_scrolly_lo |  [$ebb6: sta scrolly_lo_100e]
	GET_ADDRESS	bankswitch_copy_022d       	| [$ebb9: lda bankswitch_copy_022d]
	move.b	(a0),d0                         	| [...]
	or.b	#0x40,d0                          	| [$ebbc: ora #$40]
	jbsr	osd_set_bank |  [$ebbe: sta bankswitch_1009]
	       	| [$ebc1: sta bankswitch_copy_022d]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$ebc4: rts]

show_us_map_screen_ebf1:
	move.b	#0x0a,d0                        	| [$ebf1: lda #$0a]
	GET_ADDRESS	screen_id_07e4             	| [$ebf3: sta screen_id_07e4] US map
	move.b	d0,(a0)                         	| [...]
	jbsr	set_context_scroll_and_prom_banks_eb5e	| [$ebf6: jsr set_context_scroll_and_prom_banks_eb5e]
	jbsr	unpack_background_screen_ec9d     	| [$ebf9: jsr unpack_background_screen_ec9d]
	jbsr	l_ec2f                            	| [$ebfc: jsr $ec2f]
	movem.w	d0,-(sp)                       	| [$ebff: pha]
	tst.b	d0                               	| [$ec00: cmp #$00]
	beq	l_ec07                             	| [$ec02: beq $ec07]
	jbsr	l_eddc                            	| [$ec04: jsr $eddc]
l_ec07:
	move.w	(sp)+,d0                        	| [$ec07: pla]
	                           	| [$ec08: clc]
	add.b	#0x14,d0                        	| [$ec09: adc #$14]
	jbsr	l_ee80                            	| [$ec0b: jsr $ee80]
	jbsr	l_ec2f                            	| [$ec0e: jsr $ec2f]
	asl.b	#1,d0                            	| [$ec11: asl a]
	move.b	d0,d2                           	| [$ec12: tay]
	GET_ADDRESS	0xec25                     	| [$ec13: lda $ec25, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$ec16: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)+                         	| [...]
	                     	| [$ec19: lda $ec26, y]
	move.b	(a0,d2.w),d0                    	| [...]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$ec1c: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$ec1f: lda #$02]
	GET_ADDRESS	scroll_lock_07db                     	| [$ec21: sta $07db]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$ec24: rts]

l_ec2f:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$ec2f: lda current_level_38]
	and.b	#0x0f,d0                         	| [$ec31: and #$0f]
	move.b	d0,d2                           	| [$ec33: tay]
	GET_ADDRESS	0xec39                     	| [$ec34: lda $ec39, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$ec37: tay]
	rts                                    	| [$ec38: rts]

l_ec42:
	GET_ADDRESS	0x07e5                     	| [$ec42: lda $07e5]
	move.b	(a0)+,d0                         	| [...]
	                     	| [$ec45: cmp $07e6]
	cmp.b	(a0),d0                          	| [...]
	PUSH_SR		| save Z flag
	                     	| [$ec48: sta $07e6]
	move.b	d0,(a0)                         	| [...]
	POP_SR		| save Z flag
	jne	l_ec52                             	| [$ec4b: jne $ec52]
	cmp.b	#0x02,d0                         	| [$ec4d: cmp #$02]
	beq	l_ec81                             	| [$ec4f: beq $ec81]
	rts                                    	| [$ec51: rts]
l_ec52:
	tst.b	d0                               	| [$ec52: cmp #$00]
	jne	l_ec60                             	| [$ec54: jne $ec60]
	jbsr	l_ec2f                            	| [$ec56: jsr $ec2f]
	                           	| [$ec59: clc]
	add.b	#0x20,d0                        	| [$ec5a: adc #$20]
	jbsr	l_ee80                            	| [$ec5c: jsr $ee80]
	rts                                    	| [$ec5f: rts]
l_ec60:
	cmp.b	#0x01,d0                         	| [$ec60: cmp #$01]
	jne	l_ec81                             	| [$ec62: jne $ec81]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$ec64: lda current_level_38]
	and.b	#0x0f,d0                         	| [$ec66: and #$0f]
	                           	| [$ec68: clc]
	add.b	#0x05,d0                        	| [$ec69: adc #$05]
	jbsr	l_ee80                            	| [$ec6b: jsr $ee80]
	GET_ADDRESS	0x07e7                     	| [$ec6e: inc $07e7]
	addq.b	#1,(a0)                         	| [...]
	                     	| [$ec71: lda $07e7]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x80,d0 |  [$ec74: cmp $80]
	* bcc=>bcs (cmp above)
	jcs	l_ec80                             	| [$ec76: bcc $ec80]
	clr.b	d0                               	| [$ec78: lda #$00]
	GET_ADDRESS	0x07e5                     	| [$ec7a: sta $07e5]
	move.b	d0,(a0)                         	| [...]
	                     	| [$ec7d: sta $07e7]
	move.b	d0,(2,a0)                         	| [...]
l_ec80:
	rts                                    	| [$ec80: rts]
l_ec81:
	move.b	#0x05,d0                        	| [$ec81: lda #$05]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$ec83: sta $00]
	GET_ADDRESS	0x07e7                     	| [$ec85: lda $07e7]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$ec88: and #$04]
	beq	l_ec8e                             	| [$ec8a: beq $ec8e]
	GET_ADDRESS	0x00                       	| [$ec8c: asl $00]
	move.b	(a0),d4	| [...]
	asl.b	#1,d4                          	| [...]
	move.b	d4,(a0)	| [...]
l_ec8e:
	jbsr	l_ec2f                            	| [$ec8e: jsr $ec2f]
	and.b	#0x0f,d0                         	| [$ec91: and #$0f]
	                           	| [$ec93: clc]
	OP_R_ON_ZP_ADDRESS	add,0x00,d0 |  [$ec94: adc $00]
	jbsr	l_ee80                            	| [$ec96: jsr $ee80]
	GET_ADDRESS	0x07e7                     	| [$ec99: inc $07e7]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$ec9c: rts]

* RLE encoding or some other unpack stuff, I didn't dig into details
* it seems to be able to fill with the same value
* or fill with increasing values. As tiles follow a logic, it works
unpack_background_screen_ec9d:
	move.b	#0x01,d0                        	| [$ec9d: lda #$01]
	jbsr	set_bank_d8df                     	| [$ec9f: jsr set_bank_d8df]
	GET_BANK_ADDRESS	0x6000                     	| [$eca2: lda $6000] from bank #1 [bank_address]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$eca5: sta base_screen_pointer_list_001d]
	                     	| [$eca7: lda $6001] from bank #1 [bank_address]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$ecaa: sta $1e] now 1d points to $6006 in bank 1
	clr.b	d0                               	| [$ecac: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$ecae: sta $03]
	GET_ADDRESS	screen_id_07e4             	| [$ecb0: lda screen_id_07e4]
	move.b	(a0),d0                         	| [...]
copy_to_screen_ecb3:
	asl.b	#1,d0                            	| [$ecb3: asl a]
	move.b	d0,d2                           	| [$ecb4: tay]
* fetch the proper source depending on background id
	GET_INDIRECT_BANK_ADDRESS	0x1d              	| [$ecb5: lda ($1d), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ecb7: sta screen_source_pointer_0010]
	addq.b	#1,d2                           	| [$ecb9: iny]
	              	| [$ecba: lda ($1d), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ecbc: sta $11] now points to for ex: 7e4==f => 676C (title)
l_ecbe:
	clr.b	d2                               	| [$ecbe: ldy #$00]
l_ecc0:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ecc0: lda (screen_source_pointer_0010), y] [bank_address] get first byte, block ident
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ecc2: iny]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$ecc3: sta $01] store it in $1
	tst.b	d0                               	| [$ecc5: cmp #$00]
	jne	l_eccf                             	| [$ecc7: jne $eccf]
	jbsr	l_edb5                            	| [$ecc9: jsr $edb5]
	jra	l_ecc0                             	| [$eccc: jra $ecc0]

l_eccf:
	cmp.b	#0xff,d0                         	| [$eccf: cmp #$ff]
	jne	l_ecd6                             	| [$ecd1: jne $ecd6]
	jra	unpack_end_edaf                    	| [$ecd3: jra unpack_end_edaf] ident==$ff end of sequence
l_ecd6:
	cmp.b	#0xfe,d0                         	| [$ecd6: cmp #$fe]
	jne	l_ece8                             	| [$ecd8: jne $ece8]
* ident==$fe: load a new pointer and continue
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ecda: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$ecdc: pha]
	addq.b	#1,d2                           	| [$ecdd: iny]
		| [$ecde: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ece0: sta $11]
	move.w	(sp)+,d0                        	| [$ece2: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ece3: sta screen_source_pointer_0010]
	jra	l_ecbe                             	| [$ece5: jra $ecbe]

* get data
l_ece8:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ece8: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$ecea: sta multipurpose_12] tile code => $2xxx
	addq.b	#1,d2                           	| [$ecec: iny]
		| [$eced: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$ecef: sta multipurpose_13] tile attribute => $3xxx
	addq.b	#1,d2                           	| [$ecf1: iny]
* get data destination (screen address)
l_ecf2:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ecf2: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$ecf4: sta $1c]
	addq.b	#1,d2                           	| [$ecf6: iny]
		| [$ecf7: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ecf9: iny]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$ecfa: sta base_screen_pointer_list_001d]
	OP_R_ON_ZP_ADDRESS	or,0x1c,d0 |  [$ecfc: ora $1c]
	jne	l_ed06                             	| [$ecfe: jne $ed06]
	jbsr	l_edb5                            	| [$ed00: jsr $edb5]
	jra	l_ecf2                             	| [$ed03: jra $ecf2]
l_ed06:
	OP_R_ON_ZP_ADDRESS	move,0x1c,d0 |  [$ed06: lda $1c]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ed08: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$ed0a: lda base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$ed0c: sta $15]
l_ed0e:
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ed0e: lda multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$ed10: sta screen_attribute_dest_address_16]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$ed12: lda $15]
	                           	| [$ed14: clc]
	add.b	#0x10,d0                        	| [$ed15: adc #$10]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$ed17: sta $17]
l_ed19:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ed19: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ed1b: iny]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$ed1c: sta unpack_mode_and_misc_02]
	and.b	#0x7f,d0                         	| [$ed1e: and #$7f]
	move.b	d0,d1                           	| [$ed20: tax]
	OP_W_ON_ZP_ADDRESS	move,0x00,d2 |  [$ed21: sty $00]
	tst.b	d1                               	| [$ed23: cpx #$00]
	jne	l_ed2d                             	| [$ed25: jne $ed2d]
	jbsr	l_edb5                            	| [$ed27: jsr $edb5]
	jra	l_ed19                             	| [$ed2a: jra $ed19]
l_ed2d:
	clr.b	d2                               	| [$ed2d: ldy #$00]
l_ed2f:
	OP_R_ON_ZP_ADDRESS	move,multipurpose_12,d0 |  [$ed2f: lda multipurpose_12]
* now copy tile & attribute
	GET_INDIRECT_UNCHECKED_ADDRESS	0x14              	| [$ed31: sta ($14), y] [unchecked_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$ed33: lda multipurpose_13]
	GET_INDIRECT_UNCHECKED_ADDRESS	0x16              	| [$ed35: sta ($16), y] [video_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	add.w	d2,a0 | [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d2                           	| [$ed37: iny]
	GET_ADDRESS	unpack_mode_and_misc_02    	| [$ed38: bit unpack_mode_and_misc_02] test command
	BIT	(a0)                               	| [...]
	bmi	l_ed42                             	| [$ed3a: bmi $ed42] negative: RLE: X is the number of repeats
* positive: increase tile value X times
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_12,#1 |  [$ed3c: inc multipurpose_12]
	jne	l_ed42                             	| [$ed3e: jne $ed42]
* wrap: increase attribute (which is actually tile MSB)
	OP_W_ON_ZP_ADDRESS	addq,multipurpose_13,#1 |  [$ed40: inc multipurpose_13]
l_ed42:
	subq.b	#1,d1                           	| [$ed42: dex]
	jne	l_ed2f                             	| [$ed43: jne $ed2f]
	move.b	#0x20,d0                        	| [$ed45: lda #$20]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ed47: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$ed49: ldy $00]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ed4b: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ed4d: iny]
	move.b	d0,d1                           	| [$ed4e: tax]
	cmp.b	#0x80,d0                         	| [$ed4f: cmp #$80]
	jne	l_ed62                             	| [$ed51: jne $ed62]
	 |  [$ed53: lda multipurpose_14]
	                         	| [$ed55: and #$e0]
	OP_W_ON_ZP_ADDRESS	and,multipurpose_14,#0xe0 |  [$ed57: sta multipurpose_14]
	 |  [$ed59: lda $15]
	                        	| [$ed5b: eor #$04]
	OP_W_ON_ZP_ADDRESS	eor,0x15,#0x04 |  [$ed5d: sta $15]
	jra	l_ed0e                             	| [$ed5f: jra $ed0e]
l_ed62:
	and.b	#0xf0,d0                         	| [$ed62: and #$f0]
	cmp.b	#0x80,d0                         	| [$ed64: cmp #$80]
	jne	l_ed73                             	| [$ed66: jne $ed73]
	move.b	d1,d0                           	| [$ed68: txa]
	and.b	#0x0f,d0                         	| [$ed69: and #$0f]
	                           	| [$ed6b: clc]
	OP_R_ON_ZP_ADDRESS	add,multipurpose_14,d0 |  [$ed6c: adc multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ed6e: sta multipurpose_14]
	jra	l_ed0e                             	| [$ed70: jra $ed0e]
l_ed73:
	move.b	d1,d0                           	| [$ed73: txa]
	                           	| [$ed74: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1b,d0 |  [$ed75: adc $1b]
	bpl	l_ed7b                             	| [$ed77: bpl $ed7b]
	and.b	#0x1f,d0                         	| [$ed79: and #$1f]
l_ed7b:
	                           	| [$ed7b: clc]
	OP_R_ON_ZP_ADDRESS	add,0x1c,d0 |  [$ed7c: adc $1c]
	OP_W_ON_ZP_ADDRESS	move,0x1c,d0 |  [$ed7e: sta $1c]
	OP_R_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$ed80: lda base_screen_pointer_list_001d]
	moveq	#0x00,d4	| [$ed82: adc #$00]
	addx.b	d4,d0                        	| [$ed82: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$ed84: sta base_screen_pointer_list_001d]
	OP_W_ON_ZP_ADDRESS	subq,0x01,#1 |  [$ed86: dec $01]
	beq	l_ed8d                             	| [$ed88: beq $ed8d]
	jra	l_ed06                             	| [$ed8a: jra $ed06]
l_ed8d:
	OP_R_ON_ZP_ADDRESS	move,0x03,d1 |  [$ed8d: ldx $03]
	beq	l_eda0                             	| [$ed8f: beq $eda0]
	OP_R_ON_ZP_ADDRESS	move,0x0c,d0 |  [$ed91: lda $0c]
	move.b	d0,d2                           	| [$ed93: tay]
	OP_R_ON_ZP_ADDRESS	move,0x04,d0 |  [$ed94: lda $04]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ed96: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x05,d0 |  [$ed98: lda $05]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ed9a: sta $11]
	clr.b	d0                               	| [$ed9c: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$ed9e: sta $03]
l_eda0:
	move.b	d2,d0                           	| [$eda0: tya]
	                           	| [$eda1: clc]
	OP_R_ON_ZP_ADDRESS	add,screen_source_pointer_0010,d0 |  [$eda2: adc screen_source_pointer_0010]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$eda4: sta screen_source_pointer_0010]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$eda6: lda $11]
	moveq	#0x00,d4	| [$eda8: adc #$00]
	addx.b	d4,d0                        	| [$eda8: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$edaa: sta $11]
	jra	l_ecbe                             	| [$edac: jra $ecbe]

unpack_end_edaf:
	clr.b	d0                               	| [$edaf: lda #$00]
	jbsr	set_bank_d8df                     	| [$edb1: jsr set_bank_d8df]
	rts                                    	| [$edb4: rts]

l_edb5:
	move.b	d2,d0                           	| [$edb5: tya]
	movem.w	d0,-(sp)                       	| [$edb6: pha]
	OP_R_ON_ZP_ADDRESS	move,0x03,d0 |  [$edb7: lda $03]
	asl.b	#1,d0                            	| [$edb9: asl a]
	move.b	d0,d2                           	| [$edba: tay]
	OP_R_ON_ZP_ADDRESS	move,0x03,d1 |  [$edbb: ldx $03]
	OP_R_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$edbd: lda screen_source_pointer_0010]
	GET_ADDRESS	0x0004                     	| [$edbf: sta $0004, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_R_ON_ZP_ADDRESS	move,0x11,d0 |  [$edc2: lda $11]
	GET_ADDRESS	0x0005                     	| [$edc4: sta $0005, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.w	(sp)+,d0                        	| [$edc7: pla]
	move.b	d0,d2                           	| [$edc8: tay]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$edc9: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$edcb: iny]
	movem.w	d0,-(sp)                       	| [$edcc: pha]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$edcd: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$edcf: iny]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$edd0: sta $11]
	move.w	(sp)+,d0                        	| [$edd2: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$edd3: sta screen_source_pointer_0010]
	GET_ADDRESS	0x0c                       	| [$edd5: sty $0c, x]
    move.b	d2,(a0,d1.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	addq,0x03,#1 |  [$edd7: inc $03]
	clr.b	d2                               	| [$edd9: ldy #$00]
	rts                                    	| [$eddb: rts]

l_eddc:
	movem.w	d0,-(sp)                       	| [$eddc: pha]
	move.b	#0x01,d0                        	| [$eddd: lda #$01]
	jbsr	set_bank_d8df                     	| [$eddf: jsr set_bank_d8df]
	move.w	(sp)+,d0                        	| [$ede2: pla]
	asl.b	#1,d0                            	| [$ede3: asl a]
	move.b	d0,d2                           	| [$ede4: tay]
	GET_BANK_ADDRESS	0x6002                     	| [$ede5: lda $6002] [bank_address]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ede8: sta screen_source_pointer_0010]
											| [$edea: lda $6003] [bank_address]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$eded: sta $11]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$edef: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$edf1: pha]
	addq.b	#1,d2                           	| [$edf2: iny]
		| [$edf3: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$edf5: sta $11]
	move.w	(sp)+,d0                        	| [$edf7: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$edf8: sta screen_source_pointer_0010]
l_edfa:
	clr.b	d2                               	| [$edfa: ldy #$00]
l_edfc:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$edfc: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$edfe: iny]
	OP_W_ON_ZP_ADDRESS	move,0x01,d0 |  [$edff: sta $01]
	tst.b	d0                               	| [$ee01: cmp #$00]
	jne	l_ee13                             	| [$ee03: jne $ee13]
		| [$ee05: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	movem.w	d0,-(sp)                       	| [$ee07: pha]
	addq.b	#1,d2                           	| [$ee08: iny]
		| [$ee09: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x11,d0 |  [$ee0b: sta $11]
	move.w	(sp)+,d0                        	| [$ee0d: pla]
	OP_W_ON_ZP_ADDRESS	move,screen_source_pointer_0010,d0 |  [$ee0e: sta screen_source_pointer_0010]
	jra	l_edfa                             	| [$ee10: jra $edfa]
l_ee13:
	cmp.b	#0xff,d0                         	| [$ee13: cmp #$ff]
	jne	l_ee1d                             	| [$ee15: jne $ee1d]
	clr.b	d0                               	| [$ee17: lda #$00]
	jbsr	set_bank_d8df                     	| [$ee19: jsr set_bank_d8df]
	rts                                    	| [$ee1c: rts]

l_ee1d:
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ee1d: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ee1f: iny]
	OP_W_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d0 |  [$ee20: sta unpack_mode_and_misc_02]
		| [$ee22: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ee24: iny]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ee25: sta multipurpose_14]
		| [$ee27: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	addq.b	#1,d2                           	| [$ee29: iny]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$ee2a: sta $15]
		| [$ee2c: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$ee2e: sta multipurpose_13]
	addq.b	#1,d2                           	| [$ee30: iny]
	OP_W_ON_ZP_ADDRESS	move,0x00,d2 |  [$ee31: sty $00]
l_ee33:
	clr.b	d0                               	| [$ee33: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x1b,d0 |  [$ee35: sta $1b]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ee37: lda multipurpose_14]
	OP_W_ON_ZP_ADDRESS	move,screen_attribute_dest_address_16,d0 |  [$ee39: sta screen_attribute_dest_address_16]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$ee3b: lda $15]
	                           	| [$ee3d: clc]
	add.b	#0x10,d0                        	| [$ee3e: adc #$10]
	OP_W_ON_ZP_ADDRESS	move,0x17,d0 |  [$ee40: sta $17]
	OP_R_ON_ZP_ADDRESS	move,unpack_mode_and_misc_02,d1 |  [$ee42: ldx unpack_mode_and_misc_02]
l_ee44:
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$ee44: ldy $00]
	GET_INDIRECT_BANK_ADDRESS	screen_source_pointer_0010	| [$ee46: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	cmp.b	#0xff,d0                         	| [$ee48: cmp #$ff]
	beq	l_ee63                             	| [$ee4a: beq $ee63]
	cmp.b	#0xfe,d0                         	| [$ee4c: cmp #$fe]
	jne	l_ee5b                             	| [$ee4e: jne $ee5b]
	addq.b	#1,d2                           	| [$ee50: iny]
		| [$ee51: lda (screen_source_pointer_0010), y] [bank_address]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$ee53: sta multipurpose_13]
	OP_W_ON_ZP_ADDRESS	addq,0x00,#2 |  [$ee55: inc $00]
	 |  [$ee57: inc $00]
	jne	l_ee44                             	| [$ee59: jne $ee44]
l_ee5b:
	OP_R_ON_ZP_ADDRESS	move,0x1b,d2 |  [$ee5b: ldy $1b]
	GET_INDIRECT_UNCHECKED_ADDRESS	0x14              	| [$ee5d: sta ($14), y] [unchecked_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_13,d0 |  [$ee5f: lda multipurpose_13]
	GET_INDIRECT_UNCHECKED_ADDRESS	0x16              	| [$ee61: sta ($16), y] [video_address]
	move.b	d0,(a0,d2.w)                    	| [...]
	add.w	d2,a0 | [...]
	VIDEO_BYTE_DIRTY | [...]
l_ee63:
	OP_W_ON_ZP_ADDRESS	addq,0x00,#1 |  [$ee63: inc $00]
	OP_W_ON_ZP_ADDRESS	addq,0x1b,#1 |  [$ee65: inc $1b]
	subq.b	#1,d1                           	| [$ee67: dex]
	jne	l_ee44                             	| [$ee68: jne $ee44]
	OP_R_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ee6a: lda multipurpose_14]
	                           	| [$ee6c: clc]
	add.b	#0x20,d0                        	| [$ee6d: adc #$20]
	OP_W_ON_ZP_ADDRESS	move,multipurpose_14,d0 |  [$ee6f: sta multipurpose_14]
	OP_R_ON_ZP_ADDRESS	move,0x15,d0 |  [$ee71: lda $15]
	moveq	#0x00,d4	| [$ee73: adc #$00]
	addx.b	d4,d0                        	| [$ee73: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,0x15,d0 |  [$ee75: sta $15]
	OP_W_ON_ZP_ADDRESS	subq,0x01,#1 |  [$ee77: dec $01]
	jne	l_ee33                             	| [$ee79: jne $ee33]
	OP_R_ON_ZP_ADDRESS	move,0x00,d2 |  [$ee7b: ldy $00]
	jra	l_edfc                             	| [$ee7d: jra $edfc]
l_ee80:
	movem.w	d0,-(sp)                       	| [$ee80: pha]
	move.b	#0x01,d0                        	| [$ee81: lda #$01]
	jbsr	set_bank_d8df                     	| [$ee83: jsr set_bank_d8df]
	GET_BANK_ADDRESS	0x6004                     	| [$ee86: lda $6004] [bank_address]
	move.b	(a0)+,d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,base_screen_pointer_list_001d,d0 |  [$ee89: sta base_screen_pointer_list_001d]
	                     	| [$ee8b: lda $6005] [bank_address]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x1e,d0 |  [$ee8e: sta $1e]
	clr.b	d0                               	| [$ee90: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x03,d0 |  [$ee92: sta $03]
	move.w	(sp)+,d0                        	| [$ee94: pla]
* fill the rest of the screen with blue sky
	jbsr	copy_to_screen_ecb3               	| [$ee95: jsr copy_to_screen_ecb3]
	clr.b	d0                               	| [$ee98: lda #$00]
	jbsr	set_bank_d8df                     	| [$ee9a: jsr set_bank_d8df]
	rts                                    	| [$ee9d: rts]

nmi_ee9e:
	* call "fast" irq first, but just once in a while, should be enough
	jbsr	irq_eea4
	* now proceed to standard 1/60th second irq	
	jra	nmi_eee0                             	| [$ee9e: jra $eee0]

reset_eea1:
	tst.b	max_score
	jne		0f
	move.b	#MAX_SCORE,max_score
	move.b	#APPROACHING_MAX_SCORE,critical_score
0:
	jra	reset_ef0d                         	| [$eea1: jra reset_ef0d]

irq_eea4:
	jbsr	update_scrolling_ea7c             	| [$eeab: jsr update_scrolling_ea7c]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$eeb4: lda nb_credits_0035]
	move.w	d0,-(sp)                       	| [$eeb6: pha]
	                        	| [$eeb7: txa]
	                       	| [$eeb8: pha]
	                        	| [$eeb9: tya]
	                       	| [$eeba: pha]
	jbsr	play_sound_if_needed_d7d0         	| [$eebb: jsr play_sound_if_needed_d7d0]
	jbsr	check_coin_inserted_f715          	| [$eebe: jsr check_coin_inserted_f715]
	move.w	(sp)+,d0                        	| [$eec1: pla]
	                    	| [$eec2: tay]
	                    	| [$eec3: pla]
	                    	| [$eec4: tax]
	                    	| [$eec5: pla]
	OP_R_ON_ZP_ADDRESS	cmp,nb_credits_0035,d0 |  [$eec6: cmp nb_credits_0035]
	jeq	l_eedb                             	| [$eec8: beq $eedb]
	* number of credits has changed: quit!!
	OP_R_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$eeca: lda game_playing_flag_36]
	GET_ADDRESS	0x07f9                     	| [$eecc: ora $07f9]
	or.b	(a0),d0                           	| [...]
	jne	l_eedb                             	| [$eecf: jne $eedb]
* number of credits > 0: branch on player select screen
* recovering from interrupts and escaping from the irq
	jbsr	escape_from_irq |  [$eed1: ldx #$ff] set top of the stack
* ack interrupt
l_eedb:
	rts |  [$eedf: rti]
	
	
nmi_eee0:
	* no need to save registers, the host layer handles that
	                       	| [$eee0: pha]
	                        	| [$eee1: txa]
	                       	| [$eee2: pha]
	                        	| [$eee3: tya]
	                       	| [$eee4: pha]
	OP_W_ON_ZP_ADDRESS	addq,0x30,#1 |  [$eee5: inc $30]
	OP_R_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$eee7: lda toggle_timer_2f]
	cmp.b	#0x5a,d0                         	| [$eee9: cmp #$5a]
	jne	wait_for_vblank_eef9               	| [$eeeb: jne wait_for_vblank_eef9]
* probably a delay?? WTF???
	jbsr	copy_shadow_sprites_d1b7          	| [$eeed: jsr copy_shadow_sprites_d1b7]
	clr.b	d0                               	| [$eef0: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$eef2: sta toggle_timer_2f]
	OP_W_ON_ZP_ADDRESS	move,0x30,d0 |  [$eef4: sta $30]
	jbsr	l_ea6b                            	| [$eef6: jsr $ea6b]
* wait for vblank sync
wait_for_vblank_eef9:
	 |  [$eef9: lda system_1002]
	 |  [$eefc: and #$08]
	 |  [$eefe: jne wait_for_vblank_eef9]
* end of interrupt
	clr.b	d0                               	| [$ef00: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,irq_07_counter_31,d0 |  [$ef02: sta irq_07_counter_31]
	 |  [$ef04: sta irq_ack_100a]
	                       	| [$ef07: pla]
	                       	| [$ef08: tay]
	                       	| [$ef09: pla]
	                       	| [$ef0a: tax]
	                       	| [$ef0b: pla]
	rts |  [$ef0c: rti]
	
reset_ef0d:
	SET_I_FLAG                             	| [$ef0d: sei] no interrupts
	 |  [$ef0e: cld] no decimal mode
	                        	| [$ef0f: ldx #$ff] stack top
	 |  [$ef11: txs]
	move.b	#0x18,d0                        	| [$ef12: lda #$18]
	jbsr	osd_set_bank |  [$ef14: sta bankswitch_1009] bank 0
	jbsr	l_cf0c                            	| [$ef17: jsr $cf0c]
	move.b	#0x08,d0                        	| [$ef1a: lda #$08]
	jbsr	l_cf16                            	| [$ef1c: jsr $cf16]
	jbsr	clear_screen_cf35                 	| [$ef1f: jsr clear_screen_cf35]
	jbsr	l_cf73                            	| [$ef22: jsr $cf73]
	st.b	d0                        	| [$ef25: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x42,d0 |  [$ef27: sta $42]
	OP_W_ON_ZP_ADDRESS	move,0x43,d0 |  [$ef29: sta $43]
	OP_W_ON_ZP_ADDRESS	move,0x44,d0 |  [$ef2b: sta $44]
	OP_W_ON_ZP_ADDRESS	move,0x45,d0 |  [$ef2d: sta $45]
	CLR_I_FLAG                             	| [$ef2f: cli]
	 |  [$ef30: sta irq_ack_100a]
	 |  [$ef33: sta irq_ack_100b]
	move.b	#0x02,d0                        	| [$ef36: lda #$02]
	GET_ADDRESS	tile_prom_bank_07f3        	| [$ef38: sta tile_prom_bank_07f3]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$ef3b: lda #$00]
	GET_ADDRESS	sprite_prom_bank_07f4      	| [$ef3d: sta sprite_prom_bank_07f4]
	move.b	d0,(a0)                         	| [...]
	jbsr	update_prom_banks_d8a2            	| [$ef40: jsr update_prom_banks_d8a2]
	jbsr	handle_cocktail_mode_d88f         	| [$ef43: jsr handle_cocktail_mode_d88f]
	jbsr	reset_scrolling_eae2              	| [$ef46: jsr reset_scrolling_eae2]
	clr.b	d0                               	| [$ef49: lda #$00]
	jbsr	osd_sound_start |  [$ef4b: sta sound_100d] stop all sounds
	move.b	#0x02,d0                        	| [$ef4e: lda #$02]
	jbsr	l_d82b                            	| [$ef50: jsr $d82b]
l_ef53:
	move.b	#0x05,d0                        	| [$ef53: lda #$05]
	jbsr	queue_sound_d7b8                  	| [$ef55: jsr queue_sound_d7b8] play intro music
	clr.b	d0                               	| [$ef58: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$ef5a: sta game_playing_flag_36] game not playing
	GET_ADDRESS	scroll_lock_07db                     	| [$ef5c: sta $07db]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cf73                            	| [$ef5f: jsr $cf73]
	jbsr	handle_cocktail_mode_d88f         	| [$ef62: jsr handle_cocktail_mode_d88f]
	move.b	#0x0f,d0                        	| [$ef65: lda #$0f]
	GET_ADDRESS	screen_id_07e4             	| [$ef67: sta screen_id_07e4]
	move.b	d0,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$ef6a: jsr setup_background_screen_eb52]
	move.b	#0x01,d0                        	| [$ef6d: lda #$01]
	jbsr	write_message_da7f                	| [$ef6f: jsr write_message_da7f]
	jbsr	l_eb9a                            	| [$ef72: jsr $eb9a]
	clr.b	d0                               	| [$ef75: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$ef77: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
l_ef7a:
	clr.b	d2                               	| [$ef7a: ldy #$00]
	                 	| [$ef7c: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	and.b	#0x20,d0                         	| [$ef7f: and #$20]
	jne	l_ef85                             	| [$ef81: jne $ef85]
	move.b	#0x80,d2                        	| [$ef83: ldy #$80]
l_ef85:
	move.b	d2,d0                           	| [$ef85: tya]
	jbsr	write_message_da7f                	| [$ef86: jsr write_message_da7f]
	jbsr	sync_d822                         	| [$ef89: jsr sync_d822]
	GET_ADDRESS	timer_07f5                 	| [$ef8c: inc timer_07f5]
	addq.b	#1,(a0)                         	| [...]
	jne	l_ef7a                             	| [$ef8f: jne $ef7a]
	jra	l_efeb                             	| [$ef91: jra $efeb]
	clr.b	d0                               	| [$ef94: lda #$00]
	GET_ADDRESS	scroll_lock_07db                     	| [$ef96: sta $07db]
	move.b	d0,(a0)                         	| [...]
	jbsr	reset_scrolling_eae2              	| [$ef99: jsr reset_scrolling_eae2]
	move.b	#0x06,d0                        	| [$ef9c: lda #$06]
	GET_ADDRESS	screen_id_07e4             	| [$ef9e: sta screen_id_07e4]
	move.b	d0,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$efa1: jsr setup_background_screen_eb52]
	move.b	#0x19,d0                        	| [$efa4: lda #$19]
	jbsr	l_ee80                            	| [$efa6: jsr $ee80]
	move.b	#0x06,d0                        	| [$efa9: lda #$06]
	jbsr	write_message_da7f                	| [$efab: jsr write_message_da7f]
	jbsr	l_eb9a                            	| [$efae: jsr $eb9a]
	move.b	#0xf0,d0                        	| [$efb1: lda #$f0]
	jbsr	l_d82b                            	| [$efb3: jsr $d82b]
	move.b	#0x80,d0                        	| [$efb6: lda #$80]
	jbsr	l_d82b                            	| [$efb8: jsr $d82b]
	GET_ADDRESS	screen_id_07e4             	| [$efbb: inc screen_id_07e4]
	addq.b	#1,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$efbe: jsr setup_background_screen_eb52]
	move.b	#0x19,d0                        	| [$efc1: lda #$19]
	jbsr	l_ee80                            	| [$efc3: jsr $ee80]
	move.b	#0x07,d0                        	| [$efc6: lda #$07]
	jbsr	write_message_da7f                	| [$efc8: jsr write_message_da7f]
	jbsr	l_eb9a                            	| [$efcb: jsr $eb9a]
	move.b	#0xf0,d0                        	| [$efce: lda #$f0]
	jbsr	l_d82b                            	| [$efd0: jsr $d82b]
	move.b	#0x80,d0                        	| [$efd3: lda #$80]
	jbsr	l_d82b                            	| [$efd5: jsr $d82b]
	GET_ADDRESS	screen_id_07e4             	| [$efd8: inc screen_id_07e4]
	addq.b	#1,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$efdb: jsr setup_background_screen_eb52]
	jbsr	l_eb9a                            	| [$efde: jsr $eb9a]
	move.b	#0xf0,d0                        	| [$efe1: lda #$f0]
	jbsr	l_d82b                            	| [$efe3: jsr $d82b]
	move.b	#0x80,d0                        	| [$efe6: lda #$80]
	jbsr	l_d82b                            	| [$efe8: jsr $d82b]
l_efeb:
	jbsr	l_f316                            	| [$efeb: jsr $f316]
* demo mode show hawaii level
	move.b	#0x03,d0                        	| [$efee: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$eff0: sta current_level_38]
	jra	l_f1a7                             	| [$eff2: jra $f1a7]
l_eff5:
	OP_R_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$eff5: lda game_playing_flag_36]
	jne	l_f000                             	| [$eff7: jne $f000]
* set start level at first level
	move.b	start_level_flag,d0 |  [$eff9: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$effb: sta current_level_38]
	jbsr	l_f316                            	| [$effd: jsr $f316]
l_f000:
	move.b	#0x08,d0                        	| [$f000: lda #$08]
	jbsr	l_d82b                            	| [$f002: jsr $d82b]
	move.b	#0x1f,d0                        	| [$f005: lda #$1f]
	jbsr	queue_sound_d7b8                  	| [$f007: jsr queue_sound_d7b8]
	move.b	#0x07,d0                        	| [$f00a: lda #$07]
	jbsr	l_cf16                            	| [$f00c: jsr $cf16]
	move.b	#0x4c,d1                        	| [$f00f: ldx #$4c]
	jbsr	l_cf0e                            	| [$f011: jsr $cf0e]
	GET_ADDRESS	0x07f9                     	| [$f014: lda $07f9]
	move.b	(a0),d0                         	| [...]
	or.b	#0x01,d0                          	| [$f017: ora #$01]
											| [$f019: sta $07f9]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cf73                            	| [$f01c: jsr $cf73]
	move.b	#0x02,d0                        	| [$f01f: lda #$02]
	jbsr	queue_sound_d7b8                  	| [$f021: jsr queue_sound_d7b8] select player music
	jbsr	handle_cocktail_mode_d88f         	| [$f024: jsr handle_cocktail_mode_d88f]
	move.b	#0x12,d0                        	| [$f027: lda #$12]
	GET_ADDRESS	screen_id_07e4             	| [$f029: sta screen_id_07e4]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$f02c: lda #$00]
	GET_ADDRESS	scroll_lock_07db                     	| [$f02e: sta $07db]
	move.b	d0,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$f031: jsr setup_background_screen_eb52]
	move.b	#0x05,d0                        	| [$f034: lda #$05]
	jbsr	write_message_da7f                	| [$f036: jsr write_message_da7f]
	jbsr	l_eb9a                            	| [$f039: jsr $eb9a]
	jbsr	reset_scrolling_eae2              	| [$f03c: jsr reset_scrolling_eae2]
	move.b	#0x01,d0                        	| [$f03f: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f041: sta game_state_bits_46]
	st.b	d0                        	| [$f043: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x4f,d0 |  [$f045: sta $4f]
	jbsr	l_af64                            	| [$f047: jsr $af64]
* init select timer
	clr.b	d0                               	| [$f04a: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f04c: sta player_select_timer_lsb_54]
	move.b	#0x10,d0                        	| [$f04e: lda #$10]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f050: sta player_select_timer_seconds_55]
	move.b	#0x80,d0                        	| [$f052: lda #$80]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$f054: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)+                         	| [...]
	clr.b	d0                               	| [$f057: lda #$00]
						| [$f059: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)+                         	| [...]
	move.b	#0xd0,d0                        	| [$f05c: lda #$d0]
	      	| [$f05e: sta logical_y_scroll_07e0]
	move.b	d0,(a0)+                         	| [...]
	st.b	d0                        	| [$f061: lda #$ff]
	                     	| [$f063: sta $07e1]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$f066: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,ball_kind_of_z_cb,d0 |  [$f068: sta ball_kind_of_z_cb]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_x_93,d0 |  [$f06a: sta ball_logical_x_93]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_z_e7,d0 |  [$f06c: sta ball_logical_z_e7]
	OP_W_ON_ZP_ADDRESS	move,0xf5,d0 |  [$f06e: sta $f5]
	move.b	#0x01,d0                        	| [$f070: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,ball_side_a1,d0 |  [$f072: sta ball_side_a1]
	move.b	#0xb0,d0                        	| [$f074: lda #$b0]
	OP_W_ON_ZP_ADDRESS	move,ball_logical_y_bd,d0 |  [$f076: sta ball_logical_y_bd]
	move.b	#0x30,d0                        	| [$f078: lda #$30]
	OP_W_ON_ZP_ADDRESS	move,0x69,d0 |  [$f07a: sta $69]
	move.b	#0x89,d0                        	| [$f07c: lda #$89]
	OP_W_ON_ZP_ADDRESS	move,0x77,d0 |  [$f07e: sta $77]
	clr.b	d0                               	| [$f080: lda #$00]
	GET_ADDRESS	sprite_prom_bank_07f4      	| [$f082: sta sprite_prom_bank_07f4]
	move.b	d0,(a0)                         	| [...]
	jbsr	update_sprite_prom_bank_d8c5      	| [$f085: jsr update_sprite_prom_bank_d8c5]
	move.b	#0x03,d1                        	| [$f088: ldx #$03]
l_f08a:
	move.b	d1,d0                           	| [$f08a: txa]
	lsr.b	#1,d0                            	| [$f08b: lsr a]
	move.b	d0,d2                           	| [$f08c: tay]
	GET_ADDRESS	0x0047                     	| [$f08d: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_f097                             	| [$f090: bpl $f097]
	move.b	#0xc0,d0                        	| [$f092: lda #$c0]
	GET_ADDRESS	0x030a                     	| [$f094: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_f097:
	subq.b	#1,d1                           	| [$f097: dex]
	bpl	l_f08a                             	| [$f098: bpl $f08a]
	jbsr	l_d8ef                            	| [$f09a: jsr $d8ef]
l_f09d:
	move.b	#0x07,d0                        	| [$f09d: lda #$07]
	jbsr	l_d9a6                            	| [$f09f: jsr $d9a6]
	move.b	#0x03,d2                        	| [$f0a2: ldy #$03]
	GET_ADDRESS	timer_07f5                 	| [$f0a4: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$f0a7: and #$10]
	jne	l_f0ad                             	| [$f0a9: jne $f0ad]
* "push start button" message flashing
	move.b	#0x83,d2                        	| [$f0ab: ldy #$83]
l_f0ad:
	move.b	d2,d0                           	| [$f0ad: tya]
	jbsr	write_message_da7f                	| [$f0ae: jsr write_message_da7f]
	clr.b	d0                               	| [$f0b1: lda #$00]
	GET_ADDRESS	0x06da                     	| [$f0b3: sta $06da]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_a645                            	| [$f0b6: jsr $a645]
	jbsr	most_of_players_moves_and_draw_ae6a	| [$f0b9: jsr most_of_players_moves_and_draw_ae6a]
	jbsr	l_e6cc                            	| [$f0bc: jsr $e6cc]
* ball!
	move.b	#0x04,d1                        	| [$f0bf: ldx #$04]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$f0c1: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$f0c3: jsr convert_logical_to_screen_coords_dff3]
	jbsr	clear_rest_of_sprites_cf59        	| [$f0c6: jsr clear_rest_of_sprites_cf59]
	move.b	#0x5a,d0                        	| [$f0c9: lda #$5a]
	OP_W_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$f0cb: sta toggle_timer_2f]
l_f0cd:
	OP_R_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$f0cd: lda toggle_timer_2f]
	jne	l_f0cd                             	| [$f0cf: jne $f0cd]
	GET_ADDRESS	timer_07f5                 	| [$f0d1: inc timer_07f5]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_d8ef                            	| [$f0d4: jsr $d8ef]
	jbsr	osd_read_dsw1 |  [$f0d7: lda dsw1_1003]
	bmi	l_f0df                             	| [$f0da: bmi $f0df]
* only 2 players set in DSW: depending on start button pressed
* we know which players are in play (1P, 2P, CPU)
	jra	l_f1b5                             	| [$f0dc: jra $f1b5]
l_f0df:
	GET_ADDRESS	player_2_controls_022f     	| [$f0df: lda player_2_controls_022f]
	move.b	(a0),d0                         	| [...]
	bpl	l_f10b                             	| [$f0e2: bpl $f10b]
	move.b	#0x02,d0                        	| [$f0e4: lda #$02]
	SET_XC_FLAGS                           	| [$f0e6: sec]
	SBC	0x37                               	| [$f0e7: sbc $37]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$f0e9: sta $00]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f0eb: lda nb_credits_0035]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$f0ed: cmp $00]
	* bcc=>bcs (cmp above)
	jcs	l_f13d                             	| [$f0ef: bcc $f13d]
	move.b	#0x80,d0                        	| [$f0f1: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,0x47,d0 |  [$f0f3: sta $47]
	OP_W_ON_ZP_ADDRESS	move,0x48,d0 |  [$f0f5: sta $48]
	move.l	#0xc0c0c0c0,d0                        	| [$f0f7: lda #$c0]
	GET_ADDRESS	0x030a                     	| [$f0f9: sta $030a]
	move.l	d0,(a0)+                         	| [...]
	                     	| [$f0fc: sta $030b]
	                     	| [$f0ff: sta $030c]
	                     	| [$f102: sta $030d]
	moveq	#0x02,d0                        	| [$f105: lda #$02]
	OP_W_ON_ZP_ADDRESS	move,0x37,d0 |  [$f107: sta $37]
	jne	l_f12a                             	| [$f109: jne $f12a]
* check for start button
l_f10b:
	GET_ADDRESS	player_1_controls_022e     	| [$f10b: lda player_1_controls_022e]
	move.b	(a0),d0                         	| [...]
	bpl	l_f13d                             	| [$f10e: bpl $f13d]
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$f110: lda $37]
	jne	l_f171                             	| [$f112: jne $f171]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f114: lda nb_credits_0035]
	beq	l_f13d                             	| [$f116: beq $f13d]
	move.b	#0x80,d0                        	| [$f118: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,0x47,d0 |  [$f11a: sta $47]
	move.w	#0xc0c0,d0                        	| [$f11c: lda #$c0]
	GET_ADDRESS	0x030a                     	| [$f11e: sta $030a]
	move.w	d0,(a0)+                         	| [...]
	                     	| [$f121: sta $030b]
	                         	| [...]
	move.b	#0x01,d0                        	| [$f124: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,0x37,d0 |  [$f126: sta $37]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$f128: sta $00]
l_f12a:
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f12b: lda nb_credits_0035]
	moveq	#1,d4 |  [$f12d: sec]
	sbcd	d4,d0 |  [$f12e: sbc $00]
	OP_W_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f130: sta nb_credits_0035]
	 |  [$f132: cld]
	move.b	#0x80,d0                        	| [$f133: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$f135: sta game_playing_flag_36]
	jbsr	l_f316                            	| [$f137: jsr $f316]
	jra	l_f171                             	| [$f13a: jra $f171]
l_f13d:
	OP_R_ON_ZP_ADDRESS	move,0x47,d0 |  [$f13d: lda $47]
	OP_R_ON_ZP_ADDRESS	or,0x48,d0 |  [$f13f: ora $48]
	bmi	l_f146                             	| [$f141: bmi $f146]
	jra	l_f09d                             	| [$f143: jra $f09d]
l_f146:
	OP_W_ON_ZP_ADDRESS	addq,player_select_timer_lsb_54,#1 |  [$f146: inc player_select_timer_lsb_54]
	OP_R_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f148: lda player_select_timer_lsb_54]
	cmp.b	#0x30,d0                         	| [$f14a: cmp #$30]
	* bcc=>bcs (cmp above)
	jcs	l_f15b                             	| [$f14c: bcc $f15b]
	clr.b	d0                               	| [$f14e: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f150: sta player_select_timer_lsb_54]
	OP_R_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f152: lda player_select_timer_seconds_55]
	SET_Z_FLAG  | required as sbcd doesn't set Z on 0 result
	 |  [$f155: sec]
	move.b	#0x01,d4	| [$f156: sbc #$01]
	sbcd	d4,d0	| [$f156: sbc #$01]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f158: sta player_select_timer_seconds_55]
	 |  [$f15a: cld]
l_f15b:
	OP_R_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f15b: lda player_select_timer_seconds_55]
	bmi	l_f171                             	| [$f15d: bmi $f171]
* display "TIME" message
	move.b	#0x18,d0                        	| [$f15f: lda #$18]
	jbsr	write_message_da7f                	| [$f161: jsr write_message_da7f]
	move.b	#0x06,d0                        	| [$f164: lda #$06]
	jbsr	l_d9a6                            	| [$f166: jsr $d9a6]
	jbsr	l_f7ec                            	| [$f169: jsr $f7ec]
	jne	l_f171                             	| [$f16c: jne $f171]
	jra	l_f09d                             	| [$f16e: jra $f09d]
l_f171:
	move.l	#0xc0c0c0c0,d0                        	| [$f171: lda #$c0]
	GET_ADDRESS	0x030a                     	| [$f173: sta $030a]
	move.l	d0,(a0)                         	| [...]
	                   	| [$f176: sta $030b]
	                    	| [...]
	                   	| [$f179: sta $030c]
	                    	| [...]
	                   	| [$f17c: sta $030d]
	                    	| [...]
	moveq	#0,d0                               	| [$f17f: lda #$00]
	GET_ADDRESS	0x06da                     	| [$f181: sta $06da]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	timer_07f5                 	| [$f184: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_a645                            	| [$f187: jsr $a645]
	jbsr	most_of_players_moves_and_draw_ae6a	| [$f18a: jsr most_of_players_moves_and_draw_ae6a]
	jbsr	l_e6cc                            	| [$f18d: jsr $e6cc]
* ball!
	move.b	#0x04,d1                        	| [$f190: ldx #$04]
	OP_W_ON_ZP_ADDRESS	move,current_object_index_4c,d1 |  [$f192: stx current_object_index_4c]
	jbsr	convert_logical_to_screen_coords_dff3	| [$f194: jsr convert_logical_to_screen_coords_dff3]
	jbsr	clear_rest_of_sprites_cf59        	| [$f197: jsr clear_rest_of_sprites_cf59]
	jbsr	sync_d822                         	| [$f19a: jsr sync_d822]
	move.b	#0x07,d0                        	| [$f19d: lda #$07]
	jbsr	l_d9a6                            	| [$f19f: jsr $d9a6]
	move.b	#0x50,d0                        	| [$f1a2: lda #$50]
	jbsr	l_d82b                            	| [$f1a4: jsr $d82b]
l_f1a7:
	clr.b	d0                               	| [$f1a7: lda #$00]
	GET_ADDRESS	0x07f9                     	| [$f1a9: sta $07f9]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	scroll_lock_07db                     	| [$f1ac: sta $07db]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x07e1                     	| [$f1af: sta $07e1]
	move.b	d0,(a0)                         	| [...]
	jra	l_f213                             	| [$f1b2: jra $f213]
l_f1b5:
	move.b	#0x03,d0                        	| [$f1b5: lda #$03]
	OP_W_ON_ZP_ADDRESS	move,0x00,d0 |  [$f1b7: sta $00]
l_f1b9:
	OP_R_ON_ZP_ADDRESS	move,0x00,d1 |  [$f1b9: ldx $00]
	jbsr	osd_read_dsw1 |  [$f1bb: lda dsw1_1003]
	not.b	d0                               	| [$f1be: eor #$ff]
	and.b	#0x30,d0                         	| [$f1c0: and #$30]
	beq	l_f1c8                             	| [$f1c2: beq $f1c8]
	cmp.b	#0x30,d0                         	| [$f1c4: cmp #$30]
	jne	l_f1ca                             	| [$f1c6: jne $f1ca]
l_f1c8:
	move.b	#0x80,d0                        	| [$f1c8: lda #$80]
l_f1ca:
	GET_ADDRESS	player_1_controls_022e     	| [$f1ca: and player_1_controls_022e, x]
	and.b	(a0,d1.w),d0                     	| [...]
	beq	l_f20c                             	| [$f1cd: beq $f20c]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f1cf: lda nb_credits_0035]
	beq	l_f20c                             	| [$f1d1: beq $f20c]
	GET_ADDRESS	0x42                       	| [$f1d3: lda $42, x]
	move.b	(a0,d1.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	cmp,0x00,d0 |  [$f1d5: cmp $00]
	beq	l_f20c                             	| [$f1d7: beq $f20c]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f1d9: lda nb_credits_0035]
	SET_Z_FLAG  | required as sbcd doesn't set Z on 0 result
	SET_XC_FLAGS                           	| [$f1dc: sec]
	move.b	#0x01,d4	| [$f1dd: sbc #$01]
	sbcd	d4,d0	| [$f1dd: sbc #$01]
	OP_W_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f1df: sta nb_credits_0035]
	 |  [$f1e1: cld]
	OP_W_ON_ZP_ADDRESS	addq,0x37,#1 |  [$f1e2: inc $37]
	move.b	#0x80,d0                        	| [$f1e4: lda #$80]
	OP_W_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$f1e6: sta game_playing_flag_36]
	jbsr	l_f316                            	| [$f1e8: jsr $f316]
	move.b	d1,d0                           	| [$f1eb: txa]
	lsr.b	#1,d0                            	| [$f1ec: lsr a]
	move.b	d0,d2                           	| [$f1ed: tay]
	move.b	#0x80,d0                        	| [$f1ee: lda #$80]
	GET_ADDRESS	0x0047                     	| [$f1f0: sta $0047, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	move.b	d1,d0                           	| [$f1f3: txa]
	eor.b	#0x01,d0                         	| [$f1f4: eor #$01]
	move.b	d0,d2                           	| [$f1f6: tay]
	OP_R_ON_ZP_ADDRESS	move,0x00,d0 |  [$f1f7: lda $00]
	GET_ADDRESS	0x42                       	| [$f1f9: sta $42, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	move.b	#0xc0,d0                        	| [$f1fb: lda #$c0]
	GET_ADDRESS	0x030a                     	| [$f1fd: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
    move.b	d0,(a0,d2.w)                 	| [$f200: sta $030a, y]
	GET_ADDRESS	0x0042                     	| [$f203: lda $0042, y]
	move.b	(a0,d2.w),d0                    	| [...]
	bpl	l_f20c                             	| [$f206: bpl $f20c]
	move.b	d1,d0                           	| [$f208: txa]
	                     	| [$f209: sta $0042, y]
    move.b	d0,(a0,d2.w)                 	| [...]
l_f20c:
	OP_W_ON_ZP_ADDRESS	subq,0x00,#1 |  [$f20c: dec $00]
	bpl	l_f1b9                             	| [$f20e: bpl $f1b9]
	jra	l_f13d                             	| [$f210: jra $f13d]
l_f213:
	jbsr	handle_cocktail_mode_d88f         	| [$f213: jsr handle_cocktail_mode_d88f]
	jbsr	clear_screen_cf35                 	| [$f216: jsr clear_screen_cf35]
	jbsr	l_cf73                            	| [$f219: jsr $cf73]
	move.b	#0x07,d0                        	| [$f21c: lda #$07]
	jbsr	l_cf16                            	| [$f21e: jsr $cf16]
	move.b	#0x4c,d1                        	| [$f221: ldx #$4c]
	jbsr	l_cf0e                            	| [$f223: jsr $cf0e]
	jbsr	clear_screen_cf35                 	| [$f226: jsr clear_screen_cf35]
	jbsr	l_cf73                            	| [$f229: jsr $cf73]
	clr.b	d0                               	| [$f22c: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f22e: sta game_state_bits_46]
	OP_R_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$f230: lda game_playing_flag_36]
	jne	l_f237                             	| [$f232: jne $f237]
	jra	l_f2bb                             	| [$f234: jra $f2bb]
* play select music again from the start
l_f237:
	move.b	#0x02,d0                        	| [$f237: lda #$02]
	jbsr	queue_sound_d7b8                  	| [$f239: jsr queue_sound_d7b8]
	jbsr	show_us_map_screen_ebf1           	| [$f23c: jsr show_us_map_screen_ebf1]
	jbsr	l_eb9a                            	| [$f23f: jsr $eb9a]
	move.b	#0x02,d0                        	| [$f242: lda #$02]
	GET_ADDRESS	scroll_lock_07db                     	| [$f244: sta $07db]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$f247: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$f249: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
l_f24c:
	jbsr	l_ec2f                            	| [$f24c: jsr $ec2f]
	move.b	d2,d0                           	| [$f24f: tya]
	                           	| [$f250: clc]
	add.b	#0x05,d0                        	| [$f251: adc #$05]
	move.b	d0,d2                           	| [$f253: tay]
	GET_ADDRESS	timer_07f5                 	| [$f254: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$f257: and #$10]
	beq	l_f260                             	| [$f259: beq $f260]
	move.b	d2,d0                           	| [$f25b: tya]
	                           	| [$f25c: clc]
	add.b	#0x05,d0                        	| [$f25d: adc #$05]
	move.b	d0,d2                           	| [$f25f: tay]
l_f260:
	move.b	d2,d0                           	| [$f260: tya]
	jbsr	l_eddc                            	| [$f261: jsr $eddc]
	jbsr	sync_d822                         	| [$f264: jsr sync_d822]
	jbsr	osd_read_p1_inputs |  [$f267: lda p1_1000]
	move.b	d0,d4
	jbsr	osd_read_p2_inputs |  [$f26a: and p2_1001]
	and.b	d4,d0 |  [...]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw1_1003
	jbsr	osd_read_dsw1 |  [$f26d: bit dsw1_1003]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bmi	l_f278                             	| [$f270: bmi $f278]
	 |  [$f272: and p3_1005]
	 |  [$f275: and p4_1006]
l_f278:
	and.b	#0xf0,d0                         	| [$f278: and #$f0]
	cmp.b	#0xf0,d0                         	| [$f27a: cmp #$f0]
	jne	l_f2af                             	| [$f27c: jne $f2af]
	GET_ADDRESS	timer_07f5                 	| [$f27e: inc timer_07f5]
	addq.b	#1,(a0)                         	| [...]
	                 	| [$f281: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x70,d0                         	| [$f284: cmp #$70]
	* bcc=>bcs (cmp above)
	jcs	l_f24c                             	| [$f286: bcc $f24c]
* first timer completed, now show pic above map
	clr.b	d0                               	| [$f288: lda #$00]
												| [$f28a: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
l_f28d:
	GET_ADDRESS	timer_07f5                 	| [$f28d: inc timer_07f5]
	addq.b	#1,(a0)                         	| [...]
	jbsr	sync_d822                         	| [$f290: jsr sync_d822]
	jbsr	osd_read_p1_inputs |  [$f293: lda p1_1000]
	move.b	d0,d4
	jbsr	osd_read_p2_inputs |  [$f296: and p2_1001]
	and.b	d4,d0 |  [...]
	move.w	d0,-(a7)   | save d0
	GET_ADDRESS	dsw1_1003
	jbsr	osd_read_dsw1 |  [$f299: bit dsw1_1003]
	move.b	d0,(a0)   | update in ram so we can use BIT
	BIT	(a0)
	movem.w	(a7)+,d0   | restore d0, preserving BIT status flags
	bmi	l_f2a4                             	| [$f29c: bmi $f2a4]
	 |  [$f29e: and p3_1005]
	 |  [$f2a1: and p4_1006]
l_f2a4:
	and.b	#0xf0,d0                         	| [$f2a4: and #$f0]
	cmp.b	#0xf0,d0                         	| [$f2a6: cmp #$f0]
	jne	l_f2af                             	| [$f2a8: jne $f2af]
	GET_ADDRESS	timer_07f5                 	| [$f2aa: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	bpl	l_f28d                             	| [$f2ad: bpl $f28d]
* second timer completed: proceed to play
l_f2af:
	jbsr	l_ec2f                            	| [$f2af: jsr $ec2f]
	move.b	d2,d0                           	| [$f2b2: tya]
	jbsr	l_ee80                            	| [$f2b3: jsr $ee80]
	move.b	#0x40,d0                        	| [$f2b6: lda #$40]
	jbsr	l_d83f                            	| [$f2b8: jsr $d83f]
l_f2bb:
	jbsr	l_ec2f                            	| [$f2bb: jsr $ec2f]
	movem.w	d0,-(sp)                       	| [$f2be: pha]
	GET_ADDRESS	screen_id_07e4             	| [$f2bf: sta screen_id_07e4]
	move.b	d0,(a0)                         	| [...]
* display volley field
	jbsr	setup_background_screen_eb52      	| [$f2c2: jsr setup_background_screen_eb52]
* volley field is now displayed
	jbsr	l_e6d3                            	| [$f2c5: jsr $e6d3]
	move.w	(sp)+,d0                        	| [$f2c8: pla]
	movem.w	d0,-(sp)                       	| [$f2c9: pha]
	GET_ADDRESS	sprite_prom_bank_07f4      	| [$f2ca: sta sprite_prom_bank_07f4]
	move.b	d0,(a0)                         	| [...]
	jbsr	update_sprite_prom_bank_d8c5      	| [$f2cd: jsr update_sprite_prom_bank_d8c5]
	jbsr	l_eb9a                            	| [$f2d0: jsr $eb9a]
	jbsr	l_f7c8                            	| [$f2d3: jsr $f7c8]
	jbsr	l_af64                            	| [$f2d6: jsr $af64]
	move.b	#0x10,d0                        	| [$f2d9: lda #$10]
	GET_ADDRESS	0x03e0                     	| [$f2db: sta $03e0]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$f2de: lda #$00]
	GET_ADDRESS	0x07dd                     	| [$f2e0: sta $07dd]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	logical_scroll_value_msb_07df	| [$f2e3: sta logical_scroll_value_msb_07df]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x80,d0                        	| [$f2e6: lda #$80]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$f2e8: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$f2eb: lda #$01]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f2ed: sta game_state_bits_46]
	clr.b	d0                               	| [$f2ef: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$f2f1: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x80,d0                        	| [$f2f4: lda #$80]
	GET_ADDRESS	logical_scroll_value_lsb_07de	| [$f2f6: sta logical_scroll_value_lsb_07de]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$f2f9: lda #$01]
	GET_ADDRESS	scroll_lock_07db                     	| [$f2fb: sta $07db]
	move.b	d0,(a0)                         	| [...]
	clr.b	d0                               	| [$f2fe: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$f300: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$f303: lda game_playing_flag_36]
	beq	game_main_loop_f36f                	| [$f305: beq game_main_loop_f36f]
* play music of the current level
	GET_ADDRESS	screen_id_07e4             	| [$f307: lda screen_id_07e4] also level
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f30a: and #$0f]
	move.b	d0,d2                           	| [$f30c: tay]
	GET_ADDRESS	0xf36a                     	| [$f30d: lda $f36a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	jbsr	queue_sound_d7b8                  	| [$f310: jsr queue_sound_d7b8]
	jra	game_main_loop_f36f                	| [$f313: jra game_main_loop_f36f]
l_f316:
	jbsr	osd_read_dsw1 |  [$f316: lda dsw1_1003]
	not.b	d0                               	| [$f319: eor #$ff]
	movem.w	d0,-(sp)                       	| [$f31b: pha]
	and.b	#0x03,d0                         	| [$f31c: and #$03]
	move.b	d0,d2                           	| [$f31e: tay]
	GET_ADDRESS	0xf352                     	| [$f31f: lda $f352, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,0x3a,d0 |  [$f322: sta $3a]
	clr.b	d2                               	| [$f324: ldy #$00]
	OP_W_ON_ZP_ADDRESS	move,0x49,d2 |  [$f326: sty $49]
	move.w	(sp)+,d0                        	| [$f328: pla]
                                         | [$f329: lsr a]
	lsr.b	#2,d0                            	| [$f32a: lsr a]
	and.b	#0x03,d0                         	| [$f32b: and #$03]
	move.b	d0,d2                           	| [$f32d: tay]
	                     	| [$f32e: lda $f352, y]
	move.b	(a0,d2.w),d0                    	| [...]
	asl.b	#1,d0                            	| [$f331: asl a]
	move.b	d0,d2                           	| [$f332: tay]
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$f333: lda $37]
	jne	l_f33b                             	| [$f335: jne $f33b]
	move.b	#0x0a,d2                        	| [$f337: ldy #$0a]
	jne	l_f347                             	| [$f339: jne $f347]
l_f33b:
	cmp.b	#0x02,d0                         	| [$f33b: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_f347                             	| [$f33d: bcc $f347]
	move.b	#0x08,d2                        	| [$f33f: ldy #$08]
	cmp.b	#0x03,d0                         	| [$f341: cmp #$03]
	* bcc=>bcs (cmp above)
	jcs	l_f347                             	| [$f343: bcc $f347]
	move.b	#0x0c,d2                        	| [$f345: ldy #$0c]
l_f347:
	GET_ADDRESS	0xf356                     	| [$f347: lda $f356, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f34a: sta time_seconds_4a]
	GET_ADDRESS	0xf357                     	| [$f34c: lda $f357, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_W_ON_ZP_ADDRESS	move,time_minutes_4b,d0 |  [$f34f: sta time_minutes_4b]
	rts                                    	| [$f351: rts]

game_main_loop_f36f:
	clr.b	d0                               	| [$f36f: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x30,d0 |  [$f371: sta $30]
	clr.b	d0                               	| [$f373: lda #$00]
	GET_ADDRESS	0x06da                     	| [$f375: sta $06da]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_e923                            	| [$f378: jsr $e923]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f37b: lda game_state_bits_46]
	and.b	#0x02,d0                         	| [$f37d: and #$02]
	jne	l_f384                             	| [$f37f: jne $f384]
	jra	keep_playing_f4ca                  	| [$f381: jra keep_playing_f4ca]
* ball on ground
l_f384:
	jbsr	l_a730                            	| [$f384: jsr $a730]
	jbsr	l_a645                            	| [$f387: jsr $a645]
	jbsr	l_aca8                            	| [$f38a: jsr $aca8]
	jbsr	l_e6cc                            	| [$f38d: jsr $e6cc]
	jbsr	l_a8a5                            	| [$f390: jsr $a8a5]
	GET_ADDRESS	timer_07f5                 	| [$f393: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x58,d0                         	| [$f396: cmp #$58]
	* bcs=>bcc
	jcc	l_f39d                             	| [$f398: bcs $f39d]
	jra	l_f4fd                             	| [$f39a: jra $f4fd]
l_f39d:
	 |  [$f39d: lda game_state_bits_46]
	                         	| [$f39f: and #$fd]
	OP_W_ON_ZP_ADDRESS	and,game_state_bits_46,#0xfd |  [$f3a1: sta game_state_bits_46]
	clr.b	d0                               	| [$f3a3: lda #$00]
	GET_ADDRESS	0x07e5                     	| [$f3a5: sta $07e5]
	move.b	d0,(a0)                         	| [...]
	clr.b	d1                               	| [$f3a8: ldx #$00]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f3aa: lda game_state_bits_46]
	and.b	#0x10,d0                         	| [$f3ac: and #$10]
	beq	l_f3b1                             	| [$f3ae: beq $f3b1]
* right team (cpu in 1P mode) has won if bit 4 from game_state_bits_46 is set
	addq.b	#1,d1                           	| [$f3b0: inx]
l_f3b1:
	GET_ADDRESS	score_array_57             	| [$f3b1: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	tst.b	left_team_wins_now_flag
	jeq	0f
	clr.b	left_team_wins_now_flag
	moveq	#0,d0
	moveq	#0,d1
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0
	move.b	max_score,d0
0:
	cmp.b	max_score,d0                    	| [$f3b3: cmp #MAX_SCORE]
	* bcc=>bcs (cmp above)
	jcs	l_f3d6                             	| [$f3b5: bcc $f3d6]
* one team has won
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f3b7: lda game_state_bits_46]
	and.b	#0xfd,d0                         	| [$f3b9: and #$fd]
	or.b	#0x08,d0                          	| [$f3bb: ora #$08]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f3bd: sta game_state_bits_46]
	clr.b	d0                               	| [$f3bf: lda #$00]
	GET_ADDRESS	timer_07f5                 	| [$f3c1: sta timer_07f5]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x14,d2                        	| [$f3c4: ldy #$14]
	GET_ADDRESS	0x47                       	| [$f3c6: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bmi	l_f3cc                             	| [$f3c8: bmi $f3cc]
	move.b	#0x0e,d2                        	| [$f3ca: ldy #$0e]
l_f3cc:
	move.b	d2,d0                           	| [$f3cc: tya]
	jbsr	queue_sound_d7b8                  	| [$f3cd: jsr queue_sound_d7b8]
	jbsr	l_af82                            	| [$f3d0: jsr $af82]
	jra	l_f4fd                             	| [$f3d3: jra $f4fd]
l_f3d6:
	cmp.b	critical_score,d0        	| [$f3d6: cmp #APPROACHING_MAX_SCORE]
	jne	l_f3e9                             	| [$f3d8: jne $f3e9]
	move.b	d1,d0                           	| [$f3da: txa]
	eor.b	#0x01,d0                         	| [$f3db: eor #$01]
	move.b	d0,d1                           	| [$f3dd: tax]
* check for score > 8
	GET_ADDRESS	score_array_57             	| [$f3de: lda score_array_57, x]
	move.b	(a0,d1.w),d0                    	| [...]
	cmp.b	critical_score,d0        	| [$f3e0: cmp #APPROACHING_MAX_SCORE]
	* bcs=>bcc
	jcc	l_f3e9                             	| [$f3e2: bcs $f3e9]
* score >= 8: play stressful music
	move.b	#0x03,d0                        	| [$f3e4: lda #$03]
	jbsr	queue_sound_d7b8                  	| [$f3e6: jsr queue_sound_d7b8]
* start new ball (but not first ball)
l_f3e9:
	 |  [$f3e9: lda game_state_bits_46]
	                         	| [$f3eb: ora #$04]
	OP_W_ON_ZP_ADDRESS	or,game_state_bits_46,#0x04 |  [$f3ed: sta game_state_bits_46]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f3ef: lda game_state_bits_46]
	eor.b	#0x10,d0                         	| [$f3f1: eor #$10]
	and.b	#0x10,d0                         	| [$f3f3: and #$10]
                                         | [$f3f5: lsr a]
                                         | [$f3f6: lsr a]
	lsr.b	#3,d0                            	| [$f3f7: lsr a]
	move.b	d0,d1                           	| [$f3f8: tax]
	OP_R_ON_ZP_ADDRESS	cmp,0x50,d1 |  [$f3f9: cpx $50]
	jne	l_f40d                             	| [$f3fb: jne $f40d]
	GET_ADDRESS	0x030a                     	| [$f3fd: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x08,d0                         	| [$f400: eor #$08]
	                     	| [$f402: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	GET_ADDRESS	0x030b                     	| [$f405: lda $030b, x]
	move.b	(a0,d1.w),d0                    	| [...]
	eor.b	#0x08,d0                         	| [$f408: eor #$08]
	                     	| [$f40a: sta $030b, x]
    move.b	d0,(a0,d1.w)                 	| [...]
l_f40d:
	move.b	#0x03,d1                        	| [$f40d: ldx #$03]
l_f40f:
	move.b	d1,d0                           	| [$f40f: txa]
	lsr.b	#1,d0                            	| [$f410: lsr a]
	move.b	d0,d2                           	| [$f411: tay]
	GET_ADDRESS	0x0047                     	| [$f412: lda $0047, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$f415: tay]
	GET_ADDRESS	0x030a                     	| [$f416: lda $030a, x]
	move.b	(a0,d1.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$f419: and #$08]
	beq	l_f425                             	| [$f41b: beq $f425]
	or.b	#0x40,d0                          	| [$f41d: ora #$40]
	cmp.b	#0x80,d2                         	| [$f41f: cpy #$80]
	* bcc=>bcs (cmp above)
	jcs	l_f425                             	| [$f421: bcc $f425]
	or.b	#0x80,d0                          	| [$f423: ora #$80]
l_f425:
	GET_ADDRESS	0x030a                     	| [$f425: sta $030a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	and.b	#0x40,d0                         	| [$f428: and #$40]
	beq	l_f431                             	| [$f42a: beq $f431]
	move.b	d1,d0                           	| [$f42c: txa]
	lsr.b	#1,d0                            	| [$f42d: lsr a]
	move.b	d0,d2                           	| [$f42e: tay]
	GET_ADDRESS	0x51                       	| [$f42f: stx $51, y]
    move.b	d1,(a0,d2.w)                 	| [...]
l_f431:
	move.b	#0x01,d0                        	| [$f431: lda #$01]
	GET_ADDRESS	0x031a                     	| [$f433: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d0                               	| [$f436: lda #$00]
	GET_ADDRESS	0x030e                     	| [$f438: sta $030e, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	subq.b	#1,d1                           	| [$f43b: dex]
	bpl	l_f40f                             	| [$f43c: bpl $f40f]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f43e: lda game_state_bits_46]
	and.b	#0x10,d0                         	| [$f440: and #$10]
                                         | [$f442: lsr a]
                                         | [$f443: lsr a]
	lsr.b	#3,d0                            	| [$f444: lsr a]
	move.b	d0,d2                           	| [$f445: tay]
	GET_ADDRESS	0x030a                     	| [$f446: lda $030a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	and.b	#0x08,d0                         	| [$f449: and #$08]
	jne	l_f44e                             	| [$f44b: jne $f44e]
	addq.b	#1,d2                           	| [$f44d: iny]
l_f44e:
	OP_W_ON_ZP_ADDRESS	move,0x4f,d2 |  [$f44e: sty $4f]
	clr.b	d0                               	| [$f450: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x56,d0 |  [$f452: sta $56]
	jbsr	l_af82                            	| [$f454: jsr $af82]
	clr.b	d0                               	| [$f457: lda #$00]
	move.b	#0x05,d1                        	| [$f459: ldx #$05]
l_f45b:
	GET_ADDRESS	0x031a                     	| [$f45b: sta $031a, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$f45e: inx]
	cmp.b	#0x0d,d1                         	| [$f45f: cpx #$0d]
	* bcc=>bcs (cmp above)
	jcs	l_f45b                             	| [$f461: bcc $f45b]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f463: lda time_seconds_4a]
	OP_R_ON_ZP_ADDRESS	or,time_minutes_4b,d0 |  [$f465: ora time_minutes_4b]
	beq	l_f46c                             	| [$f467: beq $f46c]
	jra	keep_playing_f4ca                  	| [$f469: jra keep_playing_f4ca]
l_f46c:
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$f46c: lda $37]
	jne	l_f473                             	| [$f46e: jne $f473]
	jra	l_ef53                             	| [$f470: jra $ef53]
l_f473:
	clr.b	d0                               	| [$f473: lda #$00]
	move.b	d0,d1                           	| [$f475: tax]
l_f476:
	GET_ADDRESS	0x07dd                     	| [$f476: sta $07dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$f479: inx]
	cmp.b	#0x05,d1                         	| [$f47a: cpx #$05]
	* bcc=>bcs (cmp above)
	jcs	l_f476                             	| [$f47c: bcc $f476]
	GET_ADDRESS	scroll_lock_07db                     	| [$f47e: sta $07db]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cf73                            	| [$f481: jsr $cf73]
	clr.b	d0                               	| [$f484: lda #$00]
	GET_ADDRESS	0x06da                     	| [$f486: sta $06da]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_a730                            	| [$f489: jsr $a730]
	jbsr	l_a645                            	| [$f48c: jsr $a645]
	jbsr	l_aca8                            	| [$f48f: jsr $aca8]
	jbsr	l_e6cc                            	| [$f492: jsr $e6cc]
	jbsr	clear_rest_of_sprites_cf59        	| [$f495: jsr clear_rest_of_sprites_cf59]
	move.b	#0x12,d0                        	| [$f498: lda #$12]
	jbsr	l_ee80                            	| [$f49a: jsr $ee80]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f49d: lda time_seconds_4a]
	OP_R_ON_ZP_ADDRESS	or,time_minutes_4b,d0 |  [$f49f: ora time_minutes_4b]
	jne	l_f4b2                             	| [$f4a1: jne $f4b2]
	move.b	#0x17,d0                        	| [$f4a3: lda #$17]
	jbsr	write_message_da7f                	| [$f4a5: jsr write_message_da7f]
	move.b	#0x05,d0                        	| [$f4a8: lda #$05]
	jbsr	queue_sound_d7b8                  	| [$f4aa: jsr queue_sound_d7b8]
	move.b	#0x80,d0                        	| [$f4ad: lda #$80]
	jbsr	l_d83f                            	| [$f4af: jsr $d83f]
l_f4b2:
	* initialize 10 seconds to continue play
	clr.b	d0                               	| [$f4b2: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f4b4: sta player_select_timer_lsb_54]
	move.b	#0x10,d0                        	| [$f4b6: lda #$10]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f4b8: sta player_select_timer_seconds_55]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f4ba: lda game_state_bits_46]
	and.b	#0xf7,d0                         	| [$f4bc: and #$f7]
	or.b	#0x40,d0                          	| [$f4be: ora #$40]
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f4c0: sta game_state_bits_46]
	jbsr	l_ec42                            	| [$f4c2: jsr $ec42]
	move.b	#0x12,d0                        	| [$f4c5: lda #$12]
	jbsr	l_ee80                            	| [$f4c7: jsr $ee80]
keep_playing_f4ca:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f4ca: lda game_state_bits_46]
	and.b	#0x40,d0                         	| [$f4cc: and #$40]
	beq	l_f4d3                             	| [$f4ce: beq $f4d3]
* "continue play" sequence
	jra	l_f671                             	| [$f4d0: jra $f671]
l_f4d3:
	jbsr	l_d8ef                            	| [$f4d3: jsr $d8ef]
	jbsr	l_ce1a                            	| [$f4d6: jsr $ce1a]
	jbsr	most_of_players_moves_and_draw_ae6a	| [$f4d9: jsr most_of_players_moves_and_draw_ae6a]
	jbsr	ball_movement_and_draw_b9fa       	| [$f4dc: jsr ball_movement_and_draw_b9fa]
	jbsr	l_cde1                            	| [$f4df: jsr $cde1]
l_f4e2:
	jbsr	l_a645                            	| [$f4e2: jsr $a645]
	jbsr	l_a2e0                            	| [$f4e5: jsr $a2e0]
	jbsr	l_a730                            	| [$f4e8: jsr $a730]
	jbsr	l_ab1d                            	| [$f4eb: jsr $ab1d]
	jbsr	l_ac13                            	| [$f4ee: jsr $ac13]
	jbsr	l_aca7                            	| [$f4f1: jsr $aca7]
	jbsr	l_aca8                            	| [$f4f4: jsr $aca8]
	jbsr	l_ad82                            	| [$f4f7: jsr $ad82]
	jbsr	l_e6cc                            	| [$f4fa: jsr $e6cc]
l_f4fd:
	jbsr	clear_rest_of_sprites_cf59        	| [$f4fd: jsr clear_rest_of_sprites_cf59]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f500: lda game_state_bits_46]
	and.b	#0x40,d0                         	| [$f502: and #$40]
	jne	l_f509                             	| [$f504: jne $f509]
	jbsr	l_e6e2                            	| [$f506: jsr $e6e2]
l_f509:
	jbsr	l_ec42                            	| [$f509: jsr $ec42]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f50c: lda game_state_bits_46]
	and.b	#0x01,d0                         	| [$f50e: and #$01]
	beq	l_f521                             	| [$f510: beq $f521]
	GET_ADDRESS	timer_07f5                 	| [$f512: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x20,d0                         	| [$f515: cmp #$20]
	* bcc=>bcs (cmp above)
	jcs	l_f521                             	| [$f517: bcc $f521]
* timer >= $20: start first ball (start of the demo or new match)
* after having waited a small while showing the players in the center
* of the field
start_new_game_f519:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f519: lda game_state_bits_46]
	and.b	#0xfe,d0                         	| [$f51b: and #$fe]
	or.b	#0x04,d0                          	| [$f51d: ora #$04]
* start new ball/first ball (first of the match)
	OP_W_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f51f: sta game_state_bits_46]
l_f521:
	OP_R_ON_ZP_ADDRESS	move,0x30,d0 |  [$f521: lda $30]
	beq	l_f521                             	| [$f523: beq $f521]
	move.b	#0x5a,d0                        	| [$f525: lda #$5a]
	OP_W_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$f527: sta toggle_timer_2f]
l_f529:
	OP_R_ON_ZP_ADDRESS	move,toggle_timer_2f,d0 |  [$f529: lda toggle_timer_2f]
	jne	l_f529                             	| [$f52b: jne $f529]
	NEW_ADDRESS
	GET_ADDRESS	timer_07f5                 	| [$f52d: inc timer_07f5]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f530: lda game_state_bits_46]
	and.b	#0x08,d0                         	| [$f532: and #$08]
	beq	l_f53d                             	| [$f534: beq $f53d]
	                 	| [$f536: lda timer_07f5]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xc0,d0                         	| [$f539: cmp #$c0]
	* bcs=>bcc
	jcc	l_f540                             	| [$f53b: bcs $f540]
l_f53d:
	jra	game_main_loop_f36f                	| [$f53d: jra game_main_loop_f36f]
l_f540:
	OP_R_ON_ZP_ADDRESS	move,game_state_bits_46,d0 |  [$f540: lda game_state_bits_46]
	and.b	#0x10,d0                         	| [$f542: and #$10]
	eor.b	#0x10,d0                         	| [$f544: eor #$10]
                                         | [$f546: lsr a]
                                         | [$f547: lsr a]
	lsr.b	#3,d0                            	| [$f548: lsr a]
	move.b	d0,d2                           	| [$f549: tay]
	lsr.b	#1,d0                            	| [$f54a: lsr a]
	move.b	d0,d1                           	| [$f54b: tax]
	GET_ADDRESS	0x47                       	| [$f54c: lda $47, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_f587                             	| [$f54e: bpl $f587]
	clr.b	d0                               	| [$f550: lda #$00]
	                       	| [$f552: sta $47, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	jbsr	osd_read_dsw1 |  [$f554: lda dsw1_1003]
	bmi	l_f576                             	| [$f557: bmi $f576]
	move.b	d2,d0                           	| [$f559: tya]
	GET_ADDRESS	0x0042                     	| [$f55a: cmp $0042, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	jne	l_f561                             	| [$f55d: jne $f561]
	OP_W_ON_ZP_ADDRESS	subq,0x37,#1 |  [$f55f: dec $37]
l_f561:
	st.b	d0                        	| [$f561: lda #$ff]
	                     	| [$f563: sta $0042, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	addq.b	#1,d2                           	| [$f566: iny]
	move.b	d2,d0                           	| [$f567: tya]
	                     	| [$f568: cmp $0042, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	jne	l_f56f                             	| [$f56b: jne $f56f]
	OP_W_ON_ZP_ADDRESS	subq,0x37,#1 |  [$f56d: dec $37]
l_f56f:
	st.b	d0                        	| [$f56f: lda #$ff]
	                     	| [$f571: sta $0042, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	bra	l_f580                             	| [$f574: bmi $f580]
l_f576:
	st.b	d0                        	| [$f576: lda #$ff]
	GET_ADDRESS	0x0042                     	| [$f578: sta $0042, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	GET_ADDRESS	0x0043                     	| [$f57b: sta $0043, y]
    move.b	d0,(a0,d2.w)                 	| [...]
	OP_W_ON_ZP_ADDRESS	subq,0x37,#1 |  [$f57e: dec $37]
l_f580:
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$f580: lda $37]
	jne	l_f587                             	| [$f582: jne $f587]
	jra	l_f610                             	| [$f584: jra $f610]
l_f587:
	OP_W_ON_ZP_ADDRESS	addq,current_level_38,#1 |  [$f587: inc current_level_38]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$f589: lda current_level_38]
	and.b	#0x0f,d0                         	| [$f58b: and #$0f]
	cmp.b	#0x09,d0                         	| [$f58d: cmp #$09]
	* bcc=>bcs (cmp above)
	jcs	l_f5a0                             	| [$f58f: bcc $f5a0]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$f591: lda current_level_38]
	and.b	#0xf0,d0                         	| [$f593: and #$f0]
	cmp.b	#0xf0,d0                         	| [$f595: cmp #$f0]
	beq	l_f59c                             	| [$f597: beq $f59c]
	                           	| [$f599: clc]
	add.b	#0x10,d0                        	| [$f59a: adc #$10]
l_f59c:
	or.b	#0x04,d0                          	| [$f59c: ora #$04]
	OP_W_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$f59e: sta current_level_38]
l_f5a0:
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d0 |  [$f5a0: lda current_level_38]
	and.b	#0x0f,d0                         	| [$f5a2: and #$0f]
	cmp.b	#0x04,d0                         	| [$f5a4: cmp #$04]
	jne	l_f5ee                             	| [$f5a6: jne $f5ee]
	jbsr	l_cf73                            	| [$f5a8: jsr $cf73]
	jbsr	clear_screen_cf35                 	| [$f5ab: jsr clear_screen_cf35]
	clr.b	d0                               	| [$f5ae: lda #$00]
	GET_ADDRESS	scroll_lock_07db                     	| [$f5b0: sta $07db]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x11,d0                        	| [$f5b3: lda #$11]
	GET_ADDRESS	screen_id_07e4             	| [$f5b5: sta screen_id_07e4]
	move.b	d0,(a0)                         	| [...]
	jbsr	setup_background_screen_eb52      	| [$f5b8: jsr setup_background_screen_eb52]
	OP_R_ON_ZP_ADDRESS	move,current_level_38,d2 |  [$f5bb: ldy current_level_38]
	move.b	#0x0e,d0                        	| [$f5bd: lda #$0e]
	cmp.b	#0x10,d2                         	| [$f5bf: cpy #$10]
	* bcc=>bcs (cmp above)
	jcs	l_f5c5                             	| [$f5c1: bcc $f5c5]
	move.b	#0x0f,d0                        	| [$f5c3: lda #$0f]
l_f5c5:
	jbsr	write_message_da7f                	| [$f5c5: jsr write_message_da7f]
	move.b	#0x12,d0                        	| [$f5c8: lda #$12]
	jbsr	queue_sound_d7b8                  	| [$f5ca: jsr queue_sound_d7b8]
	jbsr	l_eb9a                            	| [$f5cd: jsr $eb9a]
	st.b	d0                        	| [$f5d0: lda #$ff]
	jbsr	l_d83f                            	| [$f5d2: jsr $d83f]
	st.b	d0                        	| [$f5d5: lda #$ff]
	jbsr	l_d83f                            	| [$f5d7: jsr $d83f]
	st.b	d0                        	| [$f5da: lda #$ff]
	jbsr	l_d83f                            	| [$f5dc: jsr $d83f]
	st.b	d0                        	| [$f5df: lda #$ff]
	jbsr	l_d83f                            	| [$f5e1: jsr $d83f]
	st.b	d0                        	| [$f5e4: lda #$ff]
	jbsr	l_d83f                            	| [$f5e6: jsr $d83f]
	st.b	d0                        	| [$f5e9: lda #$ff]
	jbsr	l_d83f                            	| [$f5eb: jsr $d83f]
l_f5ee:
	CLR_XC_FLAGS                           	| [$f5ef: clc]
	clr.b	d0                               	| [$f5f0: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x49,d0 |  [$f5f2: sta $49]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f5f4: lda time_seconds_4a]
	move.b	#0x30,d4	| [$f5f6: adc #$30]
	abcd	d4,d0                        	| [$f5f6: adc #$30]
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f5f8: sta time_seconds_4a]
	OP_R_ON_ZP_ADDRESS	move,time_minutes_4b,d0 |  [$f5fa: lda time_minutes_4b]
	moveq	#0x00,d4	| [$f5fc: adc #$00]
	addx.b	d4,d0                        	| [$f5fc: adc #$00]
	OP_W_ON_ZP_ADDRESS	move,time_minutes_4b,d0 |  [$f5fe: sta time_minutes_4b]
	OP_R_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f600: lda time_seconds_4a]
	cmp.b	#0x60,d0                         	| [$f602: cmp #$60]
	* bcc=>bcs (cmp above)
	jcs	l_f60c                             	| [$f604: bcc $f60c]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC_IMM	0x60                           	| [$f606: sbc #$60]
	OP_W_ON_ZP_ADDRESS	move,time_seconds_4a,d0 |  [$f608: sta time_seconds_4a]
	OP_W_ON_ZP_ADDRESS	addq,time_minutes_4b,#1 |  [$f60a: inc time_minutes_4b]
l_f60c:
	 |  [$f60c: cld]
	jra	l_eff5                             	| [$f60d: jra $eff5]
l_f610:
	clr.b	d0                               	| [$f610: lda #$00]
	move.b	d0,d1                           	| [$f612: tax]
l_f613:
	GET_ADDRESS	0x07dd                     	| [$f613: sta $07dd, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	addq.b	#1,d1                           	| [$f616: inx]
	cmp.b	#0x05,d1                         	| [$f617: cpx #$05]
	* bcc=>bcs (cmp above)
	jcs	l_f613                             	| [$f619: bcc $f613]
	GET_ADDRESS	scroll_lock_07db                     	| [$f61b: sta $07db]
	move.b	d0,(a0)                         	| [...]
	jbsr	reset_scrolling_eae2              	| [$f61e: jsr reset_scrolling_eae2]
	jbsr	l_cf73                            	| [$f621: jsr $cf73]
	clr.b	d0                               	| [$f624: lda #$00]
	GET_ADDRESS	0x06da                     	| [$f626: sta $06da]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_a730                            	| [$f629: jsr $a730]
	jbsr	l_a645                            	| [$f62c: jsr $a645]
	jbsr	l_aca8                            	| [$f62f: jsr $aca8]
	jbsr	l_e6cc                            	| [$f632: jsr $e6cc]
	jbsr	clear_rest_of_sprites_cf59        	| [$f635: jsr clear_rest_of_sprites_cf59]
	move.b	#0x12,d0                        	| [$f638: lda #$12]
	jbsr	l_ee80                            	| [$f63a: jsr $ee80]
	move.b	#0x14,d0                        	| [$f63d: lda #$14]
	jbsr	write_message_da7f                	| [$f63f: jsr write_message_da7f]
	move.b	#0x10,d0                        	| [$f642: lda #$10]
	jbsr	queue_sound_d7b8                  	| [$f644: jsr queue_sound_d7b8]
	st.b	d0                        	| [$f647: lda #$ff]
	jbsr	l_d83f                            	| [$f649: jsr $d83f]
	st.b	d0                        	| [$f64c: lda #$ff]
	jbsr	l_d83f                            	| [$f64e: jsr $d83f]
	clr.b	d0                               	| [$f651: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x47,d0 |  [$f653: sta $47]
	OP_W_ON_ZP_ADDRESS	move,0x48,d0 |  [$f655: sta $48]
	OP_W_ON_ZP_ADDRESS	move,0x37,d0 |  [$f657: sta $37]
	st.b	d0                        	| [$f659: lda #$ff]
	OP_W_ON_ZP_ADDRESS	move,0x42,d0 |  [$f65b: sta $42]
	OP_W_ON_ZP_ADDRESS	move,0x43,d0 |  [$f65d: sta $43]
	OP_W_ON_ZP_ADDRESS	move,0x44,d0 |  [$f65f: sta $44]
	OP_W_ON_ZP_ADDRESS	move,0x45,d0 |  [$f661: sta $45]
	clr.b	d0                               	| [$f663: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,game_playing_flag_36,d0 |  [$f665: sta game_playing_flag_36]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f667: lda nb_credits_0035]
	beq	l_f66e                             	| [$f669: beq $f66e]
	jbsr	l_eff5                            	| [$f66b: jsr $eff5]
l_f66e:
	jra	l_ef53                             	| [$f66e: jra $ef53]
l_f671:
	OP_R_ON_ZP_ADDRESS	move,0x37,d0 |  [$f671: lda $37]
	GET_ADDRESS	coin_per_credit_0416       	| [$f673: sta coin_per_credit_0416]
	move.b	d0,(a0)                         	| [...]
	SET_XC_FLAGS                           	| [$f676: sec]
	SBC	nb_credits_0035                    	| [$f677: sbc nb_credits_0035]
	GET_ADDRESS	0x0417                     	| [$f679: sta $0417]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x13,d2                        	| [$f67c: ldy #$13]
	move.b	#0x04,d1                        	| [$f67e: ldx #$04]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f680: lda nb_credits_0035]
	GET_ADDRESS	coin_per_credit_0416       	| [$f682: cmp coin_per_credit_0416]
	cmp.b	(a0),d0                          	| [...]
	* bcs=>bcc
	jcc	l_f692                             	| [$f685: bcs $f692]
	move.b	#0x0b,d2                        	| [$f687: ldy #$0b]
	subq.b	#1,d1                           	| [$f689: dex]
	GET_ADDRESS	0x0417                     	| [$f68a: lda $0417]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$f68d: cmp #$02]
	* bcc=>bcs (cmp above)
	jcs	l_f692                             	| [$f68f: bcc $f692]
	addq.b	#1,d2                           	| [$f691: iny]
l_f692:
	move.b	d1,d0                           	| [$f692: txa]
	movem.w	d0,-(sp)                       	| [$f693: pha]
	move.b	d2,d0                           	| [$f694: tya]
	jbsr	write_message_da7f                	| [$f695: jsr write_message_da7f]
	move.w	(sp)+,d0                        	| [$f698: pla]
	jbsr	l_d9a6                            	| [$f699: jsr $d9a6]
	move.b	#0x0a,d0                        	| [$f69c: lda #$0a]
	jbsr	write_message_da7f                	| [$f69e: jsr write_message_da7f]
	OP_W_ON_ZP_ADDRESS	addq,player_select_timer_lsb_54,#1 |  [$f6a1: inc player_select_timer_lsb_54]
	OP_R_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f6a3: lda player_select_timer_lsb_54]
	cmp.b	#0x1f,d0                         	| [$f6a5: cmp #$1f]
	* bcc=>bcs (cmp above)
	jcs	l_f6bb                             	| [$f6a7: bcc $f6bb]
	clr.b	d0                               	| [$f6a9: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_lsb_54,d0 |  [$f6ab: sta player_select_timer_lsb_54]
	OP_R_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f6ad: lda player_select_timer_seconds_55]

	* decrease continue timer
	CLR_XC_FLAGS                           	| [$f6b0: sec]
	move.b	#0x01,d4	| [$f6b1: sbc #$01]
	sbcd	d4,d0	| [$f6b1: sbc #$01]
	PUSH_SR			| preserve carry
	OP_W_ON_ZP_ADDRESS	move,player_select_timer_seconds_55,d0 |  [$f6b3: sta player_select_timer_seconds_55]
	POP_SR          | restore carry
	 |  [$f6b5: cld]
	jcc	l_f6bb |  [$f6b6: bpl $f6bb]
	jra	l_f610                             	| [$f6b8: jra $f610]
l_f6bb:
	move.b	#0x01,d0                        	| [$f6bb: lda #$01]
	jbsr	l_d9a6                            	| [$f6bd: jsr $d9a6]
	move.b	#0x02,d0                        	| [$f6c0: lda #$02]
	jbsr	l_d9a6                            	| [$f6c2: jsr $d9a6]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f6c5: lda nb_credits_0035]
	GET_ADDRESS	coin_per_credit_0416       	| [$f6c7: cmp coin_per_credit_0416]
	cmp.b	(a0),d0                          	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_f712                             	| [$f6ca: bcc $f712]
	jbsr	l_d8ef                            	| [$f6cc: jsr $d8ef]
	GET_ADDRESS	coin_per_credit_0416       	| [$f6cf: ldx coin_per_credit_0416]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	bankswitch_copy_022d       	| [$f6d2: lda bankswitch_copy_022d, x]
	move.b	(a0,d1.w),d0                    	| [...]
	bpl	l_f712                             	| [$f6d5: bpl $f712]
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f6d7: lda nb_credits_0035]
	moveq	#1,d4 |  [$f6da: sec]
	sbcd	d4,d0 |  [$f6db: sbc coin_per_credit_0416]
	OP_W_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f6de: sta nb_credits_0035]
	 |  [$f6e0: cld]
	move.b	#0x01,d0                        	| [$f6e1: lda #$01]
	GET_ADDRESS	scroll_lock_07db                     	| [$f6e3: sta $07db]
	move.b	d0,(a0)                         	| [...]
	 |  [$f6e6: lda game_state_bits_46]
	| [$f6e8: and #$bf]
	OP_W_ON_ZP_ADDRESS	and,game_state_bits_46,#0xbf |  [$f6ea: sta game_state_bits_46]
	jbsr	unpack_background_screen_ec9d     	| [$f6ec: jsr unpack_background_screen_ec9d]
	jbsr	l_f7c8                            	| [$f6ef: jsr $f7c8]
	jbsr	l_f316                            	| [$f6f2: jsr $f316]
	jbsr	l_e6d3                            	| [$f6f5: jsr $e6d3]
	GET_ADDRESS	screen_id_07e4             	| [$f6f8: lda screen_id_07e4]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$f6fb: and #$0f]
	move.b	d0,d2                           	| [$f6fd: tay]
	GET_ADDRESS	0xf36a                     	| [$f6fe: lda $f36a, y]
	move.b	(a0,d2.w),d0                    	| [...]
	OP_R_ON_ZP_ADDRESS	move,score_array_57,d2 |  [$f701: ldy score_array_57]
	cmp.b	#0x08,d2                         	| [$f703: cpy #$08]
	* bcs=>bcc
	jcc	l_f70d                             	| [$f705: bcs $f70d]
	OP_R_ON_ZP_ADDRESS	move,0x58,d2 |  [$f707: ldy $58]
	cmp.b	#0x08,d2                         	| [$f709: cpy #$08]
	* bcc=>bcs (cmp above)
	jcs	l_f70f                             	| [$f70b: bcc $f70f]
l_f70d:
	move.b	#0x03,d0                        	| [$f70d: lda #$03]
l_f70f:
	jbsr	queue_sound_d7b8                  	| [$f70f: jsr queue_sound_d7b8]
l_f712:
	jra	l_f4e2                             	| [$f712: jra $f4e2]

* also checks service mode (bit 2)
check_coin_inserted_f715:
	OP_R_ON_ZP_ADDRESS	move,0x32,d0 |  [$f715: lda $32]
	jne	l_f732                             	| [$f717: jne $f732]
	OP_R_ON_ZP_ADDRESS	move,0x3b,d0 |  [$f719: lda $3b]
	beq	l_f721                             	| [$f71b: beq $f721]
	OP_W_ON_ZP_ADDRESS	subq,0x3b,#1 |  [$f71d: dec $3b]
	jne	l_f731                             	| [$f71f: jne $f731]
l_f721:
	jbsr	osd_read_system |  [$f721: lda system_1002]
	not.b	d0                               	| [$f724: eor #$ff] inverted logic
	and.b	#0x07,d0                         	| [$f726: and #$07]
	beq	l_f731                             	| [$f728: beq $f731]
* coin inserted, store value
	OP_W_ON_ZP_ADDRESS	move,0x32,d0 |  [$f72a: sta $32]
	clr.b	d0                               	| [$f72c: lda #$00]
	GET_ADDRESS	0x07f7                     	| [$f72e: sta $07f7]
	move.b	d0,(a0)                         	| [...]
l_f731:
	rts                                    	| [$f731: rts]

l_f732:
	OP_R_ON_ZP_ADDRESS	move,0x32,d0 |  [$f732: lda $32]
	and.b	#0x04,d0                         	| [$f734: and #$04]
	beq	l_f746                             	| [$f736: beq $f746]
* service mode?
	jbsr	osd_read_system |  [$f738: lda system_1002]
	not.b	d0                               	| [$f73b: eor #$ff]
	and.b	#0x04,d0                         	| [$f73d: and #$04]
	jne	l_f731                             	| [$f73f: jne $f731]
	clr.b	d2                               	| [$f741: ldy #$00]
	jra	l_f793                             	| [$f743: jra $f793]

l_f746:
	jbsr	osd_read_system |  [$f746: lda system_1002]
	not.b	d0                               	| [$f749: eor #$ff]
	and.b	#0x07,d0                         	| [$f74b: and #$07]
	OP_R_ON_ZP_ADDRESS	cmp,0x32,d0 |  [$f74d: cmp $32]
	jne	l_f75c                             	| [$f74f: jne $f75c]
	GET_ADDRESS	0x07f7                     	| [$f751: lda $07f7]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$f754: cmp #$ff]
	beq	l_f75b                             	| [$f756: beq $f75b]
	                     	| [$f758: inc $07f7]
	addq.b	#1,(a0)                         	| [...]
l_f75b:
	rts                                    	| [$f75b: rts]
l_f75c:
	GET_ADDRESS	0x07f7                     	| [$f75c: lda $07f7]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$f75f: cmp #$04]
	* bcc=>bcs (cmp above)
	jcs	l_f7aa                             	| [$f761: bcc $f7aa]
	clr.b	d1                               	| [$f763: ldx #$00]
	OP_R_ON_ZP_ADDRESS	move,0x32,d0 |  [$f765: lda $32]
	cmp.b	#0x01,d0                         	| [$f767: cmp #$01]
	beq	l_f76c                             	| [$f769: beq $f76c]
	addq.b	#1,d1                           	| [$f76b: inx]
l_f76c:
	jbsr	osd_read_dsw2 |  [$f76c: lda dsw2_1004]
	not.b	d0                               	| [$f76f: eor #$ff]
	and.b	#0x3f,d0                         	| [$f771: and #$3f]
	tst.b	d1                               	| [$f773: cpx #$00]
	beq	l_f77a                             	| [$f775: beq $f77a]
                                         | [$f777: lsr a]
                                         | [$f778: lsr a]
	lsr.b	#3,d0                            	| [$f779: lsr a]
l_f77a:
	and.b	#0x07,d0                         	| [$f77a: and #$07]
	move.b	d0,d2                           	| [$f77c: tay]
	cmp.b	#0x05,d0                         	| [$f77d: cmp #$05]
	* bcc=>bcs (cmp above)
	jcs	l_f793                             	| [$f77f: bcc $f793]
	INVERT_XC_FLAGS   | cmp optimization above inverted flags
	SBC_IMM	0x05                           	| [$f781: sbc #$05]
	move.b	d0,d2                           	| [$f783: tay]
	GET_ADDRESS	0x33                       	| [$f784: inc $33, x]
    addq.b	#1,(a0,d1.w)                 	| [...]
	                       	| [$f786: lda $33, x]
	move.b	(a0,d1.w),d0                    	| [...]
	GET_ADDRESS	0xf7af                     	| [$f788: cmp $f7af, y]
	cmp.b	(a0,d2.w),d0                     	| [...]
	* bcc=>bcs (cmp above)
	jcs	l_f7aa                             	| [$f78b: bcc $f7aa]
	clr.b	d0                               	| [$f78d: lda #$00]
	GET_ADDRESS	0x33                       	| [$f78f: sta $33, x]
    move.b	d0,(a0,d1.w)                 	| [...]
	clr.b	d2                               	| [$f791: ldy #$00]
* add one/several credits depending on coinage DSW
l_f793:
	OP_R_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f793: lda nb_credits_0035]
	SET_Z_FLAG  | required as abcd doesn't set Z on 0 result
	CLR_XC_FLAGS                           	| [$f796: clc]
	GET_ADDRESS	0xf7b2                     	| [$f797: adc $f7b2, y]
	move.b	(a0,d2.w),d4	| [...]
	abcd	d4,d0                    	| [...]
	 |  [$f79a: cld]
	jcc	l_f79f                             	| [$f79b: bcc $f79f]
* max 99 credits
	move.b	#0x99,d0                        	| [$f79d: lda #$99]
l_f79f:
	OP_W_ON_ZP_ADDRESS	move,nb_credits_0035,d0 |  [$f79f: sta nb_credits_0035]
* credit sound playing
	move.b	#0x34,d0                        	| [$f7a1: lda #$34]
	jbsr	osd_sound_start |  [$f7a3: sta sound_100d]
	move.b	#0x04,d0                        	| [$f7a6: lda #$04]
	OP_W_ON_ZP_ADDRESS	move,0x3b,d0 |  [$f7a8: sta $3b]
* ack press
l_f7aa:
	clr.b	d0                               	| [$f7aa: lda #$00]
	OP_W_ON_ZP_ADDRESS	move,0x32,d0 |  [$f7ac: sta $32]
	rts                                    	| [$f7ae: rts]

l_f7b7:
	jbsr	osd_read_dsw1 |  [$f7b7: lda dsw1_1003]
	bpl	l_f7c1                             	| [$f7ba: bpl $f7c1]
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d0 |  [$f7bc: lda current_object_index_4c]
	lsr.b	#1,d0                            	| [$f7be: lsr a]
	move.b	d0,d2                           	| [$f7bf: tay]
	rts                                    	| [$f7c0: rts]
l_f7c1:
	OP_R_ON_ZP_ADDRESS	move,current_object_index_4c,d2 |  [$f7c1: ldy current_object_index_4c]
	GET_ADDRESS	0x0042                     	| [$f7c3: lda $0042, y]
	move.b	(a0,d2.w),d0                    	| [...]
	move.b	d0,d2                           	| [$f7c6: tay]
	rts                                    	| [$f7c7: rts]
l_f7c8:
	jbsr	l_ec2f                            	| [$f7c8: jsr $ec2f]
	movem.w	d0,-(sp)                       	| [$f7cb: pha]
	                           	| [$f7cc: clc]
	add.b	#0x1b,d0                        	| [$f7cd: adc #$1b]
	jbsr	l_ee80                            	| [$f7cf: jsr $ee80]
	move.w	(sp)+,d0                        	| [$f7d2: pla]
	cmp.b	#0x04,d0                         	| [$f7d3: cmp #$04]
	jne	l_f7eb                             	| [$f7d5: jne $f7eb]
	move.b	#0x0f,d0                        	| [$f7d7: lda #$0f]
	jbsr	l_eddc                            	| [$f7d9: jsr $eddc]
	move.b	#0x10,d0                        	| [$f7dc: lda #$10]
	jbsr	l_eddc                            	| [$f7de: jsr $eddc]
	move.b	#0x11,d0                        	| [$f7e1: lda #$11]
	jbsr	l_eddc                            	| [$f7e3: jsr $eddc]
	move.b	#0x12,d0                        	| [$f7e6: lda #$12]
	jbsr	l_eddc                            	| [$f7e8: jsr $eddc]
l_f7eb:
	rts                                    	| [$f7eb: rts]
l_f7ec:
	move.b	#0x03,d2                        	| [$f7ec: ldy #$03]
	jbsr	osd_read_dsw1 |  [$f7ee: lda dsw1_1003]
	bpl	l_f7f5                             	| [$f7f1: bpl $f7f5]
	move.b	#0x01,d2                        	| [$f7f3: ldy #$01]
l_f7f5:
	GET_ADDRESS	player_1_controls_022e     	| [$f7f5: lda player_1_controls_022e, y]
	move.b	(a0,d2.w),d0                    	| [...]
	subq.b	#1,d2                           	| [$f7f8: dey]
l_f7f9:
							| [$f7f9: and player_1_controls_022e, y]
	and.b	(a0,d2.w),d0                     	| [...]
	subq.b	#1,d2                           	| [$f7fc: dey]
	bpl	l_f7f9                             	| [$f7fd: bpl $f7f9]
	and.b	#0xf0,d0                         	| [$f7ff: and #$f0]
	movem.w	d0,-(sp)                       	| [$f801: pha]
	jbsr	osd_read_dsw1 |  [$f802: lda dsw1_1003]
	not.b	d0                               	| [$f805: eor #$ff]
                                         | [$f807: lsr a]
                                         | [$f808: lsr a]
                                         | [$f809: lsr a]
	lsr.b	#4,d0                            	| [$f80a: lsr a]
	and.b	#0x03,d0                         	| [$f80b: and #$03]
	move.b	d0,d2                           	| [$f80d: tay]
	move.w	(sp)+,d0                        	| [$f80e: pla]
	GET_ADDRESS	0xf813                     	| [$f80f: and $f813, y]
	and.b	(a0,d2.w),d0                     	| [...]
	rts                                    	| [$f812: rts]

l_ff80:
	jra	l_a9a2                             	| [$ff80: jra $a9a2]
l_ff83:
	jra	queue_sound_d7b8                   	| [$ff83: jra queue_sound_d7b8]
	jra	l_bf50                             	| [$ff86: jra $bf50]

jump_table_5d2d:
	.long	l_5d41                           	|  $5d2d
	.long	l_5d41                           	|  $5d2f
	.long	l_5d65                           	|  $5d31
	.long	l_5d72                           	|  $5d33
	.long	l_5d72                           	|  $5d35
	.long	l_5d7a                           	|  $5d37
	.long	l_5de3                           	|  $5d39
	.long	l_5e07                           	|  $5d3b
	.long	l_5e1a                           	|  $5d3d
	.long	l_5e2d                           	|  $5d3f
	.long	l_6820                           	|  $5d41
jump_table_5eb0:
	.long	l_5ee4                           	|  $5eb0
	.long	l_5ee4                           	|  $5eb2
	.long	l_5ee4                           	|  $5eb4
	.long	l_5ee4                           	|  $5eb6
	.long	l_5ed0                           	|  $5eb8
	.long	l_5ed0                           	|  $5eba
	.long	l_5e5c                           	|  $5ebc
	.long	l_5eda                           	|  $5ebe
	.long	l_5ee9                           	|  $5ec0
	.long	l_5eda                           	|  $5ec2
	.long	l_5ead                           	|  $5ec4
	.long	l_5efd                           	|  $5ec6
	.long	l_5f19                           	|  $5ec8
	.long	l_5eda                           	|  $5eca
	.long	l_5f32                           	|  $5ecc
	.long	l_5eda                           	|  $5ece
player_behaviour_jump_table_633a:
	.long	l_6362                           	|  $633a
	.long	l_6381                           	|  $633c
	.long	l_6388                           	|  $633e
	.long	l_638f                           	|  $6340
	.long	l_6396                           	|  $6342
	.long	decide_to_block_639d             	|  $6344
	.long	l_63b3                           	|  $6346
	.long	l_63c5                           	|  $6348
	.long	l_63d4                           	|  $634a
	.long	move_to_ball_reception_63fe      	|  $634c
	.long	l_6337                           	|  $634e  loop on jra... strange
	.long	l_6422                           	|  $6350
	.long	l_6453                           	|  $6352
	.long	l_647d                           	|  $6354
	.long	l_63d4                           	|  $6356
	.long	move_to_ball_reception_63fe      	|  $6358
	.long	ball_touched_ground_6498         	|  $635a
	.long	l_649f                           	|  $635c
	.long	player_service_64a6              	|  $635e
	.long	player_awaiting_service_64ad     	|  $6360
jump_table_66ee:
	.long	l_67d9                           	|  $66ee
	.long	l_67c7                           	|  $66f0
	.long	l_67b4                           	|  $66f2
	.long	l_6775                           	|  $66f4
	.long	l_6775                           	|  $66f6
	.long	l_67c7                           	|  $66f8
	.long	l_688f                           	|  $66fa
	.long	l_6809                           	|  $66fc
	.long	l_6809                           	|  $66fe
	.long	l_67c7                           	|  $6700
	.long	l_6809                           	|  $6702
	.long	l_6809                           	|  $6704
	.long	l_67c7                           	|  $6706
	.long	l_67c7                           	|  $6708
	.long	l_67c7                           	|  $670a
	.long	l_6727                           	|  $670c
	.long	l_6727                           	|  $670e
	.long	l_67c7                           	|  $6710
	.long	l_67c7                           	|  $6712
	.long	l_67c7                           	|  $6714
jump_table_6a05:
	.long	l_6a18                           	|  $6a05
	.long	l_6af8                           	|  $6a07
	.long	l_6a11                           	|  $6a09
	.long	l_6a11                           	|  $6a0b
	.long	l_6a11                           	|  $6a0d
	.long	l_6a2b                           	|  $6a0f
jump_table_6bba:
	.long	l_6bb7                           	|  $6bba
	.long	l_6bb7                           	|  $6bbc
	.long	l_6bfe                           	|  $6bbe
	.long	l_6d7d                           	|  $6bc0
	.long	l_6bfe                           	|  $6bc2
	.long	l_6c19                           	|  $6bc4
	.long	l_6c4f                           	|  $6bc6
	.long	l_6bae                           	|  $6bc8
	.long	l_6bb7                           	|  $6bca
	.long	l_6bb7                           	|  $6bcc
	.long	l_6bfe                           	|  $6bce
	.long	l_6bfe                           	|  $6bd0
	.long	l_6bfe                           	|  $6bd2
	.long	l_6bb7                           	|  $6bd4
	.long	l_6bb7                           	|  $6bd6
	.long	l_6bb7                           	|  $6bd8
	.long	l_6bb7                           	|  $6bda
	.long	l_6bb7                           	|  $6bdc
	.long	l_6bb7                           	|  $6bde
	.long	l_6e23                           	|  $6be0
	.long	l_6e23                           	|  $6be2
	.long	l_6d7d                           	|  $6be4
	.long	l_6da0                           	|  $6be6
	.long	l_6bb7                           	|  $6be8
	.long	l_6bb7                           	|  $6bea
	.long	l_6c93                           	|  $6bec
	.long	l_6c93                           	|  $6bee
	.long	l_6e23                           	|  $6bf0
	.long	l_6e23                           	|  $6bf2
	.long	l_6e23                           	|  $6bf4
	.long	l_6bb7                           	|  $6bf6
	.long	l_6bb7                           	|  $6bf8
	.long	l_6bb7                           	|  $6bfa
	.long	l_6bb7                           	|  $6bfc

jump_table_707a:
	.long	l_70a6                           	|  $707a
	.long	l_70a6                           	|  $707c
	.long	l_70cb                           	|  $707e
	.long	l_7178                           	|  $7080
	.long	l_7209                           	|  $7082
	.long	l_7289                           	|  $7084
	.long	l_7322                           	|  $7086
	.long	l_740a                           	|  $7088
	.long	l_7547                           	|  $708a
	.long	l_76b0                           	|  $708c
	.long	l_786d                           	|  $708e
	.long	l_786d                           	|  $7090
	.long	l_79b2                           	|  $7092
	.long	l_79b2                           	|  $7094
	.long	l_79b2                           	|  $7096
	.long	l_7d60                           	|  $7098
	.long	l_7df1                           	|  $709a
	.long	l_7eeb                           	|  $709c
	.long	l_7eff                           	|  $709e
	.long	l_7f13                           	|  $70a0
	.long	l_8014                           	|  $70a2
	.long	l_8167                           	|  $70a4
jump_table_7345:
	.long	jump_table_7345                  	|  $7345
	.long	l_738c                           	|  $7347
	.long	l_7391                           	|  $7349
	.long	l_7396                           	|  $734b
	.long	l_8009                           	|  $734d
jump_table_7430:
	.long	jump_table_7430                  	|  $7430
	.long	l_7444                           	|  $7432
	.long	l_74a2                           	|  $7434
	.long	l_74a7                           	|  $7436
	.long	l_74ae                           	|  $7438
	.long	l_8009                           	|  $743a
jump_table_756d:
	.long	jump_table_756d                  	|  $756d
	.long	l_75a6                           	|  $756f
	.long	l_75ab                           	|  $7571
	.long	l_75fa                           	|  $7573
	.long	l_75ff                           	|  $7575
	.long	l_760b                           	|  $7577
	.long	l_8009                           	|  $7579
jump_table_76d6:
	.long	jump_table_76d6                  	|  $76d6
	.long	l_7727                           	|  $76d8
	.long	l_772c                           	|  $76da
	.long	l_7785                           	|  $76dc
	.long	l_778a                           	|  $76de
	.long	l_778f                           	|  $76e0
	.long	l_7840                           	|  $76e2
	.long	l_8009                           	|  $76e4
jump_table_788d:
	.long	jump_table_788d                  	|  $788d
	.long	l_78e4                           	|  $788f
	.long	l_78e4                           	|  $7891
	.long	player_preparing_for_pass_7909   	|  $7893
	.long	player_preparing_for_pass_7909   	|  $7895
	.long	l_8009                           	|  $7897
jump_table_79da:
	.long	jump_table_79da                  	|  $79da
	.long	l_7ae5                           	|  $79dc
	.long	l_7b16                           	|  $79de
	.long	l_7b23                           	|  $79e0
	.long	l_7b35                           	|  $79e2
	.long	l_7b42                           	|  $79e4
	.long	l_7aae                           	|  $79e6
	.long	l_7aae                           	|  $79e8
	.long	l_7d45                           	|  $79ea
	.long	l_8009                           	|  $79ec
jump_table_7f44:
	.long	jump_table_7f44                  	|  $7f44
	.long	l_7f66                           	|  $7f46
	.long	l_7f75                           	|  $7f48
	.long	l_7f85                           	|  $7f4a
	.long	l_8009                           	|  $7f4c
jump_table_871d:
	.long	l_873d                           	|  $871d
	.long	l_876c                           	|  $871f
	.long	l_87a6                           	|  $8721
	.long	l_873d                           	|  $8723
	.long	l_876c                           	|  $8725
	.long	l_87a6                           	|  $8727
	.long	l_873d                           	|  $8729
	.long	l_876c                           	|  $872b
	.long	l_87a6                           	|  $872d
	.long	l_87d5                           	|  $872f
	.long	l_87d5                           	|  $8731
	.long	l_87d5                           	|  $8733
	.long	l_87d5                           	|  $8735
	.long	l_87d5                           	|  $8737
	.long	l_87d5                           	|  $8739
	.long	l_87d5                           	|  $873b
jump_table_918a:
	.long	l_9210                           	|  $918a
	.long	l_9210                           	|  $918c
	.long	l_9210                           	|  $918e
	.long	l_9256                           	|  $9190
	.long	l_9256                           	|  $9192
	.long	l_9256                           	|  $9194
	.long	l_9286                           	|  $9196
	.long	l_9286                           	|  $9198
	.long	l_9286                           	|  $919a
	.long	l_9337                           	|  $919c
	.long	l_93a2                           	|  $919e
	.long	l_93a2                           	|  $91a0
	.long	l_94f5                           	|  $91a2
	.long	l_953b                           	|  $91a4
	.long	l_955a                           	|  $91a6
	.long	l_960f                           	|  $91a8
	.long	l_964a                           	|  $91aa
	.long	l_96e9                           	|  $91ac
	.long	l_984e                           	|  $91ae
	.long	l_9872                           	|  $91b0
	.long	l_9872                           	|  $91b2
	.long	l_9970                           	|  $91b4
	.long	l_9970                           	|  $91b6
	.long	l_998a                           	|  $91b8
	.long	l_99ab                           	|  $91ba
	.long	l_99df                           	|  $91bc
	.long	l_9a22                           	|  $91be
	.long	l_9a22                           	|  $91c0
	.long	l_9a22                           	|  $91c2
	.long	l_9a58                           	|  $91c4
	.long	l_9ac6                           	|  $91c6
	.long	l_9ad4                           	|  $91c8
	.long	l_9ae5                           	|  $91ca
	.long	l_9afe                           	|  $91cc
	.long	l_9b0f                           	|  $91ce
	.long	l_9bb2                           	|  $91d0
	.long	l_9bda                           	|  $91d2
	.long	invalid_0000                     	|  $91d4			invalid
	.long	l_9bfb                           	|  $91d6
jump_table_92ea:
	.long	l_92f0                           	|  $92ea
	.long	l_930e                           	|  $92ec
	.long	l_932e                           	|  $92ee
jump_table_a30e:
	.long	l_a328                           	|  $a30e
	.long	l_a328                           	|  $a310
	.long	l_a328                           	|  $a312
	.long	l_a328                           	|  $a314
	.long	l_a328                           	|  $a316
	.long	l_a328                           	|  $a318
	.long	l_a328                           	|  $a31a
	.long	l_a4b2                           	|  $a31c
	.long	l_a4b2                           	|  $a31e
	.long	l_a514                           	|  $a320
	.long	l_a591                           	|  $a322
	.long	l_a591                           	|  $a324
	.long	l_a591                           	|  $a326
jump_table_a3d3:
	.long	l_a3e1                           	|  $a3d3
	.long	l_a3ee                           	|  $a3d5
	.long	l_a3fd                           	|  $a3d7
	.long	l_a400                           	|  $a3d9
	.long	l_a403                           	|  $a3db
	.long	l_a406                           	|  $a3dd
	.long	l_a415                           	|  $a3df
jump_table_a65e:
	.long	l_a668                           	|  $a65e
	.long	l_a6a8                           	|  $a660
	.long	l_a6a8                           	|  $a662
	.long	l_a6a8                           	|  $a664
	.long	l_a6a8                           	|  $a666
jump_table_a749:
	.long	l_a751                           	|  $a749
	.long	l_a791                           	|  $a74b
	.long	l_a7b8                           	|  $a74d
	.long	l_a816                           	|  $a74f
jump_table_b7a7:
	.long	l_b7b9                           	|  $b7a7
	.long	l_b7b9                           	|  $b7a9
	.long	l_b7e7                           	|  $b7ab
	.long	l_b7e7                           	|  $b7ad
	.long	l_b7e7                           	|  $b7af
	.long	l_b7b7                           	|  $b7b1
	.long	l_b7b7                           	|  $b7b3
	.long	l_b884                           	|  $b7b5
jump_table_ba8c:
	.long	unknown_ball_behaviour_baae      	|  $ba8c
	.long	unknown_ball_behaviour_baae      	|  $ba8e
	.long	unknown_ball_behaviour_baae      	|  $ba90
	.long	unknown_ball_behaviour_baae      	|  $ba92
	.long	unknown_ball_behaviour_baae      	|  $ba94
	.long	unknown_ball_behaviour_baae      	|  $ba96
	.long	unknown_ball_behaviour_baae      	|  $ba98
	.long	unknown_ball_behaviour_baae      	|  $ba9a
	.long	unknown_ball_behaviour_baae      	|  $ba9c
	.long	unknown_ball_behaviour_baae      	|  $ba9e
	.long	ball_in_play_bbf5                	|  $baa0
	.long	ball_in_play_bbf5                	|  $baa2
	.long	unknown_ball_behaviour_baae      	|  $baa4
	.long	unknown_ball_behaviour_baae      	|  $baa6
	.long	unknown_ball_behaviour_baae      	|  $baa8
	.long	ball_on_ground_bc11              	|  $baaa
	.long	ball_before_serve_bc97           	|  $baac

jump_table_be61:
	.long	l_c50e                           	|  $be61
	.long	l_c466                           	|  $be63
	.long	l_be8a                           	|  $be65
	.long	l_c05c                           	|  $be67
	.long	l_c05c                           	|  $be69
	.long	l_c05c                           	|  $be6b
	.long	l_c05c                           	|  $be6d
	.long	l_c05c                           	|  $be6f
	.long	l_c05c                           	|  $be71
	.long	l_c05c                           	|  $be73
	.long	l_c05c                           	|  $be75
	.long	l_c05c                           	|  $be77
	.long	l_c05c                           	|  $be79
	.long	l_c4dd                           	|  $be7b
	.long	l_bf15                           	|  $be7d
	.long	l_be83                           	|  $be7f
	.long	l_be8a                           	|  $be81

	.include	"us_champ_vball_bank1.68k"

