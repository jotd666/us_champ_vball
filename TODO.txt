- draw net sprites (not poles) only if some x/y sprites are too close (right side players very close to the net)
  for that we need to make a separate net sprites table (not with the "do not draw" table)
  values: +$8F+3/4 between $96 and $96+8?
- 2P: we have to rip more tiles (net with ball?)
- 2P: check that (with net) we can fail a serve!!
- map glitch: scroll block should be only done when map context is set (do a special case in 0xEA74 if map screen is set)
- maybe not include some unused sounds to save memory?

minor:

- increase screen height as when screen scrolls up, players feet blit 'wrap' to the top other planes (or use clipping)
- sometimes starts with 10 credits!!
- still missing some black pixels (big score sprites) not always... why????
- hawaii: X scrolling wraps only in that case grrrrrr

optims

- 32/64 colors: identify colors used only on top of tiles: create an array with "palette entry => min/max y" for each color of the background
  simpler: find a zone where color 1 & 2 isn't used at all (scrolling !!!)
- use CPU-driven erase?
- more horizontal grouping (x3/x4) marginal gain as not often displayed
- better bank switching: use A5 for bank base to get more speed
- optimize bob erase/redraw at least for referee and score sprites (not trivial as the position of the sprites
  change with Y priority)
- level 1 then map context: make a kludge to avoid having to reload level 1 tiles+sprites after map
  we can probably load map with level 1 tiles+sprites loaded but that won't work for higher levels
  so maybe create a context only for "select player" screen (with only a few tiles/sprites) and make a
  special case using screen type variable on top of palette value









converter:
- if SBC_IMM	0x00 found later, don't optimize sbc into sub!
- flag manipulation can sometimes just use ANDI/ORI/EORI CCR to be faster!
- addx: set Z flag before
- sbcd/abcd warning: check bpl flag afterwards, change to bcc
- alternating OP_W_ON_ZP_ADDRESS and OP_R_ON_ZP_ADDRESS: remove PUSH/POP SR
- add or addx + addq + addx without jmp/jra/rts/CLR_XC_FLAGS/lsr/lsl/asr/asl/ror/rol => error

start log regs: f519: start ball (serve)

debug bankswitch change on MAME (22D is the copy in readable memory):
doesn't work as 22D is sometimes updated BEFORE bankswitch

wpset 1009,1,W,wpdata!=b@22D

* eaff writes 60 continuously, not interesting:

wpset 1009,1,W,pc!=$eaff

fix random (so demo does exactly the same each time!):

bpset D00A,,{A=0;PC=AFFE;g}

log sound:

wpset 100D,1,W,,{print A;g}

stop music:

bpset d7e7,A<0X15,{PC=$D7EA;g}

capture sound: remove demo sounds from dsw

bpset f7a3,,{A=$xx;g}

snapshot with uniform non-black background
>fill 2000,1000,0
>fill 3000,1000,8
>snap




identify each music as there are cut-scenes & other stuff removed from US version!!!
2: select/start music
5: intro music
(
9: level 1 music
8: level 4 music
7: level 3 music
6: level 2 music
4: unknown??
3: stressful level end music (finish)

A: unknown blues??? cut scene
B: unknown blues??? the same??? cut scene
c: short tune
D: naval base last level music
E: lost!
F: ominous very short tune
10: game over???
11: credit inserted
12: another upbeat music
13: short upbeat
14: won!
15: unknown ???
16: sfx....

$34/$1F ?: credit inserted
